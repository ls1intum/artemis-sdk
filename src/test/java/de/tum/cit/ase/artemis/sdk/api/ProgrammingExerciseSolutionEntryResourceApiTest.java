/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tum.cit.ase.artemis.sdk.api;

import de.tum.cit.ase.artemis.sdk.*;
import de.tum.cit.ase.artemis.sdk.auth.*;
import de.tum.cit.ase.artemis.sdk.model.ProgrammingExerciseSolutionEntry;
import java.util.Set;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProgrammingExerciseSolutionEntryResourceApi
 */
public class ProgrammingExerciseSolutionEntryResourceApiTest {

    private final ProgrammingExerciseSolutionEntryResourceApi api = new ProgrammingExerciseSolutionEntryResourceApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createBehavioralSolutionEntriesTest() throws ApiException {
        //Long exerciseId = null;
        //List<ProgrammingExerciseSolutionEntry> response = api.createBehavioralSolutionEntries(exerciseId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createSolutionEntryForTestCaseTest() throws ApiException {
        //Long exerciseId = null;
        //Long testCaseId = null;
        //ProgrammingExerciseSolutionEntry programmingExerciseSolutionEntry = null;
        //ProgrammingExerciseSolutionEntry response = api.createSolutionEntryForTestCase(exerciseId, testCaseId, programmingExerciseSolutionEntry);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createStructuralSolutionEntriesTest() throws ApiException {
        //Long exerciseId = null;
        //List<ProgrammingExerciseSolutionEntry> response = api.createStructuralSolutionEntries(exerciseId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAllSolutionEntriesForExerciseTest() throws ApiException {
        //Long exerciseId = null;
        //api.deleteAllSolutionEntriesForExercise(exerciseId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSolutionEntryTest() throws ApiException {
        //Long exerciseId = null;
        //Long testCaseId = null;
        //Long solutionEntryId = null;
        //api.deleteSolutionEntry(exerciseId, testCaseId, solutionEntryId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllSolutionEntriesTest() throws ApiException {
        //Long exerciseId = null;
        //Set<ProgrammingExerciseSolutionEntry> response = api.getAllSolutionEntries(exerciseId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSolutionEntriesForCodeHintTest() throws ApiException {
        //Long exerciseId = null;
        //Long codeHintId = null;
        //Set<ProgrammingExerciseSolutionEntry> response = api.getSolutionEntriesForCodeHint(exerciseId, codeHintId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSolutionEntriesForTestCaseTest() throws ApiException {
        //Long exerciseId = null;
        //Long testCaseId = null;
        //Set<ProgrammingExerciseSolutionEntry> response = api.getSolutionEntriesForTestCase(exerciseId, testCaseId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSolutionEntryTest() throws ApiException {
        //Long exerciseId = null;
        //Long solutionEntryId = null;
        //ProgrammingExerciseSolutionEntry response = api.getSolutionEntry(exerciseId, solutionEntryId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateSolutionEntryTest() throws ApiException {
        //Long exerciseId = null;
        //Long testCaseId = null;
        //Long solutionEntryId = null;
        //ProgrammingExerciseSolutionEntry programmingExerciseSolutionEntry = null;
        //ProgrammingExerciseSolutionEntry response = api.updateSolutionEntry(exerciseId, testCaseId, solutionEntryId, programmingExerciseSolutionEntry);
        // TODO: test validations
    }

}
