/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tum.cit.ase.artemis.sdk.api;

import de.tum.cit.ase.artemis.sdk.*;
import de.tum.cit.ase.artemis.sdk.auth.*;
import de.tum.cit.ase.artemis.sdk.model.FileMove;
import de.tum.cit.ase.artemis.sdk.model.FileSubmission;
import de.tum.cit.ase.artemis.sdk.model.RepositoryStatusDTO;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TestRepositoryResourceApi
 */
public class TestRepositoryResourceApiTest {

    private final TestRepositoryResourceApi api = new TestRepositoryResourceApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void commitChangesTest() throws ApiException {
        //Long exerciseId = null;
        //api.commitChanges(exerciseId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createFileTest() throws ApiException {
        //Long exerciseId = null;
        //String _file = null;
        //api.createFile(exerciseId, _file);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createFolderTest() throws ApiException {
        //Long exerciseId = null;
        //String folder = null;
        //api.createFolder(exerciseId, folder);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteFileTest() throws ApiException {
        //Long exerciseId = null;
        //String _file = null;
        //api.deleteFile(exerciseId, _file);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFileTest() throws ApiException {
        //Long exerciseId = null;
        //String _file = null;
        //List<byte[]> response = api.getFile(exerciseId, _file);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFilesTest() throws ApiException {
        //Long exerciseId = null;
        //Map<String, String> response = api.getFiles(exerciseId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getStatusTest() throws ApiException {
        //Long exerciseId = null;
        //RepositoryStatusDTO response = api.getStatus(exerciseId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pullChangesTest() throws ApiException {
        //Long exerciseId = null;
        //api.pullChanges(exerciseId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void renameFileTest() throws ApiException {
        //Long exerciseId = null;
        //FileMove fileMove = null;
        //api.renameFile(exerciseId, fileMove);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void resetToLastCommitTest() throws ApiException {
        //Long exerciseId = null;
        //api.resetToLastCommit(exerciseId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateTestFilesTest() throws ApiException {
        //Long exerciseId = null;
        //Boolean commit = null;
        //List<FileSubmission> fileSubmission = null;
        //Map<String, String> response = api.updateTestFiles(exerciseId, commit, fileSubmission);
        // TODO: test validations
    }

}
