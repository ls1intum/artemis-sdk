/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tum.cit.ase.artemis.sdk.api;

import de.tum.cit.ase.artemis.sdk.*;
import de.tum.cit.ase.artemis.sdk.auth.*;
import de.tum.cit.ase.artemis.sdk.model.ManagedUserVM;
import de.tum.cit.ase.artemis.sdk.model.User;
import de.tum.cit.ase.artemis.sdk.model.UserDTO;
import de.tum.cit.ase.artemis.sdk.model.UserPageableSearchDTO;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AdminUserResourceApi
 */
public class AdminUserResourceApiTest {

    private final AdminUserResourceApi api = new AdminUserResourceApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createUserTest() throws ApiException {
        //ManagedUserVM managedUserVM = null;
        //User response = api.createUser(managedUserVM);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteUserTest() throws ApiException {
        //String login = null;
        //api.deleteUser(login);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteUsersTest() throws ApiException {
        //List<String> login = null;
        //List<String> response = api.deleteUsers(login);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllUsersTest() throws ApiException {
        //UserPageableSearchDTO userSearch = null;
        //List<UserDTO> response = api.getAllUsers(userSearch);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAuthoritiesTest() throws ApiException {
        //List<String> response = api.getAuthorities();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void syncUserViaLdapTest() throws ApiException {
        //Long userId = null;
        //UserDTO response = api.syncUserViaLdap(userId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateUserTest() throws ApiException {
        //ManagedUserVM managedUserVM = null;
        //UserDTO response = api.updateUser(managedUserVM);
        // TODO: test validations
    }

}
