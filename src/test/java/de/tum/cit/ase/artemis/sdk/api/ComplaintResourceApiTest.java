/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tum.cit.ase.artemis.sdk.api;

import de.tum.cit.ase.artemis.sdk.*;
import de.tum.cit.ase.artemis.sdk.auth.*;
import de.tum.cit.ase.artemis.sdk.model.Complaint;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ComplaintResourceApi
 */
public class ComplaintResourceApiTest {

    private final ComplaintResourceApi api = new ComplaintResourceApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createComplaintTest() throws ApiException {
        //Complaint complaint = null;
        //Complaint response = api.createComplaint(complaint);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createComplaintForExamExerciseTest() throws ApiException {
        //Long examId = null;
        //Complaint complaint = null;
        //Complaint response = api.createComplaintForExamExercise(examId, complaint);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getComplaintBySubmissionIdTest() throws ApiException {
        //Long submissionId = null;
        //Complaint response = api.getComplaintBySubmissionId(submissionId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getComplaintsByCourseIdTest() throws ApiException {
        //Long courseId = null;
        //String complaintType = null;
        //Long tutorId = null;
        //Boolean allComplaintsForTutor = null;
        //List<Complaint> response = api.getComplaintsByCourseId(courseId, complaintType, tutorId, allComplaintsForTutor);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getComplaintsByCourseIdAndExamIdTest() throws ApiException {
        //Long courseId = null;
        //Long examId = null;
        //List<Complaint> response = api.getComplaintsByCourseIdAndExamId(courseId, examId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getComplaintsByExerciseIdTest() throws ApiException {
        //Long exerciseId = null;
        //String complaintType = null;
        //Long tutorId = null;
        //List<Complaint> response = api.getComplaintsByExerciseId(exerciseId, complaintType, tutorId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getComplaintsForTestRunDashboardTest() throws ApiException {
        //Long exerciseId = null;
        //List<Complaint> response = api.getComplaintsForTestRunDashboard(exerciseId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getComplaintsForTutorTest() throws ApiException {
        //String complaintType = null;
        //List<Complaint> response = api.getComplaintsForTutor(complaintType);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMoreFeedbackRequestsForAssessmentDashboardTest() throws ApiException {
        //Long exerciseId = null;
        //List<Complaint> response = api.getMoreFeedbackRequestsForAssessmentDashboard(exerciseId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNumberOfAllowedComplaintsInCourseTest() throws ApiException {
        //Long courseId = null;
        //Boolean teamMode = null;
        //Long response = api.getNumberOfAllowedComplaintsInCourse(courseId, teamMode);
        // TODO: test validations
    }

}
