/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tum.cit.ase.artemis.sdk.api;

import de.tum.cit.ase.artemis.sdk.*;
import de.tum.cit.ase.artemis.sdk.auth.*;
import java.io.File;
import de.tum.cit.ase.artemis.sdk.model.PageableSearchDTOString;
import de.tum.cit.ase.artemis.sdk.model.SearchResultPageDTOTextExercise;
import de.tum.cit.ase.artemis.sdk.model.StudentParticipation;
import de.tum.cit.ase.artemis.sdk.model.SubmissionExportOptionsDTO;
import de.tum.cit.ase.artemis.sdk.model.TextExercise;
import de.tum.cit.ase.artemis.sdk.model.TextPlagiarismResult;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TextExerciseResourceApi
 */
public class TextExerciseResourceApiTest {

    private final TextExerciseResourceApi api = new TextExerciseResourceApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void checkPlagiarismTest() throws ApiException {
        //Long exerciseId = null;
        //Float similarityThreshold = null;
        //Integer minimumScore = null;
        //Integer minimumSize = null;
        //TextPlagiarismResult response = api.checkPlagiarism(exerciseId, similarityThreshold, minimumScore, minimumSize);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createTextExerciseTest() throws ApiException {
        //TextExercise textExercise = null;
        //TextExercise response = api.createTextExercise(textExercise);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteTextExerciseTest() throws ApiException {
        //Long exerciseId = null;
        //api.deleteTextExercise(exerciseId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void exportSubmissionsTest() throws ApiException {
        //Long exerciseId = null;
        //SubmissionExportOptionsDTO submissionExportOptionsDTO = null;
        //File response = api.exportSubmissions(exerciseId, submissionExportOptionsDTO);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllExercisesOnPageTest() throws ApiException {
        //PageableSearchDTOString search = null;
        //Boolean isCourseFilter = null;
        //Boolean isExamFilter = null;
        //SearchResultPageDTOTextExercise response = api.getAllExercisesOnPage(search, isCourseFilter, isExamFilter);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDataForTextEditorTest() throws ApiException {
        //Long participationId = null;
        //StudentParticipation response = api.getDataForTextEditor(participationId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPlagiarismResultTest() throws ApiException {
        //Long exerciseId = null;
        //TextPlagiarismResult response = api.getPlagiarismResult(exerciseId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTextExerciseTest() throws ApiException {
        //Long exerciseId = null;
        //TextExercise response = api.getTextExercise(exerciseId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTextExercisesForCourseTest() throws ApiException {
        //Long courseId = null;
        //List<TextExercise> response = api.getTextExercisesForCourse(courseId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void importExerciseTest() throws ApiException {
        //Long sourceExerciseId = null;
        //TextExercise textExercise = null;
        //TextExercise response = api.importExercise(sourceExerciseId, textExercise);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void reEvaluateAndUpdateTextExerciseTest() throws ApiException {
        //Long exerciseId = null;
        //TextExercise textExercise = null;
        //Boolean deleteFeedback = null;
        //TextExercise response = api.reEvaluateAndUpdateTextExercise(exerciseId, textExercise, deleteFeedback);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateTextExerciseTest() throws ApiException {
        //TextExercise textExercise = null;
        //String notificationText = null;
        //TextExercise response = api.updateTextExercise(textExercise, notificationText);
        // TODO: test validations
    }

}
