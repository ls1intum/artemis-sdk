/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tum.cit.ase.artemis.sdk.api;

import de.tum.cit.ase.artemis.sdk.*;
import de.tum.cit.ase.artemis.sdk.auth.*;
import de.tum.cit.ase.artemis.sdk.model.Course;
import de.tum.cit.ase.artemis.sdk.model.Team;
import de.tum.cit.ase.artemis.sdk.model.TeamSearchUserDTO;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TeamResourceApi
 */
public class TeamResourceApiTest {

    private final TeamResourceApi api = new TeamResourceApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createTeamTest() throws ApiException {
        //Long exerciseId = null;
        //Team team = null;
        //Team response = api.createTeam(exerciseId, team);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteTeamTest() throws ApiException {
        //Long exerciseId = null;
        //Long teamId = null;
        //api.deleteTeam(exerciseId, teamId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void existsTeamByShortNameTest() throws ApiException {
        //Long courseId = null;
        //String shortName = null;
        //Boolean response = api.existsTeamByShortName(courseId, shortName);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCourseWithExercisesAndParticipationsForTeamTest() throws ApiException {
        //Long courseId = null;
        //String teamShortName = null;
        //Course response = api.getCourseWithExercisesAndParticipationsForTeam(courseId, teamShortName);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTeamTest() throws ApiException {
        //Long exerciseId = null;
        //Long teamId = null;
        //Team response = api.getTeam(exerciseId, teamId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTeamsForExerciseTest() throws ApiException {
        //Long exerciseId = null;
        //Long teamOwnerId = null;
        //List<Team> response = api.getTeamsForExercise(exerciseId, teamOwnerId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void importTeamsFromListTest() throws ApiException {
        //Long exerciseId = null;
        //String importStrategyType = null;
        //List<Team> team = null;
        //List<Team> response = api.importTeamsFromList(exerciseId, importStrategyType, team);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void importTeamsFromSourceExerciseTest() throws ApiException {
        //Long destinationExerciseId = null;
        //Long sourceExerciseId = null;
        //String importStrategyType = null;
        //List<Team> response = api.importTeamsFromSourceExercise(destinationExerciseId, sourceExerciseId, importStrategyType);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchTeamInExerciseTest() throws ApiException {
        //Long courseId = null;
        //Long exerciseId = null;
        //String loginOrName = null;
        //List<TeamSearchUserDTO> response = api.searchTeamInExercise(courseId, exerciseId, loginOrName);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateTeamTest() throws ApiException {
        //Long exerciseId = null;
        //Long teamId = null;
        //Team team = null;
        //Team response = api.updateTeam(exerciseId, teamId, team);
        // TODO: test validations
    }

}
