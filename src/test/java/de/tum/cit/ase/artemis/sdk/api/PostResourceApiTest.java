/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tum.cit.ase.artemis.sdk.api;

import de.tum.cit.ase.artemis.sdk.*;
import de.tum.cit.ase.artemis.sdk.auth.*;
import de.tum.cit.ase.artemis.sdk.model.Pageable;
import de.tum.cit.ase.artemis.sdk.model.Post;
import de.tum.cit.ase.artemis.sdk.model.PostContextFilter;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PostResourceApi
 */
public class PostResourceApiTest {

    private final PostResourceApi api = new PostResourceApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void computeSimilarityScoresWitCoursePostsTest() throws ApiException {
        //Long courseId = null;
        //Post post = null;
        //List<Post> response = api.computeSimilarityScoresWitCoursePosts(courseId, post);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createPostTest() throws ApiException {
        //Long courseId = null;
        //Post post = null;
        //Post response = api.createPost(courseId, post);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deletePostTest() throws ApiException {
        //Long courseId = null;
        //Long postId = null;
        //api.deletePost(courseId, postId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllPostTagsForCourseTest() throws ApiException {
        //Long courseId = null;
        //List<String> response = api.getAllPostTagsForCourse(courseId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPostsInCourseTest() throws ApiException {
        //Pageable pageable = null;
        //PostContextFilter postContextFilter = null;
        //Long courseId = null;
        //Boolean pagingEnabled = null;
        //List<Post> response = api.getPostsInCourse(pageable, postContextFilter, courseId, pagingEnabled);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateDisplayPriorityTest() throws ApiException {
        //Long courseId = null;
        //Long postId = null;
        //String displayPriority = null;
        //Post response = api.updateDisplayPriority(courseId, postId, displayPriority);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updatePostTest() throws ApiException {
        //Long courseId = null;
        //Long postId = null;
        //Post post = null;
        //Post response = api.updatePost(courseId, postId, post);
        // TODO: test validations
    }

}
