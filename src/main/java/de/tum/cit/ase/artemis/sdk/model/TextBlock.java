/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tum.cit.ase.artemis.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import de.tum.cit.ase.artemis.sdk.JSON;


/**
 * TextBlock
 */
@JsonPropertyOrder({
  TextBlock.JSON_PROPERTY_ID,
  TextBlock.JSON_PROPERTY_TEXT,
  TextBlock.JSON_PROPERTY_START_INDEX,
  TextBlock.JSON_PROPERTY_END_INDEX,
  TextBlock.JSON_PROPERTY_NUMBER_OF_AFFECTED_SUBMISSIONS,
  TextBlock.JSON_PROPERTY_TYPE,
  TextBlock.JSON_PROPERTY_POSITION_IN_CLUSTER
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-02-23T10:41:24.492016Z[Etc/UTC]")
public class TextBlock {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_TEXT = "text";
  private String text;

  public static final String JSON_PROPERTY_START_INDEX = "startIndex";
  private Integer startIndex;

  public static final String JSON_PROPERTY_END_INDEX = "endIndex";
  private Integer endIndex;

  public static final String JSON_PROPERTY_NUMBER_OF_AFFECTED_SUBMISSIONS = "numberOfAffectedSubmissions";
  private Integer numberOfAffectedSubmissions;

  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    AUTOMATIC("AUTOMATIC"),
    
    MANUAL("MANUAL");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  public static final String JSON_PROPERTY_POSITION_IN_CLUSTER = "positionInCluster";
  private Integer positionInCluster;

  public TextBlock() { 
  }

  public TextBlock id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public TextBlock text(String text) {
    this.text = text;
    return this;
  }

   /**
   * Get text
   * @return text
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getText() {
    return text;
  }


  @JsonProperty(JSON_PROPERTY_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setText(String text) {
    this.text = text;
  }


  public TextBlock startIndex(Integer startIndex) {
    this.startIndex = startIndex;
    return this;
  }

   /**
   * Get startIndex
   * @return startIndex
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_START_INDEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getStartIndex() {
    return startIndex;
  }


  @JsonProperty(JSON_PROPERTY_START_INDEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartIndex(Integer startIndex) {
    this.startIndex = startIndex;
  }


  public TextBlock endIndex(Integer endIndex) {
    this.endIndex = endIndex;
    return this;
  }

   /**
   * Get endIndex
   * @return endIndex
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_END_INDEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getEndIndex() {
    return endIndex;
  }


  @JsonProperty(JSON_PROPERTY_END_INDEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndIndex(Integer endIndex) {
    this.endIndex = endIndex;
  }


  public TextBlock numberOfAffectedSubmissions(Integer numberOfAffectedSubmissions) {
    this.numberOfAffectedSubmissions = numberOfAffectedSubmissions;
    return this;
  }

   /**
   * Get numberOfAffectedSubmissions
   * @return numberOfAffectedSubmissions
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NUMBER_OF_AFFECTED_SUBMISSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getNumberOfAffectedSubmissions() {
    return numberOfAffectedSubmissions;
  }


  @JsonProperty(JSON_PROPERTY_NUMBER_OF_AFFECTED_SUBMISSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNumberOfAffectedSubmissions(Integer numberOfAffectedSubmissions) {
    this.numberOfAffectedSubmissions = numberOfAffectedSubmissions;
  }


  public TextBlock type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(TypeEnum type) {
    this.type = type;
  }


  public TextBlock positionInCluster(Integer positionInCluster) {
    this.positionInCluster = positionInCluster;
    return this;
  }

   /**
   * Get positionInCluster
   * @return positionInCluster
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POSITION_IN_CLUSTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPositionInCluster() {
    return positionInCluster;
  }


  @JsonProperty(JSON_PROPERTY_POSITION_IN_CLUSTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPositionInCluster(Integer positionInCluster) {
    this.positionInCluster = positionInCluster;
  }


  /**
   * Return true if this TextBlock object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TextBlock textBlock = (TextBlock) o;
    return Objects.equals(this.id, textBlock.id) &&
        Objects.equals(this.text, textBlock.text) &&
        Objects.equals(this.startIndex, textBlock.startIndex) &&
        Objects.equals(this.endIndex, textBlock.endIndex) &&
        Objects.equals(this.numberOfAffectedSubmissions, textBlock.numberOfAffectedSubmissions) &&
        Objects.equals(this.type, textBlock.type) &&
        Objects.equals(this.positionInCluster, textBlock.positionInCluster);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, text, startIndex, endIndex, numberOfAffectedSubmissions, type, positionInCluster);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TextBlock {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    startIndex: ").append(toIndentedString(startIndex)).append("\n");
    sb.append("    endIndex: ").append(toIndentedString(endIndex)).append("\n");
    sb.append("    numberOfAffectedSubmissions: ").append(toIndentedString(numberOfAffectedSubmissions)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    positionInCluster: ").append(toIndentedString(positionInCluster)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

