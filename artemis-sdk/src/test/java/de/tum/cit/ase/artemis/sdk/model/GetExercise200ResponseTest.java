/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tum.cit.ase.artemis.sdk.model;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import de.tum.cit.ase.artemis.sdk.model.Attachment;
import de.tum.cit.ase.artemis.sdk.model.AuxiliaryRepository;
import de.tum.cit.ase.artemis.sdk.model.Course;
import de.tum.cit.ase.artemis.sdk.model.DueDateStat;
import de.tum.cit.ase.artemis.sdk.model.ExampleSubmission;
import de.tum.cit.ase.artemis.sdk.model.ExerciseGroup;
import de.tum.cit.ase.artemis.sdk.model.ExerciseHint;
import de.tum.cit.ase.artemis.sdk.model.FileUploadExercise;
import de.tum.cit.ase.artemis.sdk.model.GradingCriterion;
import de.tum.cit.ase.artemis.sdk.model.ModelingExercise;
import de.tum.cit.ase.artemis.sdk.model.PlagiarismCase;
import de.tum.cit.ase.artemis.sdk.model.Post;
import de.tum.cit.ase.artemis.sdk.model.ProgrammingExercise;
import de.tum.cit.ase.artemis.sdk.model.ProgrammingExerciseTask;
import de.tum.cit.ase.artemis.sdk.model.ProgrammingExerciseTestCase;
import de.tum.cit.ase.artemis.sdk.model.QuizBatch;
import de.tum.cit.ase.artemis.sdk.model.QuizExercise;
import de.tum.cit.ase.artemis.sdk.model.QuizPointStatistic;
import de.tum.cit.ase.artemis.sdk.model.QuizQuestion;
import de.tum.cit.ase.artemis.sdk.model.SolutionProgrammingExerciseParticipation;
import de.tum.cit.ase.artemis.sdk.model.StaticCodeAnalysisCategory;
import de.tum.cit.ase.artemis.sdk.model.StudentParticipation;
import de.tum.cit.ase.artemis.sdk.model.SubmissionPolicy;
import de.tum.cit.ase.artemis.sdk.model.Team;
import de.tum.cit.ase.artemis.sdk.model.TeamAssignmentConfig;
import de.tum.cit.ase.artemis.sdk.model.TemplateProgrammingExerciseParticipation;
import de.tum.cit.ase.artemis.sdk.model.TextExercise;
import de.tum.cit.ase.artemis.sdk.model.TutorParticipation;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GetExercise200Response
 */
public class GetExercise200ResponseTest {
    private final GetExercise200Response model = new GetExercise200Response();

    /**
     * Model tests for GetExercise200Response
     */
    @Test
    public void testGetExercise200Response() {
        // TODO: test GetExercise200Response
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'title'
     */
    @Test
    public void titleTest() {
        // TODO: test title
    }

    /**
     * Test the property 'shortName'
     */
    @Test
    public void shortNameTest() {
        // TODO: test shortName
    }

    /**
     * Test the property 'maxPoints'
     */
    @Test
    public void maxPointsTest() {
        // TODO: test maxPoints
    }

    /**
     * Test the property 'bonusPoints'
     */
    @Test
    public void bonusPointsTest() {
        // TODO: test bonusPoints
    }

    /**
     * Test the property 'assessmentType'
     */
    @Test
    public void assessmentTypeTest() {
        // TODO: test assessmentType
    }

    /**
     * Test the property 'releaseDate'
     */
    @Test
    public void releaseDateTest() {
        // TODO: test releaseDate
    }

    /**
     * Test the property 'startDate'
     */
    @Test
    public void startDateTest() {
        // TODO: test startDate
    }

    /**
     * Test the property 'dueDate'
     */
    @Test
    public void dueDateTest() {
        // TODO: test dueDate
    }

    /**
     * Test the property 'assessmentDueDate'
     */
    @Test
    public void assessmentDueDateTest() {
        // TODO: test assessmentDueDate
    }

    /**
     * Test the property 'exampleSolutionPublicationDate'
     */
    @Test
    public void exampleSolutionPublicationDateTest() {
        // TODO: test exampleSolutionPublicationDate
    }

    /**
     * Test the property 'difficulty'
     */
    @Test
    public void difficultyTest() {
        // TODO: test difficulty
    }

    /**
     * Test the property 'mode'
     */
    @Test
    public void modeTest() {
        // TODO: test mode
    }

    /**
     * Test the property 'allowComplaintsForAutomaticAssessments'
     */
    @Test
    public void allowComplaintsForAutomaticAssessmentsTest() {
        // TODO: test allowComplaintsForAutomaticAssessments
    }

    /**
     * Test the property 'allowManualFeedbackRequests'
     */
    @Test
    public void allowManualFeedbackRequestsTest() {
        // TODO: test allowManualFeedbackRequests
    }

    /**
     * Test the property 'includedInOverallScore'
     */
    @Test
    public void includedInOverallScoreTest() {
        // TODO: test includedInOverallScore
    }

    /**
     * Test the property 'problemStatement'
     */
    @Test
    public void problemStatementTest() {
        // TODO: test problemStatement
    }

    /**
     * Test the property 'gradingInstructions'
     */
    @Test
    public void gradingInstructionsTest() {
        // TODO: test gradingInstructions
    }

    /**
     * Test the property 'categories'
     */
    @Test
    public void categoriesTest() {
        // TODO: test categories
    }

    /**
     * Test the property 'teamAssignmentConfig'
     */
    @Test
    public void teamAssignmentConfigTest() {
        // TODO: test teamAssignmentConfig
    }

    /**
     * Test the property 'teams'
     */
    @Test
    public void teamsTest() {
        // TODO: test teams
    }

    /**
     * Test the property 'presentationScoreEnabled'
     */
    @Test
    public void presentationScoreEnabledTest() {
        // TODO: test presentationScoreEnabled
    }

    /**
     * Test the property 'secondCorrectionEnabled'
     */
    @Test
    public void secondCorrectionEnabledTest() {
        // TODO: test secondCorrectionEnabled
    }

    /**
     * Test the property 'course'
     */
    @Test
    public void courseTest() {
        // TODO: test course
    }

    /**
     * Test the property 'exerciseGroup'
     */
    @Test
    public void exerciseGroupTest() {
        // TODO: test exerciseGroup
    }

    /**
     * Test the property 'gradingCriteria'
     */
    @Test
    public void gradingCriteriaTest() {
        // TODO: test gradingCriteria
    }

    /**
     * Test the property 'studentParticipations'
     */
    @Test
    public void studentParticipationsTest() {
        // TODO: test studentParticipations
    }

    /**
     * Test the property 'tutorParticipations'
     */
    @Test
    public void tutorParticipationsTest() {
        // TODO: test tutorParticipations
    }

    /**
     * Test the property 'exampleSubmissions'
     */
    @Test
    public void exampleSubmissionsTest() {
        // TODO: test exampleSubmissions
    }

    /**
     * Test the property 'attachments'
     */
    @Test
    public void attachmentsTest() {
        // TODO: test attachments
    }

    /**
     * Test the property 'posts'
     */
    @Test
    public void postsTest() {
        // TODO: test posts
    }

    /**
     * Test the property 'plagiarismCases'
     */
    @Test
    public void plagiarismCasesTest() {
        // TODO: test plagiarismCases
    }

    /**
     * Test the property 'exerciseType'
     */
    @Test
    public void exerciseTypeTest() {
        // TODO: test exerciseType
    }

    /**
     * Test the property 'numberOfAssessmentsOfCorrectionRounds'
     */
    @Test
    public void numberOfAssessmentsOfCorrectionRoundsTest() {
        // TODO: test numberOfAssessmentsOfCorrectionRounds
    }

    /**
     * Test the property 'totalNumberOfAssessments'
     */
    @Test
    public void totalNumberOfAssessmentsTest() {
        // TODO: test totalNumberOfAssessments
    }

    /**
     * Test the property 'averageRating'
     */
    @Test
    public void averageRatingTest() {
        // TODO: test averageRating
    }

    /**
     * Test the property 'numberOfRatings'
     */
    @Test
    public void numberOfRatingsTest() {
        // TODO: test numberOfRatings
    }

    /**
     * Test the property 'numberOfSubmissions'
     */
    @Test
    public void numberOfSubmissionsTest() {
        // TODO: test numberOfSubmissions
    }

    /**
     * Test the property 'numberOfOpenComplaints'
     */
    @Test
    public void numberOfOpenComplaintsTest() {
        // TODO: test numberOfOpenComplaints
    }

    /**
     * Test the property 'numberOfComplaints'
     */
    @Test
    public void numberOfComplaintsTest() {
        // TODO: test numberOfComplaints
    }

    /**
     * Test the property 'numberOfOpenMoreFeedbackRequests'
     */
    @Test
    public void numberOfOpenMoreFeedbackRequestsTest() {
        // TODO: test numberOfOpenMoreFeedbackRequests
    }

    /**
     * Test the property 'numberOfMoreFeedbackRequests'
     */
    @Test
    public void numberOfMoreFeedbackRequestsTest() {
        // TODO: test numberOfMoreFeedbackRequests
    }

    /**
     * Test the property 'studentAssignedTeamId'
     */
    @Test
    public void studentAssignedTeamIdTest() {
        // TODO: test studentAssignedTeamId
    }

    /**
     * Test the property 'studentAssignedTeamIdComputed'
     */
    @Test
    public void studentAssignedTeamIdComputedTest() {
        // TODO: test studentAssignedTeamIdComputed
    }

    /**
     * Test the property 'gradingInstructionFeedbackUsed'
     */
    @Test
    public void gradingInstructionFeedbackUsedTest() {
        // TODO: test gradingInstructionFeedbackUsed
    }

    /**
     * Test the property 'numberOfParticipations'
     */
    @Test
    public void numberOfParticipationsTest() {
        // TODO: test numberOfParticipations
    }

    /**
     * Test the property 'exampleSolutionPublished'
     */
    @Test
    public void exampleSolutionPublishedTest() {
        // TODO: test exampleSolutionPublished
    }

    /**
     * Test the property 'testRunParticipationsExist'
     */
    @Test
    public void testRunParticipationsExistTest() {
        // TODO: test testRunParticipationsExist
    }

    /**
     * Test the property 'teamMode'
     */
    @Test
    public void teamModeTest() {
        // TODO: test teamMode
    }

    /**
     * Test the property 'visibleToStudents'
     */
    @Test
    public void visibleToStudentsTest() {
        // TODO: test visibleToStudents
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'exampleSolution'
     */
    @Test
    public void exampleSolutionTest() {
        // TODO: test exampleSolution
    }

    /**
     * Test the property 'filePattern'
     */
    @Test
    public void filePatternTest() {
        // TODO: test filePattern
    }

    /**
     * Test the property 'diagramType'
     */
    @Test
    public void diagramTypeTest() {
        // TODO: test diagramType
    }

    /**
     * Test the property 'exampleSolutionModel'
     */
    @Test
    public void exampleSolutionModelTest() {
        // TODO: test exampleSolutionModel
    }

    /**
     * Test the property 'exampleSolutionExplanation'
     */
    @Test
    public void exampleSolutionExplanationTest() {
        // TODO: test exampleSolutionExplanation
    }

    /**
     * Test the property 'testRepositoryUrl'
     */
    @Test
    public void testRepositoryUrlTest() {
        // TODO: test testRepositoryUrl
    }

    /**
     * Test the property 'auxiliaryRepositories'
     */
    @Test
    public void auxiliaryRepositoriesTest() {
        // TODO: test auxiliaryRepositories
    }

    /**
     * Test the property 'publishBuildPlanUrl'
     */
    @Test
    public void publishBuildPlanUrlTest() {
        // TODO: test publishBuildPlanUrl
    }

    /**
     * Test the property 'allowOnlineEditor'
     */
    @Test
    public void allowOnlineEditorTest() {
        // TODO: test allowOnlineEditor
    }

    /**
     * Test the property 'allowOfflineIde'
     */
    @Test
    public void allowOfflineIdeTest() {
        // TODO: test allowOfflineIde
    }

    /**
     * Test the property 'staticCodeAnalysisEnabled'
     */
    @Test
    public void staticCodeAnalysisEnabledTest() {
        // TODO: test staticCodeAnalysisEnabled
    }

    /**
     * Test the property 'maxStaticCodeAnalysisPenalty'
     */
    @Test
    public void maxStaticCodeAnalysisPenaltyTest() {
        // TODO: test maxStaticCodeAnalysisPenalty
    }

    /**
     * Test the property 'programmingLanguage'
     */
    @Test
    public void programmingLanguageTest() {
        // TODO: test programmingLanguage
    }

    /**
     * Test the property 'packageName'
     */
    @Test
    public void packageNameTest() {
        // TODO: test packageName
    }

    /**
     * Test the property 'sequentialTestRuns'
     */
    @Test
    public void sequentialTestRunsTest() {
        // TODO: test sequentialTestRuns
    }

    /**
     * Test the property 'showTestNamesToStudents'
     */
    @Test
    public void showTestNamesToStudentsTest() {
        // TODO: test showTestNamesToStudents
    }

    /**
     * Test the property 'buildAndTestStudentSubmissionsAfterDueDate'
     */
    @Test
    public void buildAndTestStudentSubmissionsAfterDueDateTest() {
        // TODO: test buildAndTestStudentSubmissionsAfterDueDate
    }

    /**
     * Test the property 'testCasesChanged'
     */
    @Test
    public void testCasesChangedTest() {
        // TODO: test testCasesChanged
    }

    /**
     * Test the property 'projectKey'
     */
    @Test
    public void projectKeyTest() {
        // TODO: test projectKey
    }

    /**
     * Test the property 'buildPlanAccessSecret'
     */
    @Test
    public void buildPlanAccessSecretTest() {
        // TODO: test buildPlanAccessSecret
    }

    /**
     * Test the property 'templateParticipation'
     */
    @Test
    public void templateParticipationTest() {
        // TODO: test templateParticipation
    }

    /**
     * Test the property 'solutionParticipation'
     */
    @Test
    public void solutionParticipationTest() {
        // TODO: test solutionParticipation
    }

    /**
     * Test the property 'testCases'
     */
    @Test
    public void testCasesTest() {
        // TODO: test testCases
    }

    /**
     * Test the property 'tasks'
     */
    @Test
    public void tasksTest() {
        // TODO: test tasks
    }

    /**
     * Test the property 'staticCodeAnalysisCategories'
     */
    @Test
    public void staticCodeAnalysisCategoriesTest() {
        // TODO: test staticCodeAnalysisCategories
    }

    /**
     * Test the property 'submissionPolicy'
     */
    @Test
    public void submissionPolicyTest() {
        // TODO: test submissionPolicy
    }

    /**
     * Test the property 'projectType'
     */
    @Test
    public void projectTypeTest() {
        // TODO: test projectType
    }

    /**
     * Test the property 'exerciseHints'
     */
    @Test
    public void exerciseHintsTest() {
        // TODO: test exerciseHints
    }

    /**
     * Test the property 'testwiseCoverageEnabled'
     */
    @Test
    public void testwiseCoverageEnabledTest() {
        // TODO: test testwiseCoverageEnabled
    }

    /**
     * Test the property 'releaseTestsWithExampleSolution'
     */
    @Test
    public void releaseTestsWithExampleSolutionTest() {
        // TODO: test releaseTestsWithExampleSolution
    }

    /**
     * Test the property 'checkoutSolutionRepository'
     */
    @Test
    public void checkoutSolutionRepositoryTest() {
        // TODO: test checkoutSolutionRepository
    }

    /**
     * Test the property 'randomizeQuestionOrder'
     */
    @Test
    public void randomizeQuestionOrderTest() {
        // TODO: test randomizeQuestionOrder
    }

    /**
     * Test the property 'allowedNumberOfAttempts'
     */
    @Test
    public void allowedNumberOfAttemptsTest() {
        // TODO: test allowedNumberOfAttempts
    }

    /**
     * Test the property 'remainingNumberOfAttempts'
     */
    @Test
    public void remainingNumberOfAttemptsTest() {
        // TODO: test remainingNumberOfAttempts
    }

    /**
     * Test the property 'isOpenForPractice'
     */
    @Test
    public void isOpenForPracticeTest() {
        // TODO: test isOpenForPractice
    }

    /**
     * Test the property 'quizMode'
     */
    @Test
    public void quizModeTest() {
        // TODO: test quizMode
    }

    /**
     * Test the property 'duration'
     */
    @Test
    public void durationTest() {
        // TODO: test duration
    }

    /**
     * Test the property 'quizPointStatistic'
     */
    @Test
    public void quizPointStatisticTest() {
        // TODO: test quizPointStatistic
    }

    /**
     * Test the property 'quizQuestions'
     */
    @Test
    public void quizQuestionsTest() {
        // TODO: test quizQuestions
    }

    /**
     * Test the property 'quizBatches'
     */
    @Test
    public void quizBatchesTest() {
        // TODO: test quizBatches
    }

    /**
     * Test the property 'quizStarted'
     */
    @Test
    public void quizStartedTest() {
        // TODO: test quizStarted
    }

    /**
     * Test the property 'quizEnded'
     */
    @Test
    public void quizEndedTest() {
        // TODO: test quizEnded
    }

    /**
     * Test the property 'questionParent'
     */
    @Test
    public void questionParentTest() {
        // TODO: test questionParent
    }

    /**
     * Test the property 'automaticAssessmentEnabled'
     */
    @Test
    public void automaticAssessmentEnabledTest() {
        // TODO: test automaticAssessmentEnabled
    }

}
