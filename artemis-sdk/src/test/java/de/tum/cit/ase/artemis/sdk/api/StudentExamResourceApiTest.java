/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tum.cit.ase.artemis.sdk.api;

import de.tum.cit.ase.artemis.sdk.*;
import de.tum.cit.ase.artemis.sdk.auth.*;
import de.tum.cit.ase.artemis.sdk.model.ExamExerciseStartPreparationStatus;
import java.util.Set;
import de.tum.cit.ase.artemis.sdk.model.StudentExam;
import de.tum.cit.ase.artemis.sdk.model.StudentExamWithGradeDTO;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for StudentExamResourceApi
 */
public class StudentExamResourceApiTest {

    private final StudentExamResourceApi api = new StudentExamResourceApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void assessUnsubmittedStudentExamsAndEmptySubmissionsTest() throws ApiException {
        //Long courseId = null;
        //Long examId = null;
        //api.assessUnsubmittedStudentExamsAndEmptySubmissions(courseId, examId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createTestRunTest() throws ApiException {
        //Long courseId = null;
        //Long examId = null;
        //StudentExam studentExam = null;
        //StudentExam response = api.createTestRun(courseId, examId, studentExam);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteTestRunTest() throws ApiException {
        //Long courseId = null;
        //Long examId = null;
        //Long testRunId = null;
        //StudentExam response = api.deleteTestRun(courseId, examId, testRunId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findAllTestRunsForExamTest() throws ApiException {
        //Long courseId = null;
        //Long examId = null;
        //List<StudentExam> response = api.findAllTestRunsForExam(courseId, examId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getExerciseStartStatusTest() throws ApiException {
        //Long courseId = null;
        //Long examId = null;
        //ExamExerciseStartPreparationStatus response = api.getExerciseStartStatus(courseId, examId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getStudentExamTest() throws ApiException {
        //Long courseId = null;
        //Long examId = null;
        //Long studentExamId = null;
        //StudentExamWithGradeDTO response = api.getStudentExam(courseId, examId, studentExamId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getStudentExamForConductionTest() throws ApiException {
        //Long courseId = null;
        //Long examId = null;
        //Long studentExamId = null;
        //StudentExam response = api.getStudentExamForConduction(courseId, examId, studentExamId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getStudentExamForSummaryTest() throws ApiException {
        //Long courseId = null;
        //Long examId = null;
        //Long studentExamId = null;
        //StudentExam response = api.getStudentExamForSummary(courseId, examId, studentExamId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getStudentExamGradesForSummaryTest() throws ApiException {
        //Long courseId = null;
        //Long examId = null;
        //Long userId = null;
        //StudentExamWithGradeDTO response = api.getStudentExamGradesForSummary(courseId, examId, userId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getStudentExamsForCoursePerUserTest() throws ApiException {
        //Long courseId = null;
        //List<StudentExam> response = api.getStudentExamsForCoursePerUser(courseId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getStudentExamsForExamTest() throws ApiException {
        //Long courseId = null;
        //Long examId = null;
        //Set<StudentExam> response = api.getStudentExamsForExam(courseId, examId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTestRunForConductionTest() throws ApiException {
        //Long courseId = null;
        //Long examId = null;
        //Long testRunId = null;
        //StudentExam response = api.getTestRunForConduction(courseId, examId, testRunId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void startExercisesTest() throws ApiException {
        //Long courseId = null;
        //Long examId = null;
        //api.startExercises(courseId, examId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void submitStudentExamTest() throws ApiException {
        //Long courseId = null;
        //Long examId = null;
        //Long studentExamId = null;
        //StudentExam response = api.submitStudentExam(courseId, examId, studentExamId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void submitStudentExam1Test() throws ApiException {
        //Long courseId = null;
        //Long examId = null;
        //StudentExam studentExam = null;
        //StudentExam response = api.submitStudentExam1(courseId, examId, studentExam);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void unsubmitStudentExamTest() throws ApiException {
        //Long courseId = null;
        //Long examId = null;
        //Long studentExamId = null;
        //StudentExam response = api.unsubmitStudentExam(courseId, examId, studentExamId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateWorkingTimeTest() throws ApiException {
        //Long courseId = null;
        //Long examId = null;
        //Long studentExamId = null;
        //Integer body = null;
        //StudentExam response = api.updateWorkingTime(courseId, examId, studentExamId, body);
        // TODO: test validations
    }

}
