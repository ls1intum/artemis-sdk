/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tum.cit.ase.artemis.sdk.model;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import de.tum.cit.ase.artemis.sdk.model.Conversation;
import de.tum.cit.ase.artemis.sdk.model.Notification;
import de.tum.cit.ase.artemis.sdk.model.NotificationTarget;
import de.tum.cit.ase.artemis.sdk.model.Post;
import de.tum.cit.ase.artemis.sdk.model.User;
import java.time.OffsetDateTime;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ConversationNotification
 */
public class ConversationNotificationTest {
    private final ConversationNotification model = new ConversationNotification();

    /**
     * Model tests for ConversationNotification
     */
    @Test
    public void testConversationNotification() {
        // TODO: test ConversationNotification
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'title'
     */
    @Test
    public void titleTest() {
        // TODO: test title
    }

    /**
     * Test the property 'text'
     */
    @Test
    public void textTest() {
        // TODO: test text
    }

    /**
     * Test the property 'textIsPlaceholder'
     */
    @Test
    public void textIsPlaceholderTest() {
        // TODO: test textIsPlaceholder
    }

    /**
     * Test the property 'placeholderValues'
     */
    @Test
    public void placeholderValuesTest() {
        // TODO: test placeholderValues
    }

    /**
     * Test the property 'notificationDate'
     */
    @Test
    public void notificationDateTest() {
        // TODO: test notificationDate
    }

    /**
     * Test the property 'target'
     */
    @Test
    public void targetTest() {
        // TODO: test target
    }

    /**
     * Test the property 'priority'
     */
    @Test
    public void priorityTest() {
        // TODO: test priority
    }

    /**
     * Test the property 'outdated'
     */
    @Test
    public void outdatedTest() {
        // TODO: test outdated
    }

    /**
     * Test the property 'author'
     */
    @Test
    public void authorTest() {
        // TODO: test author
    }

    /**
     * Test the property 'targetTransient'
     */
    @Test
    public void targetTransientTest() {
        // TODO: test targetTransient
    }

    /**
     * Test the property 'transientAndStringTarget'
     */
    @Test
    public void transientAndStringTargetTest() {
        // TODO: test transientAndStringTarget
    }

    /**
     * Test the property 'notificationType'
     */
    @Test
    public void notificationTypeTest() {
        // TODO: test notificationType
    }

    /**
     * Test the property 'message'
     */
    @Test
    public void messageTest() {
        // TODO: test message
    }

    /**
     * Test the property 'conversation'
     */
    @Test
    public void conversationTest() {
        // TODO: test conversation
    }

    /**
     * Test the property 'topic'
     */
    @Test
    public void topicTest() {
        // TODO: test topic
    }

}
