/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tum.cit.ase.artemis.sdk.api;

import de.tum.cit.ase.artemis.sdk.*;
import de.tum.cit.ase.artemis.sdk.auth.*;
import de.tum.cit.ase.artemis.sdk.model.Lecture;
import de.tum.cit.ase.artemis.sdk.model.PageableSearchDTOString;
import de.tum.cit.ase.artemis.sdk.model.SearchResultPageDTOLecture;
import java.util.Set;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LectureResourceApi
 */
public class LectureResourceApiTest {

    private final LectureResourceApi api = new LectureResourceApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createLectureTest() throws ApiException {
        //Lecture lecture = null;
        //Lecture response = api.createLecture(lecture);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteLectureTest() throws ApiException {
        //Long lectureId = null;
        //api.deleteLecture(lectureId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllLecturesOnPageTest() throws ApiException {
        //PageableSearchDTOString search = null;
        //SearchResultPageDTOLecture response = api.getAllLecturesOnPage(search);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getLectureTest() throws ApiException {
        //Long lectureId = null;
        //Lecture response = api.getLecture(lectureId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getLectureTitleTest() throws ApiException {
        //Long lectureId = null;
        //String response = api.getLectureTitle(lectureId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getLectureWithDetailsTest() throws ApiException {
        //Long lectureId = null;
        //Lecture response = api.getLectureWithDetails(lectureId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getLectureWithDetailsAndSlidesTest() throws ApiException {
        //Long lectureId = null;
        //Lecture response = api.getLectureWithDetailsAndSlides(lectureId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getLecturesForCourseTest() throws ApiException {
        //Long courseId = null;
        //Boolean withLectureUnits = null;
        //Set<Lecture> response = api.getLecturesForCourse(courseId, withLectureUnits);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getLecturesWithSlidesForCourseTest() throws ApiException {
        //Long courseId = null;
        //Set<Lecture> response = api.getLecturesWithSlidesForCourse(courseId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void importLectureTest() throws ApiException {
        //Long sourceLectureId = null;
        //Long courseId = null;
        //Lecture response = api.importLecture(sourceLectureId, courseId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateLectureTest() throws ApiException {
        //Lecture lecture = null;
        //Lecture response = api.updateLecture(lecture);
        // TODO: test validations
    }

}
