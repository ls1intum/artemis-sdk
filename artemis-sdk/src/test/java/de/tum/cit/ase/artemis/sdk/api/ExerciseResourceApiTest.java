/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tum.cit.ase.artemis.sdk.api;

import de.tum.cit.ase.artemis.sdk.*;
import de.tum.cit.ase.artemis.sdk.auth.*;
import java.io.File;
import de.tum.cit.ase.artemis.sdk.model.GetExercise200Response;
import java.time.OffsetDateTime;
import de.tum.cit.ase.artemis.sdk.model.StatsForDashboardDTO;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ExerciseResourceApi
 */
public class ExerciseResourceApiTest {

    private final ExerciseResourceApi api = new ExerciseResourceApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cleanupTest() throws ApiException {
        //Long exerciseId = null;
        //Boolean deleteRepositories = null;
        //File response = api.cleanup(exerciseId, deleteRepositories);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getExerciseTest() throws ApiException {
        //Long exerciseId = null;
        //GetExercise200Response response = api.getExercise(exerciseId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getExerciseDetailsTest() throws ApiException {
        //Long exerciseId = null;
        //GetExercise200Response response = api.getExerciseDetails(exerciseId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getExerciseForAssessmentDashboardTest() throws ApiException {
        //Long exerciseId = null;
        //GetExercise200Response response = api.getExerciseForAssessmentDashboard(exerciseId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getExerciseForExampleSolutionTest() throws ApiException {
        //Long exerciseId = null;
        //GetExercise200Response response = api.getExerciseForExampleSolution(exerciseId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getExerciseTitleTest() throws ApiException {
        //Long exerciseId = null;
        //String response = api.getExerciseTitle(exerciseId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getLatestDueDateTest() throws ApiException {
        //Long exerciseId = null;
        //OffsetDateTime response = api.getLatestDueDate(exerciseId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getStatsForExerciseAssessmentDashboardTest() throws ApiException {
        //Long exerciseId = null;
        //StatsForDashboardDTO response = api.getStatsForExerciseAssessmentDashboard(exerciseId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void resetTest() throws ApiException {
        //Long exerciseId = null;
        //api.reset(exerciseId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void toggleSecondCorrectionEnabledTest() throws ApiException {
        //Long exerciseId = null;
        //Boolean response = api.toggleSecondCorrectionEnabled(exerciseId);
        // TODO: test validations
    }

}
