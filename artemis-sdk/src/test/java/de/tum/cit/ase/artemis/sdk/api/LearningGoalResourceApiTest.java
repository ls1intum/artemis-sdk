/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tum.cit.ase.artemis.sdk.api;

import de.tum.cit.ase.artemis.sdk.*;
import de.tum.cit.ase.artemis.sdk.auth.*;
import de.tum.cit.ase.artemis.sdk.model.CourseLearningGoalProgressDTO;
import de.tum.cit.ase.artemis.sdk.model.LearningGoal;
import de.tum.cit.ase.artemis.sdk.model.LearningGoalProgress;
import de.tum.cit.ase.artemis.sdk.model.LearningGoalRelation;
import de.tum.cit.ase.artemis.sdk.model.PageableSearchDTOString;
import de.tum.cit.ase.artemis.sdk.model.SearchResultPageDTOLearningGoal;
import java.util.Set;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LearningGoalResourceApi
 */
public class LearningGoalResourceApiTest {

    private final LearningGoalResourceApi api = new LearningGoalResourceApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addPrerequisiteTest() throws ApiException {
        //Long learningGoalId = null;
        //Long courseId = null;
        //LearningGoal response = api.addPrerequisite(learningGoalId, courseId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createLearningGoalTest() throws ApiException {
        //Long courseId = null;
        //LearningGoal learningGoal = null;
        //LearningGoal response = api.createLearningGoal(courseId, learningGoal);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createLearningGoalRelationTest() throws ApiException {
        //Long courseId = null;
        //Long tailLearningGoalId = null;
        //Long headLearningGoalId = null;
        //String type = null;
        //LearningGoalRelation response = api.createLearningGoalRelation(courseId, tailLearningGoalId, headLearningGoalId, type);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteLearningGoalTest() throws ApiException {
        //Long learningGoalId = null;
        //Long courseId = null;
        //api.deleteLearningGoal(learningGoalId, courseId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllLecturesOnPage1Test() throws ApiException {
        //PageableSearchDTOString search = null;
        //SearchResultPageDTOLearningGoal response = api.getAllLecturesOnPage1(search);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getLearningGoalTest() throws ApiException {
        //Long learningGoalId = null;
        //Long courseId = null;
        //LearningGoal response = api.getLearningGoal(learningGoalId, courseId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getLearningGoalCourseProgressTest() throws ApiException {
        //Long courseId = null;
        //Long learningGoalId = null;
        //CourseLearningGoalProgressDTO response = api.getLearningGoalCourseProgress(courseId, learningGoalId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getLearningGoalRelationsTest() throws ApiException {
        //Long learningGoalId = null;
        //Long courseId = null;
        //Set<LearningGoalRelation> response = api.getLearningGoalRelations(learningGoalId, courseId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getLearningGoalStudentProgressTest() throws ApiException {
        //Long courseId = null;
        //Long learningGoalId = null;
        //Boolean refresh = null;
        //LearningGoalProgress response = api.getLearningGoalStudentProgress(courseId, learningGoalId, refresh);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getLearningGoalTitleTest() throws ApiException {
        //Long learningGoalId = null;
        //String response = api.getLearningGoalTitle(learningGoalId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getLearningGoalsTest() throws ApiException {
        //Long courseId = null;
        //List<LearningGoal> response = api.getLearningGoals(courseId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPrerequisitesTest() throws ApiException {
        //Long courseId = null;
        //List<LearningGoal> response = api.getPrerequisites(courseId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeLearningGoalRelationTest() throws ApiException {
        //Long learningGoalId = null;
        //Long courseId = null;
        //Long learningGoalRelationId = null;
        //api.removeLearningGoalRelation(learningGoalId, courseId, learningGoalRelationId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removePrerequisiteTest() throws ApiException {
        //Long learningGoalId = null;
        //Long courseId = null;
        //api.removePrerequisite(learningGoalId, courseId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateLearningGoalTest() throws ApiException {
        //Long courseId = null;
        //LearningGoal learningGoal = null;
        //LearningGoal response = api.updateLearningGoal(courseId, learningGoal);
        // TODO: test validations
    }

}
