/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tum.cit.ase.artemis.sdk.api;

import de.tum.cit.ase.artemis.sdk.*;
import de.tum.cit.ase.artemis.sdk.auth.*;
import de.tum.cit.ase.artemis.sdk.model.PlagiarismCase;
import de.tum.cit.ase.artemis.sdk.model.PlagiarismCaseInfoDTO;
import de.tum.cit.ase.artemis.sdk.model.PlagiarismVerdictDTO;
import java.util.Set;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PlagiarismCaseResourceApi
 */
public class PlagiarismCaseResourceApiTest {

    private final PlagiarismCaseResourceApi api = new PlagiarismCaseResourceApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPlagiarismCaseForExerciseForStudentTest() throws ApiException {
        //Long courseId = null;
        //Long exerciseId = null;
        //PlagiarismCaseInfoDTO response = api.getPlagiarismCaseForExerciseForStudent(courseId, exerciseId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPlagiarismCaseForInstructorTest() throws ApiException {
        //Long courseId = null;
        //Long plagiarismCaseId = null;
        //PlagiarismCase response = api.getPlagiarismCaseForInstructor(courseId, plagiarismCaseId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPlagiarismCaseForStudentTest() throws ApiException {
        //Long courseId = null;
        //Long plagiarismCaseId = null;
        //PlagiarismCase response = api.getPlagiarismCaseForStudent(courseId, plagiarismCaseId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPlagiarismCasesForCourseForInstructorTest() throws ApiException {
        //Long courseId = null;
        //List<PlagiarismCase> response = api.getPlagiarismCasesForCourseForInstructor(courseId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPlagiarismCasesForExamForInstructorTest() throws ApiException {
        //Long courseId = null;
        //Long examId = null;
        //List<PlagiarismCase> response = api.getPlagiarismCasesForExamForInstructor(courseId, examId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPlagiarismCasesForExercisesForStudentTest() throws ApiException {
        //Long courseId = null;
        //Set<Long> exerciseId = null;
        //Map<String, PlagiarismCaseInfoDTO> response = api.getPlagiarismCasesForExercisesForStudent(courseId, exerciseId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void savePlagiarismCaseVerdictTest() throws ApiException {
        //Long courseId = null;
        //Long plagiarismCaseId = null;
        //PlagiarismVerdictDTO plagiarismVerdictDTO = null;
        //PlagiarismCase response = api.savePlagiarismCaseVerdict(courseId, plagiarismCaseId, plagiarismVerdictDTO);
        // TODO: test validations
    }

}
