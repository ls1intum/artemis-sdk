/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tum.cit.ase.artemis.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import de.tum.cit.ase.artemis.sdk.model.Complaint;
import de.tum.cit.ase.artemis.sdk.model.User;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import de.tum.cit.ase.artemis.sdk.JSON;


/**
 * ComplaintResponse
 */
@JsonPropertyOrder({
  ComplaintResponse.JSON_PROPERTY_ID,
  ComplaintResponse.JSON_PROPERTY_CREATED_DATE,
  ComplaintResponse.JSON_PROPERTY_RESPONSE_TEXT,
  ComplaintResponse.JSON_PROPERTY_SUBMITTED_TIME,
  ComplaintResponse.JSON_PROPERTY_COMPLAINT,
  ComplaintResponse.JSON_PROPERTY_REVIEWER,
  ComplaintResponse.JSON_PROPERTY_IS_CURRENTLY_LOCKED,
  ComplaintResponse.JSON_PROPERTY_LOCK_END_DATE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-06-10T14:33:20.156837Z[Etc/UTC]")
public class ComplaintResponse {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_CREATED_DATE = "createdDate";
  private OffsetDateTime createdDate;

  public static final String JSON_PROPERTY_RESPONSE_TEXT = "responseText";
  private String responseText;

  public static final String JSON_PROPERTY_SUBMITTED_TIME = "submittedTime";
  private OffsetDateTime submittedTime;

  public static final String JSON_PROPERTY_COMPLAINT = "complaint";
  private Complaint complaint;

  public static final String JSON_PROPERTY_REVIEWER = "reviewer";
  private User reviewer;

  public static final String JSON_PROPERTY_IS_CURRENTLY_LOCKED = "isCurrentlyLocked";
  private Boolean isCurrentlyLocked;

  public static final String JSON_PROPERTY_LOCK_END_DATE = "lockEndDate";
  private OffsetDateTime lockEndDate;

  public ComplaintResponse() { 
  }

  public ComplaintResponse id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Long id) {
    this.id = id;
  }


  public ComplaintResponse createdDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
    return this;
  }

   /**
   * Get createdDate
   * @return createdDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }


  public ComplaintResponse responseText(String responseText) {
    this.responseText = responseText;
    return this;
  }

   /**
   * Get responseText
   * @return responseText
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RESPONSE_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getResponseText() {
    return responseText;
  }


  @JsonProperty(JSON_PROPERTY_RESPONSE_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResponseText(String responseText) {
    this.responseText = responseText;
  }


  public ComplaintResponse submittedTime(OffsetDateTime submittedTime) {
    this.submittedTime = submittedTime;
    return this;
  }

   /**
   * Get submittedTime
   * @return submittedTime
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBMITTED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getSubmittedTime() {
    return submittedTime;
  }


  @JsonProperty(JSON_PROPERTY_SUBMITTED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubmittedTime(OffsetDateTime submittedTime) {
    this.submittedTime = submittedTime;
  }


  public ComplaintResponse complaint(Complaint complaint) {
    this.complaint = complaint;
    return this;
  }

   /**
   * Get complaint
   * @return complaint
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMPLAINT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Complaint getComplaint() {
    return complaint;
  }


  @JsonProperty(JSON_PROPERTY_COMPLAINT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setComplaint(Complaint complaint) {
    this.complaint = complaint;
  }


  public ComplaintResponse reviewer(User reviewer) {
    this.reviewer = reviewer;
    return this;
  }

   /**
   * Get reviewer
   * @return reviewer
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REVIEWER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public User getReviewer() {
    return reviewer;
  }


  @JsonProperty(JSON_PROPERTY_REVIEWER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReviewer(User reviewer) {
    this.reviewer = reviewer;
  }


  public ComplaintResponse isCurrentlyLocked(Boolean isCurrentlyLocked) {
    this.isCurrentlyLocked = isCurrentlyLocked;
    return this;
  }

   /**
   * Get isCurrentlyLocked
   * @return isCurrentlyLocked
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_CURRENTLY_LOCKED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsCurrentlyLocked() {
    return isCurrentlyLocked;
  }


  @JsonProperty(JSON_PROPERTY_IS_CURRENTLY_LOCKED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsCurrentlyLocked(Boolean isCurrentlyLocked) {
    this.isCurrentlyLocked = isCurrentlyLocked;
  }


  public ComplaintResponse lockEndDate(OffsetDateTime lockEndDate) {
    this.lockEndDate = lockEndDate;
    return this;
  }

   /**
   * Get lockEndDate
   * @return lockEndDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOCK_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getLockEndDate() {
    return lockEndDate;
  }


  @JsonProperty(JSON_PROPERTY_LOCK_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLockEndDate(OffsetDateTime lockEndDate) {
    this.lockEndDate = lockEndDate;
  }


  /**
   * Return true if this ComplaintResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComplaintResponse complaintResponse = (ComplaintResponse) o;
    return Objects.equals(this.id, complaintResponse.id) &&
        Objects.equals(this.createdDate, complaintResponse.createdDate) &&
        Objects.equals(this.responseText, complaintResponse.responseText) &&
        Objects.equals(this.submittedTime, complaintResponse.submittedTime) &&
        Objects.equals(this.complaint, complaintResponse.complaint) &&
        Objects.equals(this.reviewer, complaintResponse.reviewer) &&
        Objects.equals(this.isCurrentlyLocked, complaintResponse.isCurrentlyLocked) &&
        Objects.equals(this.lockEndDate, complaintResponse.lockEndDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, createdDate, responseText, submittedTime, complaint, reviewer, isCurrentlyLocked, lockEndDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComplaintResponse {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    responseText: ").append(toIndentedString(responseText)).append("\n");
    sb.append("    submittedTime: ").append(toIndentedString(submittedTime)).append("\n");
    sb.append("    complaint: ").append(toIndentedString(complaint)).append("\n");
    sb.append("    reviewer: ").append(toIndentedString(reviewer)).append("\n");
    sb.append("    isCurrentlyLocked: ").append(toIndentedString(isCurrentlyLocked)).append("\n");
    sb.append("    lockEndDate: ").append(toIndentedString(lockEndDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

