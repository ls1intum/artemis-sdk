/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tum.cit.ase.artemis.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import de.tum.cit.ase.artemis.sdk.model.ProgrammingExercise;
import de.tum.cit.ase.artemis.sdk.model.ProgrammingExerciseGitDiffEntry;
import java.util.LinkedHashSet;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import de.tum.cit.ase.artemis.sdk.JSON;


/**
 * ProgrammingExerciseGitDiffReport
 */
@JsonPropertyOrder({
  ProgrammingExerciseGitDiffReport.JSON_PROPERTY_ID,
  ProgrammingExerciseGitDiffReport.JSON_PROPERTY_PROGRAMMING_EXERCISE,
  ProgrammingExerciseGitDiffReport.JSON_PROPERTY_TEMPLATE_REPOSITORY_COMMIT_HASH,
  ProgrammingExerciseGitDiffReport.JSON_PROPERTY_SOLUTION_REPOSITORY_COMMIT_HASH,
  ProgrammingExerciseGitDiffReport.JSON_PROPERTY_ENTRIES
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-03-02T15:54:21.223567Z[Etc/UTC]")
public class ProgrammingExerciseGitDiffReport {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_PROGRAMMING_EXERCISE = "programmingExercise";
  private ProgrammingExercise programmingExercise;

  public static final String JSON_PROPERTY_TEMPLATE_REPOSITORY_COMMIT_HASH = "templateRepositoryCommitHash";
  private String templateRepositoryCommitHash;

  public static final String JSON_PROPERTY_SOLUTION_REPOSITORY_COMMIT_HASH = "solutionRepositoryCommitHash";
  private String solutionRepositoryCommitHash;

  public static final String JSON_PROPERTY_ENTRIES = "entries";
  private Set<ProgrammingExerciseGitDiffEntry> entries = new LinkedHashSet<>();

  public ProgrammingExerciseGitDiffReport() { 
  }

  public ProgrammingExerciseGitDiffReport id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Long id) {
    this.id = id;
  }


  public ProgrammingExerciseGitDiffReport programmingExercise(ProgrammingExercise programmingExercise) {
    this.programmingExercise = programmingExercise;
    return this;
  }

   /**
   * Get programmingExercise
   * @return programmingExercise
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROGRAMMING_EXERCISE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProgrammingExercise getProgrammingExercise() {
    return programmingExercise;
  }


  @JsonProperty(JSON_PROPERTY_PROGRAMMING_EXERCISE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProgrammingExercise(ProgrammingExercise programmingExercise) {
    this.programmingExercise = programmingExercise;
  }


  public ProgrammingExerciseGitDiffReport templateRepositoryCommitHash(String templateRepositoryCommitHash) {
    this.templateRepositoryCommitHash = templateRepositoryCommitHash;
    return this;
  }

   /**
   * Get templateRepositoryCommitHash
   * @return templateRepositoryCommitHash
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TEMPLATE_REPOSITORY_COMMIT_HASH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTemplateRepositoryCommitHash() {
    return templateRepositoryCommitHash;
  }


  @JsonProperty(JSON_PROPERTY_TEMPLATE_REPOSITORY_COMMIT_HASH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTemplateRepositoryCommitHash(String templateRepositoryCommitHash) {
    this.templateRepositoryCommitHash = templateRepositoryCommitHash;
  }


  public ProgrammingExerciseGitDiffReport solutionRepositoryCommitHash(String solutionRepositoryCommitHash) {
    this.solutionRepositoryCommitHash = solutionRepositoryCommitHash;
    return this;
  }

   /**
   * Get solutionRepositoryCommitHash
   * @return solutionRepositoryCommitHash
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOLUTION_REPOSITORY_COMMIT_HASH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSolutionRepositoryCommitHash() {
    return solutionRepositoryCommitHash;
  }


  @JsonProperty(JSON_PROPERTY_SOLUTION_REPOSITORY_COMMIT_HASH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSolutionRepositoryCommitHash(String solutionRepositoryCommitHash) {
    this.solutionRepositoryCommitHash = solutionRepositoryCommitHash;
  }


  public ProgrammingExerciseGitDiffReport entries(Set<ProgrammingExerciseGitDiffEntry> entries) {
    this.entries = entries;
    return this;
  }

  public ProgrammingExerciseGitDiffReport addEntriesItem(ProgrammingExerciseGitDiffEntry entriesItem) {
    if (this.entries == null) {
      this.entries = new LinkedHashSet<>();
    }
    this.entries.add(entriesItem);
    return this;
  }

   /**
   * Get entries
   * @return entries
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENTRIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<ProgrammingExerciseGitDiffEntry> getEntries() {
    return entries;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_ENTRIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEntries(Set<ProgrammingExerciseGitDiffEntry> entries) {
    this.entries = entries;
  }


  /**
   * Return true if this ProgrammingExerciseGitDiffReport object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProgrammingExerciseGitDiffReport programmingExerciseGitDiffReport = (ProgrammingExerciseGitDiffReport) o;
    return Objects.equals(this.id, programmingExerciseGitDiffReport.id) &&
        Objects.equals(this.programmingExercise, programmingExerciseGitDiffReport.programmingExercise) &&
        Objects.equals(this.templateRepositoryCommitHash, programmingExerciseGitDiffReport.templateRepositoryCommitHash) &&
        Objects.equals(this.solutionRepositoryCommitHash, programmingExerciseGitDiffReport.solutionRepositoryCommitHash) &&
        Objects.equals(this.entries, programmingExerciseGitDiffReport.entries);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, programmingExercise, templateRepositoryCommitHash, solutionRepositoryCommitHash, entries);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProgrammingExerciseGitDiffReport {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    programmingExercise: ").append(toIndentedString(programmingExercise)).append("\n");
    sb.append("    templateRepositoryCommitHash: ").append(toIndentedString(templateRepositoryCommitHash)).append("\n");
    sb.append("    solutionRepositoryCommitHash: ").append(toIndentedString(solutionRepositoryCommitHash)).append("\n");
    sb.append("    entries: ").append(toIndentedString(entries)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

