/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tum.cit.ase.artemis.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import de.tum.cit.ase.artemis.sdk.model.Feedback;
import de.tum.cit.ase.artemis.sdk.model.GradingCriterion;
import java.util.LinkedHashSet;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import de.tum.cit.ase.artemis.sdk.JSON;


/**
 * GradingInstruction
 */
@JsonPropertyOrder({
  GradingInstruction.JSON_PROPERTY_ID,
  GradingInstruction.JSON_PROPERTY_CREDITS,
  GradingInstruction.JSON_PROPERTY_GRADING_SCALE,
  GradingInstruction.JSON_PROPERTY_INSTRUCTION_DESCRIPTION,
  GradingInstruction.JSON_PROPERTY_FEEDBACK,
  GradingInstruction.JSON_PROPERTY_USAGE_COUNT,
  GradingInstruction.JSON_PROPERTY_GRADING_CRITERION,
  GradingInstruction.JSON_PROPERTY_FEEDBACKS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-03-31T15:20:01.980101Z[Etc/UTC]")
public class GradingInstruction {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_CREDITS = "credits";
  private Double credits;

  public static final String JSON_PROPERTY_GRADING_SCALE = "gradingScale";
  private String gradingScale;

  public static final String JSON_PROPERTY_INSTRUCTION_DESCRIPTION = "instructionDescription";
  private String instructionDescription;

  public static final String JSON_PROPERTY_FEEDBACK = "feedback";
  private String feedback;

  public static final String JSON_PROPERTY_USAGE_COUNT = "usageCount";
  private Integer usageCount;

  public static final String JSON_PROPERTY_GRADING_CRITERION = "gradingCriterion";
  private GradingCriterion gradingCriterion;

  public static final String JSON_PROPERTY_FEEDBACKS = "feedbacks";
  private Set<Feedback> feedbacks;

  public GradingInstruction() { 
  }

  public GradingInstruction id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Long id) {
    this.id = id;
  }


  public GradingInstruction credits(Double credits) {
    this.credits = credits;
    return this;
  }

   /**
   * Get credits
   * @return credits
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREDITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getCredits() {
    return credits;
  }


  @JsonProperty(JSON_PROPERTY_CREDITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCredits(Double credits) {
    this.credits = credits;
  }


  public GradingInstruction gradingScale(String gradingScale) {
    this.gradingScale = gradingScale;
    return this;
  }

   /**
   * Get gradingScale
   * @return gradingScale
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GRADING_SCALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getGradingScale() {
    return gradingScale;
  }


  @JsonProperty(JSON_PROPERTY_GRADING_SCALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGradingScale(String gradingScale) {
    this.gradingScale = gradingScale;
  }


  public GradingInstruction instructionDescription(String instructionDescription) {
    this.instructionDescription = instructionDescription;
    return this;
  }

   /**
   * Get instructionDescription
   * @return instructionDescription
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INSTRUCTION_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInstructionDescription() {
    return instructionDescription;
  }


  @JsonProperty(JSON_PROPERTY_INSTRUCTION_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInstructionDescription(String instructionDescription) {
    this.instructionDescription = instructionDescription;
  }


  public GradingInstruction feedback(String feedback) {
    this.feedback = feedback;
    return this;
  }

   /**
   * Get feedback
   * @return feedback
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FEEDBACK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFeedback() {
    return feedback;
  }


  @JsonProperty(JSON_PROPERTY_FEEDBACK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFeedback(String feedback) {
    this.feedback = feedback;
  }


  public GradingInstruction usageCount(Integer usageCount) {
    this.usageCount = usageCount;
    return this;
  }

   /**
   * Get usageCount
   * @return usageCount
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USAGE_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getUsageCount() {
    return usageCount;
  }


  @JsonProperty(JSON_PROPERTY_USAGE_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUsageCount(Integer usageCount) {
    this.usageCount = usageCount;
  }


  public GradingInstruction gradingCriterion(GradingCriterion gradingCriterion) {
    this.gradingCriterion = gradingCriterion;
    return this;
  }

   /**
   * Get gradingCriterion
   * @return gradingCriterion
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GRADING_CRITERION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public GradingCriterion getGradingCriterion() {
    return gradingCriterion;
  }


  @JsonProperty(JSON_PROPERTY_GRADING_CRITERION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGradingCriterion(GradingCriterion gradingCriterion) {
    this.gradingCriterion = gradingCriterion;
  }


  public GradingInstruction feedbacks(Set<Feedback> feedbacks) {
    this.feedbacks = feedbacks;
    return this;
  }

  public GradingInstruction addFeedbacksItem(Feedback feedbacksItem) {
    if (this.feedbacks == null) {
      this.feedbacks = new LinkedHashSet<>();
    }
    this.feedbacks.add(feedbacksItem);
    return this;
  }

   /**
   * Get feedbacks
   * @return feedbacks
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FEEDBACKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<Feedback> getFeedbacks() {
    return feedbacks;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_FEEDBACKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFeedbacks(Set<Feedback> feedbacks) {
    this.feedbacks = feedbacks;
  }


  /**
   * Return true if this GradingInstruction object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GradingInstruction gradingInstruction = (GradingInstruction) o;
    return Objects.equals(this.id, gradingInstruction.id) &&
        Objects.equals(this.credits, gradingInstruction.credits) &&
        Objects.equals(this.gradingScale, gradingInstruction.gradingScale) &&
        Objects.equals(this.instructionDescription, gradingInstruction.instructionDescription) &&
        Objects.equals(this.feedback, gradingInstruction.feedback) &&
        Objects.equals(this.usageCount, gradingInstruction.usageCount) &&
        Objects.equals(this.gradingCriterion, gradingInstruction.gradingCriterion) &&
        Objects.equals(this.feedbacks, gradingInstruction.feedbacks);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, credits, gradingScale, instructionDescription, feedback, usageCount, gradingCriterion, feedbacks);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GradingInstruction {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    credits: ").append(toIndentedString(credits)).append("\n");
    sb.append("    gradingScale: ").append(toIndentedString(gradingScale)).append("\n");
    sb.append("    instructionDescription: ").append(toIndentedString(instructionDescription)).append("\n");
    sb.append("    feedback: ").append(toIndentedString(feedback)).append("\n");
    sb.append("    usageCount: ").append(toIndentedString(usageCount)).append("\n");
    sb.append("    gradingCriterion: ").append(toIndentedString(gradingCriterion)).append("\n");
    sb.append("    feedbacks: ").append(toIndentedString(feedbacks)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

