/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tum.cit.ase.artemis.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import de.tum.cit.ase.artemis.sdk.model.Exam;
import de.tum.cit.ase.artemis.sdk.model.Exercise;
import java.util.LinkedHashSet;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import de.tum.cit.ase.artemis.sdk.JSON;


/**
 * ExerciseGroup
 */
@JsonPropertyOrder({
  ExerciseGroup.JSON_PROPERTY_ID,
  ExerciseGroup.JSON_PROPERTY_TITLE,
  ExerciseGroup.JSON_PROPERTY_IS_MANDATORY,
  ExerciseGroup.JSON_PROPERTY_EXAM,
  ExerciseGroup.JSON_PROPERTY_EXERCISES
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-04-06T13:57:19.283407Z[Etc/UTC]")
public class ExerciseGroup {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_TITLE = "title";
  private String title;

  public static final String JSON_PROPERTY_IS_MANDATORY = "isMandatory";
  private Boolean isMandatory;

  public static final String JSON_PROPERTY_EXAM = "exam";
  private Exam exam;

  public static final String JSON_PROPERTY_EXERCISES = "exercises";
  private Set<Exercise> exercises;

  public ExerciseGroup() { 
  }

  public ExerciseGroup id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Long id) {
    this.id = id;
  }


  public ExerciseGroup title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTitle() {
    return title;
  }


  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTitle(String title) {
    this.title = title;
  }


  public ExerciseGroup isMandatory(Boolean isMandatory) {
    this.isMandatory = isMandatory;
    return this;
  }

   /**
   * Get isMandatory
   * @return isMandatory
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_MANDATORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsMandatory() {
    return isMandatory;
  }


  @JsonProperty(JSON_PROPERTY_IS_MANDATORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsMandatory(Boolean isMandatory) {
    this.isMandatory = isMandatory;
  }


  public ExerciseGroup exam(Exam exam) {
    this.exam = exam;
    return this;
  }

   /**
   * Get exam
   * @return exam
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXAM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Exam getExam() {
    return exam;
  }


  @JsonProperty(JSON_PROPERTY_EXAM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExam(Exam exam) {
    this.exam = exam;
  }


  public ExerciseGroup exercises(Set<Exercise> exercises) {
    this.exercises = exercises;
    return this;
  }

  public ExerciseGroup addExercisesItem(Exercise exercisesItem) {
    if (this.exercises == null) {
      this.exercises = new LinkedHashSet<>();
    }
    this.exercises.add(exercisesItem);
    return this;
  }

   /**
   * Get exercises
   * @return exercises
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXERCISES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<Exercise> getExercises() {
    return exercises;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_EXERCISES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExercises(Set<Exercise> exercises) {
    this.exercises = exercises;
  }


  /**
   * Return true if this ExerciseGroup object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExerciseGroup exerciseGroup = (ExerciseGroup) o;
    return Objects.equals(this.id, exerciseGroup.id) &&
        Objects.equals(this.title, exerciseGroup.title) &&
        Objects.equals(this.isMandatory, exerciseGroup.isMandatory) &&
        Objects.equals(this.exam, exerciseGroup.exam) &&
        Objects.equals(this.exercises, exerciseGroup.exercises);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, title, isMandatory, exam, exercises);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExerciseGroup {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    isMandatory: ").append(toIndentedString(isMandatory)).append("\n");
    sb.append("    exam: ").append(toIndentedString(exam)).append("\n");
    sb.append("    exercises: ").append(toIndentedString(exercises)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

