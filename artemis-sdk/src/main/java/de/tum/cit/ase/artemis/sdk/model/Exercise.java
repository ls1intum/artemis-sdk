/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tum.cit.ase.artemis.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import de.tum.cit.ase.artemis.sdk.model.Attachment;
import de.tum.cit.ase.artemis.sdk.model.Course;
import de.tum.cit.ase.artemis.sdk.model.DueDateStat;
import de.tum.cit.ase.artemis.sdk.model.ExampleSubmission;
import de.tum.cit.ase.artemis.sdk.model.ExerciseGroup;
import de.tum.cit.ase.artemis.sdk.model.GradingCriterion;
import de.tum.cit.ase.artemis.sdk.model.PlagiarismCase;
import de.tum.cit.ase.artemis.sdk.model.Post;
import de.tum.cit.ase.artemis.sdk.model.StudentParticipation;
import de.tum.cit.ase.artemis.sdk.model.Team;
import de.tum.cit.ase.artemis.sdk.model.TeamAssignmentConfig;
import de.tum.cit.ase.artemis.sdk.model.TutorParticipation;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import de.tum.cit.ase.artemis.sdk.JSON;


/**
 * Exercise
 */
@JsonPropertyOrder({
  Exercise.JSON_PROPERTY_ID,
  Exercise.JSON_PROPERTY_TITLE,
  Exercise.JSON_PROPERTY_SHORT_NAME,
  Exercise.JSON_PROPERTY_MAX_POINTS,
  Exercise.JSON_PROPERTY_BONUS_POINTS,
  Exercise.JSON_PROPERTY_ASSESSMENT_TYPE,
  Exercise.JSON_PROPERTY_RELEASE_DATE,
  Exercise.JSON_PROPERTY_START_DATE,
  Exercise.JSON_PROPERTY_DUE_DATE,
  Exercise.JSON_PROPERTY_ASSESSMENT_DUE_DATE,
  Exercise.JSON_PROPERTY_EXAMPLE_SOLUTION_PUBLICATION_DATE,
  Exercise.JSON_PROPERTY_DIFFICULTY,
  Exercise.JSON_PROPERTY_MODE,
  Exercise.JSON_PROPERTY_ALLOW_COMPLAINTS_FOR_AUTOMATIC_ASSESSMENTS,
  Exercise.JSON_PROPERTY_ALLOW_MANUAL_FEEDBACK_REQUESTS,
  Exercise.JSON_PROPERTY_INCLUDED_IN_OVERALL_SCORE,
  Exercise.JSON_PROPERTY_PROBLEM_STATEMENT,
  Exercise.JSON_PROPERTY_GRADING_INSTRUCTIONS,
  Exercise.JSON_PROPERTY_CATEGORIES,
  Exercise.JSON_PROPERTY_TEAM_ASSIGNMENT_CONFIG,
  Exercise.JSON_PROPERTY_TEAMS,
  Exercise.JSON_PROPERTY_PRESENTATION_SCORE_ENABLED,
  Exercise.JSON_PROPERTY_SECOND_CORRECTION_ENABLED,
  Exercise.JSON_PROPERTY_COURSE,
  Exercise.JSON_PROPERTY_EXERCISE_GROUP,
  Exercise.JSON_PROPERTY_GRADING_CRITERIA,
  Exercise.JSON_PROPERTY_STUDENT_PARTICIPATIONS,
  Exercise.JSON_PROPERTY_TUTOR_PARTICIPATIONS,
  Exercise.JSON_PROPERTY_EXAMPLE_SUBMISSIONS,
  Exercise.JSON_PROPERTY_ATTACHMENTS,
  Exercise.JSON_PROPERTY_POSTS,
  Exercise.JSON_PROPERTY_PLAGIARISM_CASES,
  Exercise.JSON_PROPERTY_EXERCISE_TYPE,
  Exercise.JSON_PROPERTY_NUMBER_OF_ASSESSMENTS_OF_CORRECTION_ROUNDS,
  Exercise.JSON_PROPERTY_TOTAL_NUMBER_OF_ASSESSMENTS,
  Exercise.JSON_PROPERTY_AVERAGE_RATING,
  Exercise.JSON_PROPERTY_NUMBER_OF_RATINGS,
  Exercise.JSON_PROPERTY_NUMBER_OF_SUBMISSIONS,
  Exercise.JSON_PROPERTY_NUMBER_OF_OPEN_COMPLAINTS,
  Exercise.JSON_PROPERTY_NUMBER_OF_COMPLAINTS,
  Exercise.JSON_PROPERTY_NUMBER_OF_OPEN_MORE_FEEDBACK_REQUESTS,
  Exercise.JSON_PROPERTY_NUMBER_OF_MORE_FEEDBACK_REQUESTS,
  Exercise.JSON_PROPERTY_STUDENT_ASSIGNED_TEAM_ID,
  Exercise.JSON_PROPERTY_STUDENT_ASSIGNED_TEAM_ID_COMPUTED,
  Exercise.JSON_PROPERTY_GRADING_INSTRUCTION_FEEDBACK_USED,
  Exercise.JSON_PROPERTY_NUMBER_OF_PARTICIPATIONS,
  Exercise.JSON_PROPERTY_EXAMPLE_SOLUTION_PUBLISHED,
  Exercise.JSON_PROPERTY_RELEASED,
  Exercise.JSON_PROPERTY_TEST_RUN_PARTICIPATIONS_EXIST,
  Exercise.JSON_PROPERTY_TEAM_MODE,
  Exercise.JSON_PROPERTY_VISIBLE_TO_STUDENTS,
  Exercise.JSON_PROPERTY_TYPE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-04-06T13:57:19.283407Z[Etc/UTC]")
@JsonIgnoreProperties(
  value = "type", // ignore manually set type, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the type to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type", visible = true)
@JsonSubTypes({
  @JsonSubTypes.Type(value = FileUploadExercise.class, name = "file-upload"),
  @JsonSubTypes.Type(value = ModelingExercise.class, name = "modeling"),
  @JsonSubTypes.Type(value = ProgrammingExercise.class, name = "programming"),
  @JsonSubTypes.Type(value = QuizExercise.class, name = "quiz"),
  @JsonSubTypes.Type(value = TextExercise.class, name = "text"),
})

public class Exercise {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_TITLE = "title";
  private String title;

  public static final String JSON_PROPERTY_SHORT_NAME = "shortName";
  private String shortName;

  public static final String JSON_PROPERTY_MAX_POINTS = "maxPoints";
  private Double maxPoints;

  public static final String JSON_PROPERTY_BONUS_POINTS = "bonusPoints";
  private Double bonusPoints;

  /**
   * Gets or Sets assessmentType
   */
  public enum AssessmentTypeEnum {
    AUTOMATIC("AUTOMATIC"),
    
    SEMI_AUTOMATIC("SEMI_AUTOMATIC"),
    
    MANUAL("MANUAL");

    private String value;

    AssessmentTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AssessmentTypeEnum fromValue(String value) {
      for (AssessmentTypeEnum b : AssessmentTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ASSESSMENT_TYPE = "assessmentType";
  private AssessmentTypeEnum assessmentType;

  public static final String JSON_PROPERTY_RELEASE_DATE = "releaseDate";
  private OffsetDateTime releaseDate;

  public static final String JSON_PROPERTY_START_DATE = "startDate";
  private OffsetDateTime startDate;

  public static final String JSON_PROPERTY_DUE_DATE = "dueDate";
  private OffsetDateTime dueDate;

  public static final String JSON_PROPERTY_ASSESSMENT_DUE_DATE = "assessmentDueDate";
  private OffsetDateTime assessmentDueDate;

  public static final String JSON_PROPERTY_EXAMPLE_SOLUTION_PUBLICATION_DATE = "exampleSolutionPublicationDate";
  private OffsetDateTime exampleSolutionPublicationDate;

  /**
   * Gets or Sets difficulty
   */
  public enum DifficultyEnum {
    EASY("EASY"),
    
    MEDIUM("MEDIUM"),
    
    HARD("HARD");

    private String value;

    DifficultyEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DifficultyEnum fromValue(String value) {
      for (DifficultyEnum b : DifficultyEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_DIFFICULTY = "difficulty";
  private DifficultyEnum difficulty;

  /**
   * Gets or Sets mode
   */
  public enum ModeEnum {
    INDIVIDUAL("INDIVIDUAL"),
    
    TEAM("TEAM");

    private String value;

    ModeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ModeEnum fromValue(String value) {
      for (ModeEnum b : ModeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_MODE = "mode";
  private ModeEnum mode;

  public static final String JSON_PROPERTY_ALLOW_COMPLAINTS_FOR_AUTOMATIC_ASSESSMENTS = "allowComplaintsForAutomaticAssessments";
  private Boolean allowComplaintsForAutomaticAssessments;

  public static final String JSON_PROPERTY_ALLOW_MANUAL_FEEDBACK_REQUESTS = "allowManualFeedbackRequests";
  private Boolean allowManualFeedbackRequests;

  /**
   * Gets or Sets includedInOverallScore
   */
  public enum IncludedInOverallScoreEnum {
    INCLUDED_COMPLETELY("INCLUDED_COMPLETELY"),
    
    INCLUDED_AS_BONUS("INCLUDED_AS_BONUS"),
    
    NOT_INCLUDED("NOT_INCLUDED");

    private String value;

    IncludedInOverallScoreEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static IncludedInOverallScoreEnum fromValue(String value) {
      for (IncludedInOverallScoreEnum b : IncludedInOverallScoreEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_INCLUDED_IN_OVERALL_SCORE = "includedInOverallScore";
  private IncludedInOverallScoreEnum includedInOverallScore;

  public static final String JSON_PROPERTY_PROBLEM_STATEMENT = "problemStatement";
  private String problemStatement;

  public static final String JSON_PROPERTY_GRADING_INSTRUCTIONS = "gradingInstructions";
  private String gradingInstructions;

  public static final String JSON_PROPERTY_CATEGORIES = "categories";
  private Set<String> categories;

  public static final String JSON_PROPERTY_TEAM_ASSIGNMENT_CONFIG = "teamAssignmentConfig";
  private TeamAssignmentConfig teamAssignmentConfig;

  public static final String JSON_PROPERTY_TEAMS = "teams";
  private Set<Team> teams;

  public static final String JSON_PROPERTY_PRESENTATION_SCORE_ENABLED = "presentationScoreEnabled";
  private Boolean presentationScoreEnabled;

  public static final String JSON_PROPERTY_SECOND_CORRECTION_ENABLED = "secondCorrectionEnabled";
  private Boolean secondCorrectionEnabled;

  public static final String JSON_PROPERTY_COURSE = "course";
  private Course course;

  public static final String JSON_PROPERTY_EXERCISE_GROUP = "exerciseGroup";
  private ExerciseGroup exerciseGroup;

  public static final String JSON_PROPERTY_GRADING_CRITERIA = "gradingCriteria";
  private List<GradingCriterion> gradingCriteria;

  public static final String JSON_PROPERTY_STUDENT_PARTICIPATIONS = "studentParticipations";
  private Set<StudentParticipation> studentParticipations;

  public static final String JSON_PROPERTY_TUTOR_PARTICIPATIONS = "tutorParticipations";
  private Set<TutorParticipation> tutorParticipations;

  public static final String JSON_PROPERTY_EXAMPLE_SUBMISSIONS = "exampleSubmissions";
  private Set<ExampleSubmission> exampleSubmissions;

  public static final String JSON_PROPERTY_ATTACHMENTS = "attachments";
  private Set<Attachment> attachments;

  public static final String JSON_PROPERTY_POSTS = "posts";
  private Set<Post> posts;

  public static final String JSON_PROPERTY_PLAGIARISM_CASES = "plagiarismCases";
  private Set<PlagiarismCase> plagiarismCases;

  /**
   * Gets or Sets exerciseType
   */
  public enum ExerciseTypeEnum {
    TEXT("TEXT"),
    
    PROGRAMMING("PROGRAMMING"),
    
    MODELING("MODELING"),
    
    FILE_UPLOAD("FILE_UPLOAD"),
    
    QUIZ("QUIZ");

    private String value;

    ExerciseTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ExerciseTypeEnum fromValue(String value) {
      for (ExerciseTypeEnum b : ExerciseTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_EXERCISE_TYPE = "exerciseType";
  private ExerciseTypeEnum exerciseType;

  public static final String JSON_PROPERTY_NUMBER_OF_ASSESSMENTS_OF_CORRECTION_ROUNDS = "numberOfAssessmentsOfCorrectionRounds";
  private List<DueDateStat> numberOfAssessmentsOfCorrectionRounds;

  public static final String JSON_PROPERTY_TOTAL_NUMBER_OF_ASSESSMENTS = "totalNumberOfAssessments";
  private DueDateStat totalNumberOfAssessments;

  public static final String JSON_PROPERTY_AVERAGE_RATING = "averageRating";
  private Double averageRating;

  public static final String JSON_PROPERTY_NUMBER_OF_RATINGS = "numberOfRatings";
  private Long numberOfRatings;

  public static final String JSON_PROPERTY_NUMBER_OF_SUBMISSIONS = "numberOfSubmissions";
  private DueDateStat numberOfSubmissions;

  public static final String JSON_PROPERTY_NUMBER_OF_OPEN_COMPLAINTS = "numberOfOpenComplaints";
  private Long numberOfOpenComplaints;

  public static final String JSON_PROPERTY_NUMBER_OF_COMPLAINTS = "numberOfComplaints";
  private Long numberOfComplaints;

  public static final String JSON_PROPERTY_NUMBER_OF_OPEN_MORE_FEEDBACK_REQUESTS = "numberOfOpenMoreFeedbackRequests";
  private Long numberOfOpenMoreFeedbackRequests;

  public static final String JSON_PROPERTY_NUMBER_OF_MORE_FEEDBACK_REQUESTS = "numberOfMoreFeedbackRequests";
  private Long numberOfMoreFeedbackRequests;

  public static final String JSON_PROPERTY_STUDENT_ASSIGNED_TEAM_ID = "studentAssignedTeamId";
  private Long studentAssignedTeamId;

  public static final String JSON_PROPERTY_STUDENT_ASSIGNED_TEAM_ID_COMPUTED = "studentAssignedTeamIdComputed";
  private Boolean studentAssignedTeamIdComputed;

  public static final String JSON_PROPERTY_GRADING_INSTRUCTION_FEEDBACK_USED = "gradingInstructionFeedbackUsed";
  private Boolean gradingInstructionFeedbackUsed;

  public static final String JSON_PROPERTY_NUMBER_OF_PARTICIPATIONS = "numberOfParticipations";
  private Long numberOfParticipations;

  public static final String JSON_PROPERTY_EXAMPLE_SOLUTION_PUBLISHED = "exampleSolutionPublished";
  private Boolean exampleSolutionPublished;

  public static final String JSON_PROPERTY_RELEASED = "released";
  private Boolean released;

  public static final String JSON_PROPERTY_TEST_RUN_PARTICIPATIONS_EXIST = "testRunParticipationsExist";
  private Boolean testRunParticipationsExist;

  public static final String JSON_PROPERTY_TEAM_MODE = "teamMode";
  private Boolean teamMode;

  public static final String JSON_PROPERTY_VISIBLE_TO_STUDENTS = "visibleToStudents";
  private Boolean visibleToStudents;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public Exercise() { 
  }

  public Exercise id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Long id) {
    this.id = id;
  }


  public Exercise title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTitle() {
    return title;
  }


  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTitle(String title) {
    this.title = title;
  }


  public Exercise shortName(String shortName) {
    this.shortName = shortName;
    return this;
  }

   /**
   * Get shortName
   * @return shortName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHORT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getShortName() {
    return shortName;
  }


  @JsonProperty(JSON_PROPERTY_SHORT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShortName(String shortName) {
    this.shortName = shortName;
  }


  public Exercise maxPoints(Double maxPoints) {
    this.maxPoints = maxPoints;
    return this;
  }

   /**
   * Get maxPoints
   * @return maxPoints
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAX_POINTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getMaxPoints() {
    return maxPoints;
  }


  @JsonProperty(JSON_PROPERTY_MAX_POINTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxPoints(Double maxPoints) {
    this.maxPoints = maxPoints;
  }


  public Exercise bonusPoints(Double bonusPoints) {
    this.bonusPoints = bonusPoints;
    return this;
  }

   /**
   * Get bonusPoints
   * @return bonusPoints
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BONUS_POINTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getBonusPoints() {
    return bonusPoints;
  }


  @JsonProperty(JSON_PROPERTY_BONUS_POINTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBonusPoints(Double bonusPoints) {
    this.bonusPoints = bonusPoints;
  }


  public Exercise assessmentType(AssessmentTypeEnum assessmentType) {
    this.assessmentType = assessmentType;
    return this;
  }

   /**
   * Get assessmentType
   * @return assessmentType
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ASSESSMENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AssessmentTypeEnum getAssessmentType() {
    return assessmentType;
  }


  @JsonProperty(JSON_PROPERTY_ASSESSMENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAssessmentType(AssessmentTypeEnum assessmentType) {
    this.assessmentType = assessmentType;
  }


  public Exercise releaseDate(OffsetDateTime releaseDate) {
    this.releaseDate = releaseDate;
    return this;
  }

   /**
   * Get releaseDate
   * @return releaseDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RELEASE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getReleaseDate() {
    return releaseDate;
  }


  @JsonProperty(JSON_PROPERTY_RELEASE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReleaseDate(OffsetDateTime releaseDate) {
    this.releaseDate = releaseDate;
  }


  public Exercise startDate(OffsetDateTime startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getStartDate() {
    return startDate;
  }


  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = startDate;
  }


  public Exercise dueDate(OffsetDateTime dueDate) {
    this.dueDate = dueDate;
    return this;
  }

   /**
   * Get dueDate
   * @return dueDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DUE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getDueDate() {
    return dueDate;
  }


  @JsonProperty(JSON_PROPERTY_DUE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDueDate(OffsetDateTime dueDate) {
    this.dueDate = dueDate;
  }


  public Exercise assessmentDueDate(OffsetDateTime assessmentDueDate) {
    this.assessmentDueDate = assessmentDueDate;
    return this;
  }

   /**
   * Get assessmentDueDate
   * @return assessmentDueDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ASSESSMENT_DUE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getAssessmentDueDate() {
    return assessmentDueDate;
  }


  @JsonProperty(JSON_PROPERTY_ASSESSMENT_DUE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAssessmentDueDate(OffsetDateTime assessmentDueDate) {
    this.assessmentDueDate = assessmentDueDate;
  }


  public Exercise exampleSolutionPublicationDate(OffsetDateTime exampleSolutionPublicationDate) {
    this.exampleSolutionPublicationDate = exampleSolutionPublicationDate;
    return this;
  }

   /**
   * Get exampleSolutionPublicationDate
   * @return exampleSolutionPublicationDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXAMPLE_SOLUTION_PUBLICATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getExampleSolutionPublicationDate() {
    return exampleSolutionPublicationDate;
  }


  @JsonProperty(JSON_PROPERTY_EXAMPLE_SOLUTION_PUBLICATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExampleSolutionPublicationDate(OffsetDateTime exampleSolutionPublicationDate) {
    this.exampleSolutionPublicationDate = exampleSolutionPublicationDate;
  }


  public Exercise difficulty(DifficultyEnum difficulty) {
    this.difficulty = difficulty;
    return this;
  }

   /**
   * Get difficulty
   * @return difficulty
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIFFICULTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DifficultyEnum getDifficulty() {
    return difficulty;
  }


  @JsonProperty(JSON_PROPERTY_DIFFICULTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDifficulty(DifficultyEnum difficulty) {
    this.difficulty = difficulty;
  }


  public Exercise mode(ModeEnum mode) {
    this.mode = mode;
    return this;
  }

   /**
   * Get mode
   * @return mode
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ModeEnum getMode() {
    return mode;
  }


  @JsonProperty(JSON_PROPERTY_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMode(ModeEnum mode) {
    this.mode = mode;
  }


  public Exercise allowComplaintsForAutomaticAssessments(Boolean allowComplaintsForAutomaticAssessments) {
    this.allowComplaintsForAutomaticAssessments = allowComplaintsForAutomaticAssessments;
    return this;
  }

   /**
   * Get allowComplaintsForAutomaticAssessments
   * @return allowComplaintsForAutomaticAssessments
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ALLOW_COMPLAINTS_FOR_AUTOMATIC_ASSESSMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAllowComplaintsForAutomaticAssessments() {
    return allowComplaintsForAutomaticAssessments;
  }


  @JsonProperty(JSON_PROPERTY_ALLOW_COMPLAINTS_FOR_AUTOMATIC_ASSESSMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAllowComplaintsForAutomaticAssessments(Boolean allowComplaintsForAutomaticAssessments) {
    this.allowComplaintsForAutomaticAssessments = allowComplaintsForAutomaticAssessments;
  }


  public Exercise allowManualFeedbackRequests(Boolean allowManualFeedbackRequests) {
    this.allowManualFeedbackRequests = allowManualFeedbackRequests;
    return this;
  }

   /**
   * Get allowManualFeedbackRequests
   * @return allowManualFeedbackRequests
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ALLOW_MANUAL_FEEDBACK_REQUESTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAllowManualFeedbackRequests() {
    return allowManualFeedbackRequests;
  }


  @JsonProperty(JSON_PROPERTY_ALLOW_MANUAL_FEEDBACK_REQUESTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAllowManualFeedbackRequests(Boolean allowManualFeedbackRequests) {
    this.allowManualFeedbackRequests = allowManualFeedbackRequests;
  }


  public Exercise includedInOverallScore(IncludedInOverallScoreEnum includedInOverallScore) {
    this.includedInOverallScore = includedInOverallScore;
    return this;
  }

   /**
   * Get includedInOverallScore
   * @return includedInOverallScore
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INCLUDED_IN_OVERALL_SCORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public IncludedInOverallScoreEnum getIncludedInOverallScore() {
    return includedInOverallScore;
  }


  @JsonProperty(JSON_PROPERTY_INCLUDED_IN_OVERALL_SCORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIncludedInOverallScore(IncludedInOverallScoreEnum includedInOverallScore) {
    this.includedInOverallScore = includedInOverallScore;
  }


  public Exercise problemStatement(String problemStatement) {
    this.problemStatement = problemStatement;
    return this;
  }

   /**
   * Get problemStatement
   * @return problemStatement
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROBLEM_STATEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProblemStatement() {
    return problemStatement;
  }


  @JsonProperty(JSON_PROPERTY_PROBLEM_STATEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProblemStatement(String problemStatement) {
    this.problemStatement = problemStatement;
  }


  public Exercise gradingInstructions(String gradingInstructions) {
    this.gradingInstructions = gradingInstructions;
    return this;
  }

   /**
   * Get gradingInstructions
   * @return gradingInstructions
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GRADING_INSTRUCTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getGradingInstructions() {
    return gradingInstructions;
  }


  @JsonProperty(JSON_PROPERTY_GRADING_INSTRUCTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGradingInstructions(String gradingInstructions) {
    this.gradingInstructions = gradingInstructions;
  }


  public Exercise categories(Set<String> categories) {
    this.categories = categories;
    return this;
  }

  public Exercise addCategoriesItem(String categoriesItem) {
    if (this.categories == null) {
      this.categories = new LinkedHashSet<>();
    }
    this.categories.add(categoriesItem);
    return this;
  }

   /**
   * Get categories
   * @return categories
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CATEGORIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<String> getCategories() {
    return categories;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_CATEGORIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCategories(Set<String> categories) {
    this.categories = categories;
  }


  public Exercise teamAssignmentConfig(TeamAssignmentConfig teamAssignmentConfig) {
    this.teamAssignmentConfig = teamAssignmentConfig;
    return this;
  }

   /**
   * Get teamAssignmentConfig
   * @return teamAssignmentConfig
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TEAM_ASSIGNMENT_CONFIG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TeamAssignmentConfig getTeamAssignmentConfig() {
    return teamAssignmentConfig;
  }


  @JsonProperty(JSON_PROPERTY_TEAM_ASSIGNMENT_CONFIG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTeamAssignmentConfig(TeamAssignmentConfig teamAssignmentConfig) {
    this.teamAssignmentConfig = teamAssignmentConfig;
  }


  public Exercise teams(Set<Team> teams) {
    this.teams = teams;
    return this;
  }

  public Exercise addTeamsItem(Team teamsItem) {
    if (this.teams == null) {
      this.teams = new LinkedHashSet<>();
    }
    this.teams.add(teamsItem);
    return this;
  }

   /**
   * Get teams
   * @return teams
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TEAMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<Team> getTeams() {
    return teams;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_TEAMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTeams(Set<Team> teams) {
    this.teams = teams;
  }


  public Exercise presentationScoreEnabled(Boolean presentationScoreEnabled) {
    this.presentationScoreEnabled = presentationScoreEnabled;
    return this;
  }

   /**
   * Get presentationScoreEnabled
   * @return presentationScoreEnabled
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRESENTATION_SCORE_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getPresentationScoreEnabled() {
    return presentationScoreEnabled;
  }


  @JsonProperty(JSON_PROPERTY_PRESENTATION_SCORE_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPresentationScoreEnabled(Boolean presentationScoreEnabled) {
    this.presentationScoreEnabled = presentationScoreEnabled;
  }


  public Exercise secondCorrectionEnabled(Boolean secondCorrectionEnabled) {
    this.secondCorrectionEnabled = secondCorrectionEnabled;
    return this;
  }

   /**
   * Get secondCorrectionEnabled
   * @return secondCorrectionEnabled
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECOND_CORRECTION_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSecondCorrectionEnabled() {
    return secondCorrectionEnabled;
  }


  @JsonProperty(JSON_PROPERTY_SECOND_CORRECTION_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecondCorrectionEnabled(Boolean secondCorrectionEnabled) {
    this.secondCorrectionEnabled = secondCorrectionEnabled;
  }


  public Exercise course(Course course) {
    this.course = course;
    return this;
  }

   /**
   * Get course
   * @return course
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COURSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Course getCourse() {
    return course;
  }


  @JsonProperty(JSON_PROPERTY_COURSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCourse(Course course) {
    this.course = course;
  }


  public Exercise exerciseGroup(ExerciseGroup exerciseGroup) {
    this.exerciseGroup = exerciseGroup;
    return this;
  }

   /**
   * Get exerciseGroup
   * @return exerciseGroup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXERCISE_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ExerciseGroup getExerciseGroup() {
    return exerciseGroup;
  }


  @JsonProperty(JSON_PROPERTY_EXERCISE_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExerciseGroup(ExerciseGroup exerciseGroup) {
    this.exerciseGroup = exerciseGroup;
  }


  public Exercise gradingCriteria(List<GradingCriterion> gradingCriteria) {
    this.gradingCriteria = gradingCriteria;
    return this;
  }

  public Exercise addGradingCriteriaItem(GradingCriterion gradingCriteriaItem) {
    if (this.gradingCriteria == null) {
      this.gradingCriteria = new ArrayList<>();
    }
    this.gradingCriteria.add(gradingCriteriaItem);
    return this;
  }

   /**
   * Get gradingCriteria
   * @return gradingCriteria
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GRADING_CRITERIA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<GradingCriterion> getGradingCriteria() {
    return gradingCriteria;
  }


  @JsonProperty(JSON_PROPERTY_GRADING_CRITERIA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGradingCriteria(List<GradingCriterion> gradingCriteria) {
    this.gradingCriteria = gradingCriteria;
  }


  public Exercise studentParticipations(Set<StudentParticipation> studentParticipations) {
    this.studentParticipations = studentParticipations;
    return this;
  }

  public Exercise addStudentParticipationsItem(StudentParticipation studentParticipationsItem) {
    if (this.studentParticipations == null) {
      this.studentParticipations = new LinkedHashSet<>();
    }
    this.studentParticipations.add(studentParticipationsItem);
    return this;
  }

   /**
   * Get studentParticipations
   * @return studentParticipations
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STUDENT_PARTICIPATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<StudentParticipation> getStudentParticipations() {
    return studentParticipations;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_STUDENT_PARTICIPATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStudentParticipations(Set<StudentParticipation> studentParticipations) {
    this.studentParticipations = studentParticipations;
  }


  public Exercise tutorParticipations(Set<TutorParticipation> tutorParticipations) {
    this.tutorParticipations = tutorParticipations;
    return this;
  }

  public Exercise addTutorParticipationsItem(TutorParticipation tutorParticipationsItem) {
    if (this.tutorParticipations == null) {
      this.tutorParticipations = new LinkedHashSet<>();
    }
    this.tutorParticipations.add(tutorParticipationsItem);
    return this;
  }

   /**
   * Get tutorParticipations
   * @return tutorParticipations
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TUTOR_PARTICIPATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<TutorParticipation> getTutorParticipations() {
    return tutorParticipations;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_TUTOR_PARTICIPATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTutorParticipations(Set<TutorParticipation> tutorParticipations) {
    this.tutorParticipations = tutorParticipations;
  }


  public Exercise exampleSubmissions(Set<ExampleSubmission> exampleSubmissions) {
    this.exampleSubmissions = exampleSubmissions;
    return this;
  }

  public Exercise addExampleSubmissionsItem(ExampleSubmission exampleSubmissionsItem) {
    if (this.exampleSubmissions == null) {
      this.exampleSubmissions = new LinkedHashSet<>();
    }
    this.exampleSubmissions.add(exampleSubmissionsItem);
    return this;
  }

   /**
   * Get exampleSubmissions
   * @return exampleSubmissions
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXAMPLE_SUBMISSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<ExampleSubmission> getExampleSubmissions() {
    return exampleSubmissions;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_EXAMPLE_SUBMISSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExampleSubmissions(Set<ExampleSubmission> exampleSubmissions) {
    this.exampleSubmissions = exampleSubmissions;
  }


  public Exercise attachments(Set<Attachment> attachments) {
    this.attachments = attachments;
    return this;
  }

  public Exercise addAttachmentsItem(Attachment attachmentsItem) {
    if (this.attachments == null) {
      this.attachments = new LinkedHashSet<>();
    }
    this.attachments.add(attachmentsItem);
    return this;
  }

   /**
   * Get attachments
   * @return attachments
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ATTACHMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<Attachment> getAttachments() {
    return attachments;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_ATTACHMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAttachments(Set<Attachment> attachments) {
    this.attachments = attachments;
  }


  public Exercise posts(Set<Post> posts) {
    this.posts = posts;
    return this;
  }

  public Exercise addPostsItem(Post postsItem) {
    if (this.posts == null) {
      this.posts = new LinkedHashSet<>();
    }
    this.posts.add(postsItem);
    return this;
  }

   /**
   * Get posts
   * @return posts
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POSTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<Post> getPosts() {
    return posts;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_POSTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPosts(Set<Post> posts) {
    this.posts = posts;
  }


  public Exercise plagiarismCases(Set<PlagiarismCase> plagiarismCases) {
    this.plagiarismCases = plagiarismCases;
    return this;
  }

  public Exercise addPlagiarismCasesItem(PlagiarismCase plagiarismCasesItem) {
    if (this.plagiarismCases == null) {
      this.plagiarismCases = new LinkedHashSet<>();
    }
    this.plagiarismCases.add(plagiarismCasesItem);
    return this;
  }

   /**
   * Get plagiarismCases
   * @return plagiarismCases
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PLAGIARISM_CASES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<PlagiarismCase> getPlagiarismCases() {
    return plagiarismCases;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_PLAGIARISM_CASES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPlagiarismCases(Set<PlagiarismCase> plagiarismCases) {
    this.plagiarismCases = plagiarismCases;
  }


  public Exercise exerciseType(ExerciseTypeEnum exerciseType) {
    this.exerciseType = exerciseType;
    return this;
  }

   /**
   * Get exerciseType
   * @return exerciseType
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EXERCISE_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ExerciseTypeEnum getExerciseType() {
    return exerciseType;
  }


  @JsonProperty(JSON_PROPERTY_EXERCISE_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExerciseType(ExerciseTypeEnum exerciseType) {
    this.exerciseType = exerciseType;
  }


  public Exercise numberOfAssessmentsOfCorrectionRounds(List<DueDateStat> numberOfAssessmentsOfCorrectionRounds) {
    this.numberOfAssessmentsOfCorrectionRounds = numberOfAssessmentsOfCorrectionRounds;
    return this;
  }

  public Exercise addNumberOfAssessmentsOfCorrectionRoundsItem(DueDateStat numberOfAssessmentsOfCorrectionRoundsItem) {
    if (this.numberOfAssessmentsOfCorrectionRounds == null) {
      this.numberOfAssessmentsOfCorrectionRounds = new ArrayList<>();
    }
    this.numberOfAssessmentsOfCorrectionRounds.add(numberOfAssessmentsOfCorrectionRoundsItem);
    return this;
  }

   /**
   * Get numberOfAssessmentsOfCorrectionRounds
   * @return numberOfAssessmentsOfCorrectionRounds
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NUMBER_OF_ASSESSMENTS_OF_CORRECTION_ROUNDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<DueDateStat> getNumberOfAssessmentsOfCorrectionRounds() {
    return numberOfAssessmentsOfCorrectionRounds;
  }


  @JsonProperty(JSON_PROPERTY_NUMBER_OF_ASSESSMENTS_OF_CORRECTION_ROUNDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNumberOfAssessmentsOfCorrectionRounds(List<DueDateStat> numberOfAssessmentsOfCorrectionRounds) {
    this.numberOfAssessmentsOfCorrectionRounds = numberOfAssessmentsOfCorrectionRounds;
  }


  public Exercise totalNumberOfAssessments(DueDateStat totalNumberOfAssessments) {
    this.totalNumberOfAssessments = totalNumberOfAssessments;
    return this;
  }

   /**
   * Get totalNumberOfAssessments
   * @return totalNumberOfAssessments
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_NUMBER_OF_ASSESSMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DueDateStat getTotalNumberOfAssessments() {
    return totalNumberOfAssessments;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_NUMBER_OF_ASSESSMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalNumberOfAssessments(DueDateStat totalNumberOfAssessments) {
    this.totalNumberOfAssessments = totalNumberOfAssessments;
  }


  public Exercise averageRating(Double averageRating) {
    this.averageRating = averageRating;
    return this;
  }

   /**
   * Get averageRating
   * @return averageRating
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AVERAGE_RATING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getAverageRating() {
    return averageRating;
  }


  @JsonProperty(JSON_PROPERTY_AVERAGE_RATING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAverageRating(Double averageRating) {
    this.averageRating = averageRating;
  }


  public Exercise numberOfRatings(Long numberOfRatings) {
    this.numberOfRatings = numberOfRatings;
    return this;
  }

   /**
   * Get numberOfRatings
   * @return numberOfRatings
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NUMBER_OF_RATINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getNumberOfRatings() {
    return numberOfRatings;
  }


  @JsonProperty(JSON_PROPERTY_NUMBER_OF_RATINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNumberOfRatings(Long numberOfRatings) {
    this.numberOfRatings = numberOfRatings;
  }


  public Exercise numberOfSubmissions(DueDateStat numberOfSubmissions) {
    this.numberOfSubmissions = numberOfSubmissions;
    return this;
  }

   /**
   * Get numberOfSubmissions
   * @return numberOfSubmissions
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NUMBER_OF_SUBMISSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DueDateStat getNumberOfSubmissions() {
    return numberOfSubmissions;
  }


  @JsonProperty(JSON_PROPERTY_NUMBER_OF_SUBMISSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNumberOfSubmissions(DueDateStat numberOfSubmissions) {
    this.numberOfSubmissions = numberOfSubmissions;
  }


  public Exercise numberOfOpenComplaints(Long numberOfOpenComplaints) {
    this.numberOfOpenComplaints = numberOfOpenComplaints;
    return this;
  }

   /**
   * Get numberOfOpenComplaints
   * @return numberOfOpenComplaints
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NUMBER_OF_OPEN_COMPLAINTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getNumberOfOpenComplaints() {
    return numberOfOpenComplaints;
  }


  @JsonProperty(JSON_PROPERTY_NUMBER_OF_OPEN_COMPLAINTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNumberOfOpenComplaints(Long numberOfOpenComplaints) {
    this.numberOfOpenComplaints = numberOfOpenComplaints;
  }


  public Exercise numberOfComplaints(Long numberOfComplaints) {
    this.numberOfComplaints = numberOfComplaints;
    return this;
  }

   /**
   * Get numberOfComplaints
   * @return numberOfComplaints
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NUMBER_OF_COMPLAINTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getNumberOfComplaints() {
    return numberOfComplaints;
  }


  @JsonProperty(JSON_PROPERTY_NUMBER_OF_COMPLAINTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNumberOfComplaints(Long numberOfComplaints) {
    this.numberOfComplaints = numberOfComplaints;
  }


  public Exercise numberOfOpenMoreFeedbackRequests(Long numberOfOpenMoreFeedbackRequests) {
    this.numberOfOpenMoreFeedbackRequests = numberOfOpenMoreFeedbackRequests;
    return this;
  }

   /**
   * Get numberOfOpenMoreFeedbackRequests
   * @return numberOfOpenMoreFeedbackRequests
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NUMBER_OF_OPEN_MORE_FEEDBACK_REQUESTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getNumberOfOpenMoreFeedbackRequests() {
    return numberOfOpenMoreFeedbackRequests;
  }


  @JsonProperty(JSON_PROPERTY_NUMBER_OF_OPEN_MORE_FEEDBACK_REQUESTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNumberOfOpenMoreFeedbackRequests(Long numberOfOpenMoreFeedbackRequests) {
    this.numberOfOpenMoreFeedbackRequests = numberOfOpenMoreFeedbackRequests;
  }


  public Exercise numberOfMoreFeedbackRequests(Long numberOfMoreFeedbackRequests) {
    this.numberOfMoreFeedbackRequests = numberOfMoreFeedbackRequests;
    return this;
  }

   /**
   * Get numberOfMoreFeedbackRequests
   * @return numberOfMoreFeedbackRequests
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NUMBER_OF_MORE_FEEDBACK_REQUESTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getNumberOfMoreFeedbackRequests() {
    return numberOfMoreFeedbackRequests;
  }


  @JsonProperty(JSON_PROPERTY_NUMBER_OF_MORE_FEEDBACK_REQUESTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNumberOfMoreFeedbackRequests(Long numberOfMoreFeedbackRequests) {
    this.numberOfMoreFeedbackRequests = numberOfMoreFeedbackRequests;
  }


  public Exercise studentAssignedTeamId(Long studentAssignedTeamId) {
    this.studentAssignedTeamId = studentAssignedTeamId;
    return this;
  }

   /**
   * Get studentAssignedTeamId
   * @return studentAssignedTeamId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STUDENT_ASSIGNED_TEAM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getStudentAssignedTeamId() {
    return studentAssignedTeamId;
  }


  @JsonProperty(JSON_PROPERTY_STUDENT_ASSIGNED_TEAM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStudentAssignedTeamId(Long studentAssignedTeamId) {
    this.studentAssignedTeamId = studentAssignedTeamId;
  }


  public Exercise studentAssignedTeamIdComputed(Boolean studentAssignedTeamIdComputed) {
    this.studentAssignedTeamIdComputed = studentAssignedTeamIdComputed;
    return this;
  }

   /**
   * Get studentAssignedTeamIdComputed
   * @return studentAssignedTeamIdComputed
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STUDENT_ASSIGNED_TEAM_ID_COMPUTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getStudentAssignedTeamIdComputed() {
    return studentAssignedTeamIdComputed;
  }


  @JsonProperty(JSON_PROPERTY_STUDENT_ASSIGNED_TEAM_ID_COMPUTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStudentAssignedTeamIdComputed(Boolean studentAssignedTeamIdComputed) {
    this.studentAssignedTeamIdComputed = studentAssignedTeamIdComputed;
  }


  public Exercise gradingInstructionFeedbackUsed(Boolean gradingInstructionFeedbackUsed) {
    this.gradingInstructionFeedbackUsed = gradingInstructionFeedbackUsed;
    return this;
  }

   /**
   * Get gradingInstructionFeedbackUsed
   * @return gradingInstructionFeedbackUsed
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GRADING_INSTRUCTION_FEEDBACK_USED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getGradingInstructionFeedbackUsed() {
    return gradingInstructionFeedbackUsed;
  }


  @JsonProperty(JSON_PROPERTY_GRADING_INSTRUCTION_FEEDBACK_USED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGradingInstructionFeedbackUsed(Boolean gradingInstructionFeedbackUsed) {
    this.gradingInstructionFeedbackUsed = gradingInstructionFeedbackUsed;
  }


  public Exercise numberOfParticipations(Long numberOfParticipations) {
    this.numberOfParticipations = numberOfParticipations;
    return this;
  }

   /**
   * Get numberOfParticipations
   * @return numberOfParticipations
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NUMBER_OF_PARTICIPATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getNumberOfParticipations() {
    return numberOfParticipations;
  }


  @JsonProperty(JSON_PROPERTY_NUMBER_OF_PARTICIPATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNumberOfParticipations(Long numberOfParticipations) {
    this.numberOfParticipations = numberOfParticipations;
  }


  public Exercise exampleSolutionPublished(Boolean exampleSolutionPublished) {
    this.exampleSolutionPublished = exampleSolutionPublished;
    return this;
  }

   /**
   * Get exampleSolutionPublished
   * @return exampleSolutionPublished
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXAMPLE_SOLUTION_PUBLISHED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getExampleSolutionPublished() {
    return exampleSolutionPublished;
  }


  @JsonProperty(JSON_PROPERTY_EXAMPLE_SOLUTION_PUBLISHED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExampleSolutionPublished(Boolean exampleSolutionPublished) {
    this.exampleSolutionPublished = exampleSolutionPublished;
  }


  public Exercise released(Boolean released) {
    this.released = released;
    return this;
  }

   /**
   * Get released
   * @return released
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RELEASED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getReleased() {
    return released;
  }


  @JsonProperty(JSON_PROPERTY_RELEASED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReleased(Boolean released) {
    this.released = released;
  }


  public Exercise testRunParticipationsExist(Boolean testRunParticipationsExist) {
    this.testRunParticipationsExist = testRunParticipationsExist;
    return this;
  }

   /**
   * Get testRunParticipationsExist
   * @return testRunParticipationsExist
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TEST_RUN_PARTICIPATIONS_EXIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getTestRunParticipationsExist() {
    return testRunParticipationsExist;
  }


  @JsonProperty(JSON_PROPERTY_TEST_RUN_PARTICIPATIONS_EXIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTestRunParticipationsExist(Boolean testRunParticipationsExist) {
    this.testRunParticipationsExist = testRunParticipationsExist;
  }


  public Exercise teamMode(Boolean teamMode) {
    this.teamMode = teamMode;
    return this;
  }

   /**
   * Get teamMode
   * @return teamMode
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TEAM_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getTeamMode() {
    return teamMode;
  }


  @JsonProperty(JSON_PROPERTY_TEAM_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTeamMode(Boolean teamMode) {
    this.teamMode = teamMode;
  }


  public Exercise visibleToStudents(Boolean visibleToStudents) {
    this.visibleToStudents = visibleToStudents;
    return this;
  }

   /**
   * Get visibleToStudents
   * @return visibleToStudents
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VISIBLE_TO_STUDENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getVisibleToStudents() {
    return visibleToStudents;
  }


  @JsonProperty(JSON_PROPERTY_VISIBLE_TO_STUDENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVisibleToStudents(Boolean visibleToStudents) {
    this.visibleToStudents = visibleToStudents;
  }


  public Exercise type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(String type) {
    this.type = type;
  }


  /**
   * Return true if this Exercise object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Exercise exercise = (Exercise) o;
    return Objects.equals(this.id, exercise.id) &&
        Objects.equals(this.title, exercise.title) &&
        Objects.equals(this.shortName, exercise.shortName) &&
        Objects.equals(this.maxPoints, exercise.maxPoints) &&
        Objects.equals(this.bonusPoints, exercise.bonusPoints) &&
        Objects.equals(this.assessmentType, exercise.assessmentType) &&
        Objects.equals(this.releaseDate, exercise.releaseDate) &&
        Objects.equals(this.startDate, exercise.startDate) &&
        Objects.equals(this.dueDate, exercise.dueDate) &&
        Objects.equals(this.assessmentDueDate, exercise.assessmentDueDate) &&
        Objects.equals(this.exampleSolutionPublicationDate, exercise.exampleSolutionPublicationDate) &&
        Objects.equals(this.difficulty, exercise.difficulty) &&
        Objects.equals(this.mode, exercise.mode) &&
        Objects.equals(this.allowComplaintsForAutomaticAssessments, exercise.allowComplaintsForAutomaticAssessments) &&
        Objects.equals(this.allowManualFeedbackRequests, exercise.allowManualFeedbackRequests) &&
        Objects.equals(this.includedInOverallScore, exercise.includedInOverallScore) &&
        Objects.equals(this.problemStatement, exercise.problemStatement) &&
        Objects.equals(this.gradingInstructions, exercise.gradingInstructions) &&
        Objects.equals(this.categories, exercise.categories) &&
        Objects.equals(this.teamAssignmentConfig, exercise.teamAssignmentConfig) &&
        Objects.equals(this.teams, exercise.teams) &&
        Objects.equals(this.presentationScoreEnabled, exercise.presentationScoreEnabled) &&
        Objects.equals(this.secondCorrectionEnabled, exercise.secondCorrectionEnabled) &&
        Objects.equals(this.course, exercise.course) &&
        Objects.equals(this.exerciseGroup, exercise.exerciseGroup) &&
        Objects.equals(this.gradingCriteria, exercise.gradingCriteria) &&
        Objects.equals(this.studentParticipations, exercise.studentParticipations) &&
        Objects.equals(this.tutorParticipations, exercise.tutorParticipations) &&
        Objects.equals(this.exampleSubmissions, exercise.exampleSubmissions) &&
        Objects.equals(this.attachments, exercise.attachments) &&
        Objects.equals(this.posts, exercise.posts) &&
        Objects.equals(this.plagiarismCases, exercise.plagiarismCases) &&
        Objects.equals(this.exerciseType, exercise.exerciseType) &&
        Objects.equals(this.numberOfAssessmentsOfCorrectionRounds, exercise.numberOfAssessmentsOfCorrectionRounds) &&
        Objects.equals(this.totalNumberOfAssessments, exercise.totalNumberOfAssessments) &&
        Objects.equals(this.averageRating, exercise.averageRating) &&
        Objects.equals(this.numberOfRatings, exercise.numberOfRatings) &&
        Objects.equals(this.numberOfSubmissions, exercise.numberOfSubmissions) &&
        Objects.equals(this.numberOfOpenComplaints, exercise.numberOfOpenComplaints) &&
        Objects.equals(this.numberOfComplaints, exercise.numberOfComplaints) &&
        Objects.equals(this.numberOfOpenMoreFeedbackRequests, exercise.numberOfOpenMoreFeedbackRequests) &&
        Objects.equals(this.numberOfMoreFeedbackRequests, exercise.numberOfMoreFeedbackRequests) &&
        Objects.equals(this.studentAssignedTeamId, exercise.studentAssignedTeamId) &&
        Objects.equals(this.studentAssignedTeamIdComputed, exercise.studentAssignedTeamIdComputed) &&
        Objects.equals(this.gradingInstructionFeedbackUsed, exercise.gradingInstructionFeedbackUsed) &&
        Objects.equals(this.numberOfParticipations, exercise.numberOfParticipations) &&
        Objects.equals(this.exampleSolutionPublished, exercise.exampleSolutionPublished) &&
        Objects.equals(this.released, exercise.released) &&
        Objects.equals(this.testRunParticipationsExist, exercise.testRunParticipationsExist) &&
        Objects.equals(this.teamMode, exercise.teamMode) &&
        Objects.equals(this.visibleToStudents, exercise.visibleToStudents) &&
        Objects.equals(this.type, exercise.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, title, shortName, maxPoints, bonusPoints, assessmentType, releaseDate, startDate, dueDate, assessmentDueDate, exampleSolutionPublicationDate, difficulty, mode, allowComplaintsForAutomaticAssessments, allowManualFeedbackRequests, includedInOverallScore, problemStatement, gradingInstructions, categories, teamAssignmentConfig, teams, presentationScoreEnabled, secondCorrectionEnabled, course, exerciseGroup, gradingCriteria, studentParticipations, tutorParticipations, exampleSubmissions, attachments, posts, plagiarismCases, exerciseType, numberOfAssessmentsOfCorrectionRounds, totalNumberOfAssessments, averageRating, numberOfRatings, numberOfSubmissions, numberOfOpenComplaints, numberOfComplaints, numberOfOpenMoreFeedbackRequests, numberOfMoreFeedbackRequests, studentAssignedTeamId, studentAssignedTeamIdComputed, gradingInstructionFeedbackUsed, numberOfParticipations, exampleSolutionPublished, released, testRunParticipationsExist, teamMode, visibleToStudents, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Exercise {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    shortName: ").append(toIndentedString(shortName)).append("\n");
    sb.append("    maxPoints: ").append(toIndentedString(maxPoints)).append("\n");
    sb.append("    bonusPoints: ").append(toIndentedString(bonusPoints)).append("\n");
    sb.append("    assessmentType: ").append(toIndentedString(assessmentType)).append("\n");
    sb.append("    releaseDate: ").append(toIndentedString(releaseDate)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    dueDate: ").append(toIndentedString(dueDate)).append("\n");
    sb.append("    assessmentDueDate: ").append(toIndentedString(assessmentDueDate)).append("\n");
    sb.append("    exampleSolutionPublicationDate: ").append(toIndentedString(exampleSolutionPublicationDate)).append("\n");
    sb.append("    difficulty: ").append(toIndentedString(difficulty)).append("\n");
    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
    sb.append("    allowComplaintsForAutomaticAssessments: ").append(toIndentedString(allowComplaintsForAutomaticAssessments)).append("\n");
    sb.append("    allowManualFeedbackRequests: ").append(toIndentedString(allowManualFeedbackRequests)).append("\n");
    sb.append("    includedInOverallScore: ").append(toIndentedString(includedInOverallScore)).append("\n");
    sb.append("    problemStatement: ").append(toIndentedString(problemStatement)).append("\n");
    sb.append("    gradingInstructions: ").append(toIndentedString(gradingInstructions)).append("\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("    teamAssignmentConfig: ").append(toIndentedString(teamAssignmentConfig)).append("\n");
    sb.append("    teams: ").append(toIndentedString(teams)).append("\n");
    sb.append("    presentationScoreEnabled: ").append(toIndentedString(presentationScoreEnabled)).append("\n");
    sb.append("    secondCorrectionEnabled: ").append(toIndentedString(secondCorrectionEnabled)).append("\n");
    sb.append("    course: ").append(toIndentedString(course)).append("\n");
    sb.append("    exerciseGroup: ").append(toIndentedString(exerciseGroup)).append("\n");
    sb.append("    gradingCriteria: ").append(toIndentedString(gradingCriteria)).append("\n");
    sb.append("    studentParticipations: ").append(toIndentedString(studentParticipations)).append("\n");
    sb.append("    tutorParticipations: ").append(toIndentedString(tutorParticipations)).append("\n");
    sb.append("    exampleSubmissions: ").append(toIndentedString(exampleSubmissions)).append("\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("    posts: ").append(toIndentedString(posts)).append("\n");
    sb.append("    plagiarismCases: ").append(toIndentedString(plagiarismCases)).append("\n");
    sb.append("    exerciseType: ").append(toIndentedString(exerciseType)).append("\n");
    sb.append("    numberOfAssessmentsOfCorrectionRounds: ").append(toIndentedString(numberOfAssessmentsOfCorrectionRounds)).append("\n");
    sb.append("    totalNumberOfAssessments: ").append(toIndentedString(totalNumberOfAssessments)).append("\n");
    sb.append("    averageRating: ").append(toIndentedString(averageRating)).append("\n");
    sb.append("    numberOfRatings: ").append(toIndentedString(numberOfRatings)).append("\n");
    sb.append("    numberOfSubmissions: ").append(toIndentedString(numberOfSubmissions)).append("\n");
    sb.append("    numberOfOpenComplaints: ").append(toIndentedString(numberOfOpenComplaints)).append("\n");
    sb.append("    numberOfComplaints: ").append(toIndentedString(numberOfComplaints)).append("\n");
    sb.append("    numberOfOpenMoreFeedbackRequests: ").append(toIndentedString(numberOfOpenMoreFeedbackRequests)).append("\n");
    sb.append("    numberOfMoreFeedbackRequests: ").append(toIndentedString(numberOfMoreFeedbackRequests)).append("\n");
    sb.append("    studentAssignedTeamId: ").append(toIndentedString(studentAssignedTeamId)).append("\n");
    sb.append("    studentAssignedTeamIdComputed: ").append(toIndentedString(studentAssignedTeamIdComputed)).append("\n");
    sb.append("    gradingInstructionFeedbackUsed: ").append(toIndentedString(gradingInstructionFeedbackUsed)).append("\n");
    sb.append("    numberOfParticipations: ").append(toIndentedString(numberOfParticipations)).append("\n");
    sb.append("    exampleSolutionPublished: ").append(toIndentedString(exampleSolutionPublished)).append("\n");
    sb.append("    released: ").append(toIndentedString(released)).append("\n");
    sb.append("    testRunParticipationsExist: ").append(toIndentedString(testRunParticipationsExist)).append("\n");
    sb.append("    teamMode: ").append(toIndentedString(teamMode)).append("\n");
    sb.append("    visibleToStudents: ").append(toIndentedString(visibleToStudents)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  static {
    // Initialize and register the discriminator mappings.
    Map<String, Class<?>> mappings = new HashMap<>();
    mappings.put("file-upload", FileUploadExercise.class);
    mappings.put("modeling", ModelingExercise.class);
    mappings.put("programming", ProgrammingExercise.class);
    mappings.put("quiz", QuizExercise.class);
    mappings.put("text", TextExercise.class);
    mappings.put("Exercise", Exercise.class);
    JSON.registerDiscriminator(Exercise.class, "type", mappings);
  }
}

