/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tum.cit.ase.artemis.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import de.tum.cit.ase.artemis.sdk.JSON;


/**
 * ExamUserAttendanceCheckDTO
 */
@JsonPropertyOrder({
  ExamUserAttendanceCheckDTO.JSON_PROPERTY_ID,
  ExamUserAttendanceCheckDTO.JSON_PROPERTY_STUDENT_IMAGE_PATH,
  ExamUserAttendanceCheckDTO.JSON_PROPERTY_LOGIN,
  ExamUserAttendanceCheckDTO.JSON_PROPERTY_REGISTRATION_NUMBER,
  ExamUserAttendanceCheckDTO.JSON_PROPERTY_SIGNING_IMAGE_PATH,
  ExamUserAttendanceCheckDTO.JSON_PROPERTY_STARTED,
  ExamUserAttendanceCheckDTO.JSON_PROPERTY_SUBMITTED
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-03-02T15:54:21.223567Z[Etc/UTC]")
public class ExamUserAttendanceCheckDTO {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_STUDENT_IMAGE_PATH = "studentImagePath";
  private String studentImagePath;

  public static final String JSON_PROPERTY_LOGIN = "login";
  private String login;

  public static final String JSON_PROPERTY_REGISTRATION_NUMBER = "registrationNumber";
  private String registrationNumber;

  public static final String JSON_PROPERTY_SIGNING_IMAGE_PATH = "signingImagePath";
  private String signingImagePath;

  public static final String JSON_PROPERTY_STARTED = "started";
  private Boolean started;

  public static final String JSON_PROPERTY_SUBMITTED = "submitted";
  private Boolean submitted;

  public ExamUserAttendanceCheckDTO() { 
  }

  public ExamUserAttendanceCheckDTO id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Long id) {
    this.id = id;
  }


  public ExamUserAttendanceCheckDTO studentImagePath(String studentImagePath) {
    this.studentImagePath = studentImagePath;
    return this;
  }

   /**
   * Get studentImagePath
   * @return studentImagePath
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STUDENT_IMAGE_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStudentImagePath() {
    return studentImagePath;
  }


  @JsonProperty(JSON_PROPERTY_STUDENT_IMAGE_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStudentImagePath(String studentImagePath) {
    this.studentImagePath = studentImagePath;
  }


  public ExamUserAttendanceCheckDTO login(String login) {
    this.login = login;
    return this;
  }

   /**
   * Get login
   * @return login
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOGIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLogin() {
    return login;
  }


  @JsonProperty(JSON_PROPERTY_LOGIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLogin(String login) {
    this.login = login;
  }


  public ExamUserAttendanceCheckDTO registrationNumber(String registrationNumber) {
    this.registrationNumber = registrationNumber;
    return this;
  }

   /**
   * Get registrationNumber
   * @return registrationNumber
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REGISTRATION_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRegistrationNumber() {
    return registrationNumber;
  }


  @JsonProperty(JSON_PROPERTY_REGISTRATION_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRegistrationNumber(String registrationNumber) {
    this.registrationNumber = registrationNumber;
  }


  public ExamUserAttendanceCheckDTO signingImagePath(String signingImagePath) {
    this.signingImagePath = signingImagePath;
    return this;
  }

   /**
   * Get signingImagePath
   * @return signingImagePath
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SIGNING_IMAGE_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSigningImagePath() {
    return signingImagePath;
  }


  @JsonProperty(JSON_PROPERTY_SIGNING_IMAGE_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSigningImagePath(String signingImagePath) {
    this.signingImagePath = signingImagePath;
  }


  public ExamUserAttendanceCheckDTO started(Boolean started) {
    this.started = started;
    return this;
  }

   /**
   * Get started
   * @return started
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STARTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getStarted() {
    return started;
  }


  @JsonProperty(JSON_PROPERTY_STARTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStarted(Boolean started) {
    this.started = started;
  }


  public ExamUserAttendanceCheckDTO submitted(Boolean submitted) {
    this.submitted = submitted;
    return this;
  }

   /**
   * Get submitted
   * @return submitted
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBMITTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSubmitted() {
    return submitted;
  }


  @JsonProperty(JSON_PROPERTY_SUBMITTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubmitted(Boolean submitted) {
    this.submitted = submitted;
  }


  /**
   * Return true if this ExamUserAttendanceCheckDTO object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExamUserAttendanceCheckDTO examUserAttendanceCheckDTO = (ExamUserAttendanceCheckDTO) o;
    return Objects.equals(this.id, examUserAttendanceCheckDTO.id) &&
        Objects.equals(this.studentImagePath, examUserAttendanceCheckDTO.studentImagePath) &&
        Objects.equals(this.login, examUserAttendanceCheckDTO.login) &&
        Objects.equals(this.registrationNumber, examUserAttendanceCheckDTO.registrationNumber) &&
        Objects.equals(this.signingImagePath, examUserAttendanceCheckDTO.signingImagePath) &&
        Objects.equals(this.started, examUserAttendanceCheckDTO.started) &&
        Objects.equals(this.submitted, examUserAttendanceCheckDTO.submitted);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, studentImagePath, login, registrationNumber, signingImagePath, started, submitted);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExamUserAttendanceCheckDTO {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    studentImagePath: ").append(toIndentedString(studentImagePath)).append("\n");
    sb.append("    login: ").append(toIndentedString(login)).append("\n");
    sb.append("    registrationNumber: ").append(toIndentedString(registrationNumber)).append("\n");
    sb.append("    signingImagePath: ").append(toIndentedString(signingImagePath)).append("\n");
    sb.append("    started: ").append(toIndentedString(started)).append("\n");
    sb.append("    submitted: ").append(toIndentedString(submitted)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

