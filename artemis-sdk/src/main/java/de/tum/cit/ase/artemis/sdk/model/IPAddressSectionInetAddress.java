/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tum.cit.ase.artemis.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import de.tum.cit.ase.artemis.sdk.JSON;


/**
 * IPAddressSectionInetAddress
 */
@JsonPropertyOrder({
  IPAddressSectionInetAddress.JSON_PROPERTY_CANONICAL_HOST_NAME,
  IPAddressSectionInetAddress.JSON_PROPERTY_HOST_ADDRESS,
  IPAddressSectionInetAddress.JSON_PROPERTY_ADDRESS,
  IPAddressSectionInetAddress.JSON_PROPERTY_HOST_NAME,
  IPAddressSectionInetAddress.JSON_PROPERTY_LINK_LOCAL_ADDRESS,
  IPAddressSectionInetAddress.JSON_PROPERTY_MULTICAST_ADDRESS,
  IPAddressSectionInetAddress.JSON_PROPERTY_ANY_LOCAL_ADDRESS,
  IPAddressSectionInetAddress.JSON_PROPERTY_LOOPBACK_ADDRESS,
  IPAddressSectionInetAddress.JSON_PROPERTY_SITE_LOCAL_ADDRESS,
  IPAddressSectionInetAddress.JSON_PROPERTY_MCGLOBAL,
  IPAddressSectionInetAddress.JSON_PROPERTY_MCNODE_LOCAL,
  IPAddressSectionInetAddress.JSON_PROPERTY_MCLINK_LOCAL,
  IPAddressSectionInetAddress.JSON_PROPERTY_MCSITE_LOCAL,
  IPAddressSectionInetAddress.JSON_PROPERTY_MCORG_LOCAL
})
@JsonTypeName("IPAddressSection_inetAddress")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-03-27T15:31:11.360443Z[Etc/UTC]")
public class IPAddressSectionInetAddress {
  public static final String JSON_PROPERTY_CANONICAL_HOST_NAME = "canonicalHostName";
  private String canonicalHostName;

  public static final String JSON_PROPERTY_HOST_ADDRESS = "hostAddress";
  private String hostAddress;

  public static final String JSON_PROPERTY_ADDRESS = "address";
  private List<byte[]> address = new ArrayList<>();

  public static final String JSON_PROPERTY_HOST_NAME = "hostName";
  private String hostName;

  public static final String JSON_PROPERTY_LINK_LOCAL_ADDRESS = "linkLocalAddress";
  private Boolean linkLocalAddress;

  public static final String JSON_PROPERTY_MULTICAST_ADDRESS = "multicastAddress";
  private Boolean multicastAddress;

  public static final String JSON_PROPERTY_ANY_LOCAL_ADDRESS = "anyLocalAddress";
  private Boolean anyLocalAddress;

  public static final String JSON_PROPERTY_LOOPBACK_ADDRESS = "loopbackAddress";
  private Boolean loopbackAddress;

  public static final String JSON_PROPERTY_SITE_LOCAL_ADDRESS = "siteLocalAddress";
  private Boolean siteLocalAddress;

  public static final String JSON_PROPERTY_MCGLOBAL = "mcglobal";
  private Boolean mcglobal;

  public static final String JSON_PROPERTY_MCNODE_LOCAL = "mcnodeLocal";
  private Boolean mcnodeLocal;

  public static final String JSON_PROPERTY_MCLINK_LOCAL = "mclinkLocal";
  private Boolean mclinkLocal;

  public static final String JSON_PROPERTY_MCSITE_LOCAL = "mcsiteLocal";
  private Boolean mcsiteLocal;

  public static final String JSON_PROPERTY_MCORG_LOCAL = "mcorgLocal";
  private Boolean mcorgLocal;

  public IPAddressSectionInetAddress() { 
  }

  public IPAddressSectionInetAddress canonicalHostName(String canonicalHostName) {
    this.canonicalHostName = canonicalHostName;
    return this;
  }

   /**
   * Get canonicalHostName
   * @return canonicalHostName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CANONICAL_HOST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCanonicalHostName() {
    return canonicalHostName;
  }


  @JsonProperty(JSON_PROPERTY_CANONICAL_HOST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCanonicalHostName(String canonicalHostName) {
    this.canonicalHostName = canonicalHostName;
  }


  public IPAddressSectionInetAddress hostAddress(String hostAddress) {
    this.hostAddress = hostAddress;
    return this;
  }

   /**
   * Get hostAddress
   * @return hostAddress
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HOST_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHostAddress() {
    return hostAddress;
  }


  @JsonProperty(JSON_PROPERTY_HOST_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHostAddress(String hostAddress) {
    this.hostAddress = hostAddress;
  }


  public IPAddressSectionInetAddress address(List<byte[]> address) {
    this.address = address;
    return this;
  }

  public IPAddressSectionInetAddress addAddressItem(byte[] addressItem) {
    if (this.address == null) {
      this.address = new ArrayList<>();
    }
    this.address.add(addressItem);
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<byte[]> getAddress() {
    return address;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddress(List<byte[]> address) {
    this.address = address;
  }


  public IPAddressSectionInetAddress hostName(String hostName) {
    this.hostName = hostName;
    return this;
  }

   /**
   * Get hostName
   * @return hostName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HOST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHostName() {
    return hostName;
  }


  @JsonProperty(JSON_PROPERTY_HOST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHostName(String hostName) {
    this.hostName = hostName;
  }


  public IPAddressSectionInetAddress linkLocalAddress(Boolean linkLocalAddress) {
    this.linkLocalAddress = linkLocalAddress;
    return this;
  }

   /**
   * Get linkLocalAddress
   * @return linkLocalAddress
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LINK_LOCAL_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getLinkLocalAddress() {
    return linkLocalAddress;
  }


  @JsonProperty(JSON_PROPERTY_LINK_LOCAL_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLinkLocalAddress(Boolean linkLocalAddress) {
    this.linkLocalAddress = linkLocalAddress;
  }


  public IPAddressSectionInetAddress multicastAddress(Boolean multicastAddress) {
    this.multicastAddress = multicastAddress;
    return this;
  }

   /**
   * Get multicastAddress
   * @return multicastAddress
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MULTICAST_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getMulticastAddress() {
    return multicastAddress;
  }


  @JsonProperty(JSON_PROPERTY_MULTICAST_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMulticastAddress(Boolean multicastAddress) {
    this.multicastAddress = multicastAddress;
  }


  public IPAddressSectionInetAddress anyLocalAddress(Boolean anyLocalAddress) {
    this.anyLocalAddress = anyLocalAddress;
    return this;
  }

   /**
   * Get anyLocalAddress
   * @return anyLocalAddress
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ANY_LOCAL_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAnyLocalAddress() {
    return anyLocalAddress;
  }


  @JsonProperty(JSON_PROPERTY_ANY_LOCAL_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAnyLocalAddress(Boolean anyLocalAddress) {
    this.anyLocalAddress = anyLocalAddress;
  }


  public IPAddressSectionInetAddress loopbackAddress(Boolean loopbackAddress) {
    this.loopbackAddress = loopbackAddress;
    return this;
  }

   /**
   * Get loopbackAddress
   * @return loopbackAddress
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOOPBACK_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getLoopbackAddress() {
    return loopbackAddress;
  }


  @JsonProperty(JSON_PROPERTY_LOOPBACK_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoopbackAddress(Boolean loopbackAddress) {
    this.loopbackAddress = loopbackAddress;
  }


  public IPAddressSectionInetAddress siteLocalAddress(Boolean siteLocalAddress) {
    this.siteLocalAddress = siteLocalAddress;
    return this;
  }

   /**
   * Get siteLocalAddress
   * @return siteLocalAddress
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SITE_LOCAL_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSiteLocalAddress() {
    return siteLocalAddress;
  }


  @JsonProperty(JSON_PROPERTY_SITE_LOCAL_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSiteLocalAddress(Boolean siteLocalAddress) {
    this.siteLocalAddress = siteLocalAddress;
  }


  public IPAddressSectionInetAddress mcglobal(Boolean mcglobal) {
    this.mcglobal = mcglobal;
    return this;
  }

   /**
   * Get mcglobal
   * @return mcglobal
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MCGLOBAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getMcglobal() {
    return mcglobal;
  }


  @JsonProperty(JSON_PROPERTY_MCGLOBAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMcglobal(Boolean mcglobal) {
    this.mcglobal = mcglobal;
  }


  public IPAddressSectionInetAddress mcnodeLocal(Boolean mcnodeLocal) {
    this.mcnodeLocal = mcnodeLocal;
    return this;
  }

   /**
   * Get mcnodeLocal
   * @return mcnodeLocal
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MCNODE_LOCAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getMcnodeLocal() {
    return mcnodeLocal;
  }


  @JsonProperty(JSON_PROPERTY_MCNODE_LOCAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMcnodeLocal(Boolean mcnodeLocal) {
    this.mcnodeLocal = mcnodeLocal;
  }


  public IPAddressSectionInetAddress mclinkLocal(Boolean mclinkLocal) {
    this.mclinkLocal = mclinkLocal;
    return this;
  }

   /**
   * Get mclinkLocal
   * @return mclinkLocal
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MCLINK_LOCAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getMclinkLocal() {
    return mclinkLocal;
  }


  @JsonProperty(JSON_PROPERTY_MCLINK_LOCAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMclinkLocal(Boolean mclinkLocal) {
    this.mclinkLocal = mclinkLocal;
  }


  public IPAddressSectionInetAddress mcsiteLocal(Boolean mcsiteLocal) {
    this.mcsiteLocal = mcsiteLocal;
    return this;
  }

   /**
   * Get mcsiteLocal
   * @return mcsiteLocal
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MCSITE_LOCAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getMcsiteLocal() {
    return mcsiteLocal;
  }


  @JsonProperty(JSON_PROPERTY_MCSITE_LOCAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMcsiteLocal(Boolean mcsiteLocal) {
    this.mcsiteLocal = mcsiteLocal;
  }


  public IPAddressSectionInetAddress mcorgLocal(Boolean mcorgLocal) {
    this.mcorgLocal = mcorgLocal;
    return this;
  }

   /**
   * Get mcorgLocal
   * @return mcorgLocal
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MCORG_LOCAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getMcorgLocal() {
    return mcorgLocal;
  }


  @JsonProperty(JSON_PROPERTY_MCORG_LOCAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMcorgLocal(Boolean mcorgLocal) {
    this.mcorgLocal = mcorgLocal;
  }


  /**
   * Return true if this IPAddressSection_inetAddress object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IPAddressSectionInetAddress ipAddressSectionInetAddress = (IPAddressSectionInetAddress) o;
    return Objects.equals(this.canonicalHostName, ipAddressSectionInetAddress.canonicalHostName) &&
        Objects.equals(this.hostAddress, ipAddressSectionInetAddress.hostAddress) &&
        Objects.equals(this.address, ipAddressSectionInetAddress.address) &&
        Objects.equals(this.hostName, ipAddressSectionInetAddress.hostName) &&
        Objects.equals(this.linkLocalAddress, ipAddressSectionInetAddress.linkLocalAddress) &&
        Objects.equals(this.multicastAddress, ipAddressSectionInetAddress.multicastAddress) &&
        Objects.equals(this.anyLocalAddress, ipAddressSectionInetAddress.anyLocalAddress) &&
        Objects.equals(this.loopbackAddress, ipAddressSectionInetAddress.loopbackAddress) &&
        Objects.equals(this.siteLocalAddress, ipAddressSectionInetAddress.siteLocalAddress) &&
        Objects.equals(this.mcglobal, ipAddressSectionInetAddress.mcglobal) &&
        Objects.equals(this.mcnodeLocal, ipAddressSectionInetAddress.mcnodeLocal) &&
        Objects.equals(this.mclinkLocal, ipAddressSectionInetAddress.mclinkLocal) &&
        Objects.equals(this.mcsiteLocal, ipAddressSectionInetAddress.mcsiteLocal) &&
        Objects.equals(this.mcorgLocal, ipAddressSectionInetAddress.mcorgLocal);
  }

  @Override
  public int hashCode() {
    return Objects.hash(canonicalHostName, hostAddress, address, hostName, linkLocalAddress, multicastAddress, anyLocalAddress, loopbackAddress, siteLocalAddress, mcglobal, mcnodeLocal, mclinkLocal, mcsiteLocal, mcorgLocal);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IPAddressSectionInetAddress {\n");
    sb.append("    canonicalHostName: ").append(toIndentedString(canonicalHostName)).append("\n");
    sb.append("    hostAddress: ").append(toIndentedString(hostAddress)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    hostName: ").append(toIndentedString(hostName)).append("\n");
    sb.append("    linkLocalAddress: ").append(toIndentedString(linkLocalAddress)).append("\n");
    sb.append("    multicastAddress: ").append(toIndentedString(multicastAddress)).append("\n");
    sb.append("    anyLocalAddress: ").append(toIndentedString(anyLocalAddress)).append("\n");
    sb.append("    loopbackAddress: ").append(toIndentedString(loopbackAddress)).append("\n");
    sb.append("    siteLocalAddress: ").append(toIndentedString(siteLocalAddress)).append("\n");
    sb.append("    mcglobal: ").append(toIndentedString(mcglobal)).append("\n");
    sb.append("    mcnodeLocal: ").append(toIndentedString(mcnodeLocal)).append("\n");
    sb.append("    mclinkLocal: ").append(toIndentedString(mclinkLocal)).append("\n");
    sb.append("    mcsiteLocal: ").append(toIndentedString(mcsiteLocal)).append("\n");
    sb.append("    mcorgLocal: ").append(toIndentedString(mcorgLocal)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

