/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tum.cit.ase.artemis.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.LinkedHashSet;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import de.tum.cit.ase.artemis.sdk.JSON;


/**
 * UserPageableSearchDTO
 */
@JsonPropertyOrder({
  UserPageableSearchDTO.JSON_PROPERTY_PAGE,
  UserPageableSearchDTO.JSON_PROPERTY_PAGE_SIZE,
  UserPageableSearchDTO.JSON_PROPERTY_SEARCH_TERM,
  UserPageableSearchDTO.JSON_PROPERTY_SORTING_ORDER,
  UserPageableSearchDTO.JSON_PROPERTY_SORTED_COLUMN,
  UserPageableSearchDTO.JSON_PROPERTY_AUTHORITIES,
  UserPageableSearchDTO.JSON_PROPERTY_ORIGINS,
  UserPageableSearchDTO.JSON_PROPERTY_STATUS,
  UserPageableSearchDTO.JSON_PROPERTY_COURSE_IDS,
  UserPageableSearchDTO.JSON_PROPERTY_REGISTRATION_NUMBERS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-06-10T14:33:20.156837Z[Etc/UTC]")
public class UserPageableSearchDTO {
  public static final String JSON_PROPERTY_PAGE = "page";
  private Integer page;

  public static final String JSON_PROPERTY_PAGE_SIZE = "pageSize";
  private Integer pageSize;

  public static final String JSON_PROPERTY_SEARCH_TERM = "searchTerm";
  private String searchTerm;

  /**
   * Gets or Sets sortingOrder
   */
  public enum SortingOrderEnum {
    ASCENDING("ASCENDING"),
    
    DESCENDING("DESCENDING");

    private String value;

    SortingOrderEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SortingOrderEnum fromValue(String value) {
      for (SortingOrderEnum b : SortingOrderEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SORTING_ORDER = "sortingOrder";
  private SortingOrderEnum sortingOrder;

  public static final String JSON_PROPERTY_SORTED_COLUMN = "sortedColumn";
  private String sortedColumn;

  public static final String JSON_PROPERTY_AUTHORITIES = "authorities";
  private Set<String> authorities;

  public static final String JSON_PROPERTY_ORIGINS = "origins";
  private Set<String> origins;

  public static final String JSON_PROPERTY_STATUS = "status";
  private Set<String> status;

  public static final String JSON_PROPERTY_COURSE_IDS = "courseIds";
  private Set<Long> courseIds;

  public static final String JSON_PROPERTY_REGISTRATION_NUMBERS = "registrationNumbers";
  private Set<String> registrationNumbers;

  public UserPageableSearchDTO() { 
  }

  public UserPageableSearchDTO page(Integer page) {
    this.page = page;
    return this;
  }

   /**
   * Get page
   * @return page
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPage() {
    return page;
  }


  @JsonProperty(JSON_PROPERTY_PAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPage(Integer page) {
    this.page = page;
  }


  public UserPageableSearchDTO pageSize(Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

   /**
   * Get pageSize
   * @return pageSize
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAGE_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPageSize() {
    return pageSize;
  }


  @JsonProperty(JSON_PROPERTY_PAGE_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }


  public UserPageableSearchDTO searchTerm(String searchTerm) {
    this.searchTerm = searchTerm;
    return this;
  }

   /**
   * Get searchTerm
   * @return searchTerm
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SEARCH_TERM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSearchTerm() {
    return searchTerm;
  }


  @JsonProperty(JSON_PROPERTY_SEARCH_TERM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSearchTerm(String searchTerm) {
    this.searchTerm = searchTerm;
  }


  public UserPageableSearchDTO sortingOrder(SortingOrderEnum sortingOrder) {
    this.sortingOrder = sortingOrder;
    return this;
  }

   /**
   * Get sortingOrder
   * @return sortingOrder
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SORTING_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SortingOrderEnum getSortingOrder() {
    return sortingOrder;
  }


  @JsonProperty(JSON_PROPERTY_SORTING_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSortingOrder(SortingOrderEnum sortingOrder) {
    this.sortingOrder = sortingOrder;
  }


  public UserPageableSearchDTO sortedColumn(String sortedColumn) {
    this.sortedColumn = sortedColumn;
    return this;
  }

   /**
   * Get sortedColumn
   * @return sortedColumn
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SORTED_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSortedColumn() {
    return sortedColumn;
  }


  @JsonProperty(JSON_PROPERTY_SORTED_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSortedColumn(String sortedColumn) {
    this.sortedColumn = sortedColumn;
  }


  public UserPageableSearchDTO authorities(Set<String> authorities) {
    this.authorities = authorities;
    return this;
  }

  public UserPageableSearchDTO addAuthoritiesItem(String authoritiesItem) {
    if (this.authorities == null) {
      this.authorities = new LinkedHashSet<>();
    }
    this.authorities.add(authoritiesItem);
    return this;
  }

   /**
   * Get authorities
   * @return authorities
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTHORITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<String> getAuthorities() {
    return authorities;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_AUTHORITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAuthorities(Set<String> authorities) {
    this.authorities = authorities;
  }


  public UserPageableSearchDTO origins(Set<String> origins) {
    this.origins = origins;
    return this;
  }

  public UserPageableSearchDTO addOriginsItem(String originsItem) {
    if (this.origins == null) {
      this.origins = new LinkedHashSet<>();
    }
    this.origins.add(originsItem);
    return this;
  }

   /**
   * Get origins
   * @return origins
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORIGINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<String> getOrigins() {
    return origins;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_ORIGINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrigins(Set<String> origins) {
    this.origins = origins;
  }


  public UserPageableSearchDTO status(Set<String> status) {
    this.status = status;
    return this;
  }

  public UserPageableSearchDTO addStatusItem(String statusItem) {
    if (this.status == null) {
      this.status = new LinkedHashSet<>();
    }
    this.status.add(statusItem);
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<String> getStatus() {
    return status;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(Set<String> status) {
    this.status = status;
  }


  public UserPageableSearchDTO courseIds(Set<Long> courseIds) {
    this.courseIds = courseIds;
    return this;
  }

  public UserPageableSearchDTO addCourseIdsItem(Long courseIdsItem) {
    if (this.courseIds == null) {
      this.courseIds = new LinkedHashSet<>();
    }
    this.courseIds.add(courseIdsItem);
    return this;
  }

   /**
   * Get courseIds
   * @return courseIds
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COURSE_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<Long> getCourseIds() {
    return courseIds;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_COURSE_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCourseIds(Set<Long> courseIds) {
    this.courseIds = courseIds;
  }


  public UserPageableSearchDTO registrationNumbers(Set<String> registrationNumbers) {
    this.registrationNumbers = registrationNumbers;
    return this;
  }

  public UserPageableSearchDTO addRegistrationNumbersItem(String registrationNumbersItem) {
    if (this.registrationNumbers == null) {
      this.registrationNumbers = new LinkedHashSet<>();
    }
    this.registrationNumbers.add(registrationNumbersItem);
    return this;
  }

   /**
   * Get registrationNumbers
   * @return registrationNumbers
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REGISTRATION_NUMBERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<String> getRegistrationNumbers() {
    return registrationNumbers;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_REGISTRATION_NUMBERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRegistrationNumbers(Set<String> registrationNumbers) {
    this.registrationNumbers = registrationNumbers;
  }


  /**
   * Return true if this UserPageableSearchDTO object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserPageableSearchDTO userPageableSearchDTO = (UserPageableSearchDTO) o;
    return Objects.equals(this.page, userPageableSearchDTO.page) &&
        Objects.equals(this.pageSize, userPageableSearchDTO.pageSize) &&
        Objects.equals(this.searchTerm, userPageableSearchDTO.searchTerm) &&
        Objects.equals(this.sortingOrder, userPageableSearchDTO.sortingOrder) &&
        Objects.equals(this.sortedColumn, userPageableSearchDTO.sortedColumn) &&
        Objects.equals(this.authorities, userPageableSearchDTO.authorities) &&
        Objects.equals(this.origins, userPageableSearchDTO.origins) &&
        Objects.equals(this.status, userPageableSearchDTO.status) &&
        Objects.equals(this.courseIds, userPageableSearchDTO.courseIds) &&
        Objects.equals(this.registrationNumbers, userPageableSearchDTO.registrationNumbers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(page, pageSize, searchTerm, sortingOrder, sortedColumn, authorities, origins, status, courseIds, registrationNumbers);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserPageableSearchDTO {\n");
    sb.append("    page: ").append(toIndentedString(page)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    searchTerm: ").append(toIndentedString(searchTerm)).append("\n");
    sb.append("    sortingOrder: ").append(toIndentedString(sortingOrder)).append("\n");
    sb.append("    sortedColumn: ").append(toIndentedString(sortedColumn)).append("\n");
    sb.append("    authorities: ").append(toIndentedString(authorities)).append("\n");
    sb.append("    origins: ").append(toIndentedString(origins)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    courseIds: ").append(toIndentedString(courseIds)).append("\n");
    sb.append("    registrationNumbers: ").append(toIndentedString(registrationNumbers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

