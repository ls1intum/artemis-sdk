/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tum.cit.ase.artemis.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import de.tum.cit.ase.artemis.sdk.model.User;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import de.tum.cit.ase.artemis.sdk.JSON;


/**
 * ConversationParticipant
 */
@JsonPropertyOrder({
  ConversationParticipant.JSON_PROPERTY_ID,
  ConversationParticipant.JSON_PROPERTY_USER,
  ConversationParticipant.JSON_PROPERTY_IS_MODERATOR,
  ConversationParticipant.JSON_PROPERTY_IS_FAVORITE,
  ConversationParticipant.JSON_PROPERTY_IS_HIDDEN,
  ConversationParticipant.JSON_PROPERTY_LAST_READ,
  ConversationParticipant.JSON_PROPERTY_UNREAD_MESSAGES_COUNT
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-03-31T15:20:01.980101Z[Etc/UTC]")
public class ConversationParticipant {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_USER = "user";
  private User user;

  public static final String JSON_PROPERTY_IS_MODERATOR = "isModerator";
  private Boolean isModerator;

  public static final String JSON_PROPERTY_IS_FAVORITE = "isFavorite";
  private Boolean isFavorite;

  public static final String JSON_PROPERTY_IS_HIDDEN = "isHidden";
  private Boolean isHidden;

  public static final String JSON_PROPERTY_LAST_READ = "lastRead";
  private OffsetDateTime lastRead;

  public static final String JSON_PROPERTY_UNREAD_MESSAGES_COUNT = "unreadMessagesCount";
  private Long unreadMessagesCount;

  public ConversationParticipant() { 
  }

  public ConversationParticipant id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Long id) {
    this.id = id;
  }


  public ConversationParticipant user(User user) {
    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_USER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public User getUser() {
    return user;
  }


  @JsonProperty(JSON_PROPERTY_USER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUser(User user) {
    this.user = user;
  }


  public ConversationParticipant isModerator(Boolean isModerator) {
    this.isModerator = isModerator;
    return this;
  }

   /**
   * Get isModerator
   * @return isModerator
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_MODERATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsModerator() {
    return isModerator;
  }


  @JsonProperty(JSON_PROPERTY_IS_MODERATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsModerator(Boolean isModerator) {
    this.isModerator = isModerator;
  }


  public ConversationParticipant isFavorite(Boolean isFavorite) {
    this.isFavorite = isFavorite;
    return this;
  }

   /**
   * Get isFavorite
   * @return isFavorite
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_FAVORITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsFavorite() {
    return isFavorite;
  }


  @JsonProperty(JSON_PROPERTY_IS_FAVORITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsFavorite(Boolean isFavorite) {
    this.isFavorite = isFavorite;
  }


  public ConversationParticipant isHidden(Boolean isHidden) {
    this.isHidden = isHidden;
    return this;
  }

   /**
   * Get isHidden
   * @return isHidden
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_HIDDEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsHidden() {
    return isHidden;
  }


  @JsonProperty(JSON_PROPERTY_IS_HIDDEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsHidden(Boolean isHidden) {
    this.isHidden = isHidden;
  }


  public ConversationParticipant lastRead(OffsetDateTime lastRead) {
    this.lastRead = lastRead;
    return this;
  }

   /**
   * Get lastRead
   * @return lastRead
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_READ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getLastRead() {
    return lastRead;
  }


  @JsonProperty(JSON_PROPERTY_LAST_READ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastRead(OffsetDateTime lastRead) {
    this.lastRead = lastRead;
  }


  public ConversationParticipant unreadMessagesCount(Long unreadMessagesCount) {
    this.unreadMessagesCount = unreadMessagesCount;
    return this;
  }

   /**
   * Get unreadMessagesCount
   * @return unreadMessagesCount
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UNREAD_MESSAGES_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getUnreadMessagesCount() {
    return unreadMessagesCount;
  }


  @JsonProperty(JSON_PROPERTY_UNREAD_MESSAGES_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUnreadMessagesCount(Long unreadMessagesCount) {
    this.unreadMessagesCount = unreadMessagesCount;
  }


  /**
   * Return true if this ConversationParticipant object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConversationParticipant conversationParticipant = (ConversationParticipant) o;
    return Objects.equals(this.id, conversationParticipant.id) &&
        Objects.equals(this.user, conversationParticipant.user) &&
        Objects.equals(this.isModerator, conversationParticipant.isModerator) &&
        Objects.equals(this.isFavorite, conversationParticipant.isFavorite) &&
        Objects.equals(this.isHidden, conversationParticipant.isHidden) &&
        Objects.equals(this.lastRead, conversationParticipant.lastRead) &&
        Objects.equals(this.unreadMessagesCount, conversationParticipant.unreadMessagesCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, user, isModerator, isFavorite, isHidden, lastRead, unreadMessagesCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConversationParticipant {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    isModerator: ").append(toIndentedString(isModerator)).append("\n");
    sb.append("    isFavorite: ").append(toIndentedString(isFavorite)).append("\n");
    sb.append("    isHidden: ").append(toIndentedString(isHidden)).append("\n");
    sb.append("    lastRead: ").append(toIndentedString(lastRead)).append("\n");
    sb.append("    unreadMessagesCount: ").append(toIndentedString(unreadMessagesCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

