/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tum.cit.ase.artemis.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import de.tum.cit.ase.artemis.sdk.model.Course;
import de.tum.cit.ase.artemis.sdk.model.CourseScoresDTO;
import de.tum.cit.ase.artemis.sdk.model.Result;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import de.tum.cit.ase.artemis.sdk.JSON;


/**
 * CourseForDashboardDTO
 */
@JsonPropertyOrder({
  CourseForDashboardDTO.JSON_PROPERTY_COURSE,
  CourseForDashboardDTO.JSON_PROPERTY_TOTAL_SCORES,
  CourseForDashboardDTO.JSON_PROPERTY_TEXT_SCORES,
  CourseForDashboardDTO.JSON_PROPERTY_PROGRAMMING_SCORES,
  CourseForDashboardDTO.JSON_PROPERTY_MODELING_SCORES,
  CourseForDashboardDTO.JSON_PROPERTY_FILE_UPLOAD_SCORES,
  CourseForDashboardDTO.JSON_PROPERTY_QUIZ_SCORES,
  CourseForDashboardDTO.JSON_PROPERTY_PARTICIPATION_RESULTS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-06-10T14:33:20.156837Z[Etc/UTC]")
public class CourseForDashboardDTO {
  public static final String JSON_PROPERTY_COURSE = "course";
  private Course course;

  public static final String JSON_PROPERTY_TOTAL_SCORES = "totalScores";
  private CourseScoresDTO totalScores;

  public static final String JSON_PROPERTY_TEXT_SCORES = "textScores";
  private CourseScoresDTO textScores;

  public static final String JSON_PROPERTY_PROGRAMMING_SCORES = "programmingScores";
  private CourseScoresDTO programmingScores;

  public static final String JSON_PROPERTY_MODELING_SCORES = "modelingScores";
  private CourseScoresDTO modelingScores;

  public static final String JSON_PROPERTY_FILE_UPLOAD_SCORES = "fileUploadScores";
  private CourseScoresDTO fileUploadScores;

  public static final String JSON_PROPERTY_QUIZ_SCORES = "quizScores";
  private CourseScoresDTO quizScores;

  public static final String JSON_PROPERTY_PARTICIPATION_RESULTS = "participationResults";
  private List<Result> participationResults;

  public CourseForDashboardDTO() { 
  }

  public CourseForDashboardDTO course(Course course) {
    this.course = course;
    return this;
  }

   /**
   * Get course
   * @return course
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COURSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Course getCourse() {
    return course;
  }


  @JsonProperty(JSON_PROPERTY_COURSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCourse(Course course) {
    this.course = course;
  }


  public CourseForDashboardDTO totalScores(CourseScoresDTO totalScores) {
    this.totalScores = totalScores;
    return this;
  }

   /**
   * Get totalScores
   * @return totalScores
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_SCORES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CourseScoresDTO getTotalScores() {
    return totalScores;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_SCORES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalScores(CourseScoresDTO totalScores) {
    this.totalScores = totalScores;
  }


  public CourseForDashboardDTO textScores(CourseScoresDTO textScores) {
    this.textScores = textScores;
    return this;
  }

   /**
   * Get textScores
   * @return textScores
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TEXT_SCORES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CourseScoresDTO getTextScores() {
    return textScores;
  }


  @JsonProperty(JSON_PROPERTY_TEXT_SCORES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTextScores(CourseScoresDTO textScores) {
    this.textScores = textScores;
  }


  public CourseForDashboardDTO programmingScores(CourseScoresDTO programmingScores) {
    this.programmingScores = programmingScores;
    return this;
  }

   /**
   * Get programmingScores
   * @return programmingScores
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROGRAMMING_SCORES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CourseScoresDTO getProgrammingScores() {
    return programmingScores;
  }


  @JsonProperty(JSON_PROPERTY_PROGRAMMING_SCORES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProgrammingScores(CourseScoresDTO programmingScores) {
    this.programmingScores = programmingScores;
  }


  public CourseForDashboardDTO modelingScores(CourseScoresDTO modelingScores) {
    this.modelingScores = modelingScores;
    return this;
  }

   /**
   * Get modelingScores
   * @return modelingScores
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MODELING_SCORES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CourseScoresDTO getModelingScores() {
    return modelingScores;
  }


  @JsonProperty(JSON_PROPERTY_MODELING_SCORES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setModelingScores(CourseScoresDTO modelingScores) {
    this.modelingScores = modelingScores;
  }


  public CourseForDashboardDTO fileUploadScores(CourseScoresDTO fileUploadScores) {
    this.fileUploadScores = fileUploadScores;
    return this;
  }

   /**
   * Get fileUploadScores
   * @return fileUploadScores
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FILE_UPLOAD_SCORES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CourseScoresDTO getFileUploadScores() {
    return fileUploadScores;
  }


  @JsonProperty(JSON_PROPERTY_FILE_UPLOAD_SCORES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFileUploadScores(CourseScoresDTO fileUploadScores) {
    this.fileUploadScores = fileUploadScores;
  }


  public CourseForDashboardDTO quizScores(CourseScoresDTO quizScores) {
    this.quizScores = quizScores;
    return this;
  }

   /**
   * Get quizScores
   * @return quizScores
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_QUIZ_SCORES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CourseScoresDTO getQuizScores() {
    return quizScores;
  }


  @JsonProperty(JSON_PROPERTY_QUIZ_SCORES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQuizScores(CourseScoresDTO quizScores) {
    this.quizScores = quizScores;
  }


  public CourseForDashboardDTO participationResults(List<Result> participationResults) {
    this.participationResults = participationResults;
    return this;
  }

  public CourseForDashboardDTO addParticipationResultsItem(Result participationResultsItem) {
    if (this.participationResults == null) {
      this.participationResults = new ArrayList<>();
    }
    this.participationResults.add(participationResultsItem);
    return this;
  }

   /**
   * Get participationResults
   * @return participationResults
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PARTICIPATION_RESULTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Result> getParticipationResults() {
    return participationResults;
  }


  @JsonProperty(JSON_PROPERTY_PARTICIPATION_RESULTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setParticipationResults(List<Result> participationResults) {
    this.participationResults = participationResults;
  }


  /**
   * Return true if this CourseForDashboardDTO object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CourseForDashboardDTO courseForDashboardDTO = (CourseForDashboardDTO) o;
    return Objects.equals(this.course, courseForDashboardDTO.course) &&
        Objects.equals(this.totalScores, courseForDashboardDTO.totalScores) &&
        Objects.equals(this.textScores, courseForDashboardDTO.textScores) &&
        Objects.equals(this.programmingScores, courseForDashboardDTO.programmingScores) &&
        Objects.equals(this.modelingScores, courseForDashboardDTO.modelingScores) &&
        Objects.equals(this.fileUploadScores, courseForDashboardDTO.fileUploadScores) &&
        Objects.equals(this.quizScores, courseForDashboardDTO.quizScores) &&
        Objects.equals(this.participationResults, courseForDashboardDTO.participationResults);
  }

  @Override
  public int hashCode() {
    return Objects.hash(course, totalScores, textScores, programmingScores, modelingScores, fileUploadScores, quizScores, participationResults);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CourseForDashboardDTO {\n");
    sb.append("    course: ").append(toIndentedString(course)).append("\n");
    sb.append("    totalScores: ").append(toIndentedString(totalScores)).append("\n");
    sb.append("    textScores: ").append(toIndentedString(textScores)).append("\n");
    sb.append("    programmingScores: ").append(toIndentedString(programmingScores)).append("\n");
    sb.append("    modelingScores: ").append(toIndentedString(modelingScores)).append("\n");
    sb.append("    fileUploadScores: ").append(toIndentedString(fileUploadScores)).append("\n");
    sb.append("    quizScores: ").append(toIndentedString(quizScores)).append("\n");
    sb.append("    participationResults: ").append(toIndentedString(participationResults)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

