/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tum.cit.ase.artemis.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import de.tum.cit.ase.artemis.sdk.JSON;


/**
 * BonusExampleDTO
 */
@JsonPropertyOrder({
  BonusExampleDTO.JSON_PROPERTY_STUDENT_POINTS_OF_BONUS_TO,
  BonusExampleDTO.JSON_PROPERTY_STUDENT_POINTS_OF_BONUS_SOURCE,
  BonusExampleDTO.JSON_PROPERTY_EXAM_GRADE,
  BonusExampleDTO.JSON_PROPERTY_BONUS_GRADE,
  BonusExampleDTO.JSON_PROPERTY_FINAL_POINTS,
  BonusExampleDTO.JSON_PROPERTY_FINAL_GRADE,
  BonusExampleDTO.JSON_PROPERTY_EXCEEDS_MAX
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-04-06T13:57:19.283407Z[Etc/UTC]")
public class BonusExampleDTO {
  public static final String JSON_PROPERTY_STUDENT_POINTS_OF_BONUS_TO = "studentPointsOfBonusTo";
  private Double studentPointsOfBonusTo;

  public static final String JSON_PROPERTY_STUDENT_POINTS_OF_BONUS_SOURCE = "studentPointsOfBonusSource";
  private Double studentPointsOfBonusSource;

  public static final String JSON_PROPERTY_EXAM_GRADE = "examGrade";
  private String examGrade;

  public static final String JSON_PROPERTY_BONUS_GRADE = "bonusGrade";
  private Double bonusGrade;

  public static final String JSON_PROPERTY_FINAL_POINTS = "finalPoints";
  private Double finalPoints;

  public static final String JSON_PROPERTY_FINAL_GRADE = "finalGrade";
  private String finalGrade;

  public static final String JSON_PROPERTY_EXCEEDS_MAX = "exceedsMax";
  private Boolean exceedsMax;

  public BonusExampleDTO() { 
  }

  public BonusExampleDTO studentPointsOfBonusTo(Double studentPointsOfBonusTo) {
    this.studentPointsOfBonusTo = studentPointsOfBonusTo;
    return this;
  }

   /**
   * Get studentPointsOfBonusTo
   * @return studentPointsOfBonusTo
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STUDENT_POINTS_OF_BONUS_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getStudentPointsOfBonusTo() {
    return studentPointsOfBonusTo;
  }


  @JsonProperty(JSON_PROPERTY_STUDENT_POINTS_OF_BONUS_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStudentPointsOfBonusTo(Double studentPointsOfBonusTo) {
    this.studentPointsOfBonusTo = studentPointsOfBonusTo;
  }


  public BonusExampleDTO studentPointsOfBonusSource(Double studentPointsOfBonusSource) {
    this.studentPointsOfBonusSource = studentPointsOfBonusSource;
    return this;
  }

   /**
   * Get studentPointsOfBonusSource
   * @return studentPointsOfBonusSource
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STUDENT_POINTS_OF_BONUS_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getStudentPointsOfBonusSource() {
    return studentPointsOfBonusSource;
  }


  @JsonProperty(JSON_PROPERTY_STUDENT_POINTS_OF_BONUS_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStudentPointsOfBonusSource(Double studentPointsOfBonusSource) {
    this.studentPointsOfBonusSource = studentPointsOfBonusSource;
  }


  public BonusExampleDTO examGrade(String examGrade) {
    this.examGrade = examGrade;
    return this;
  }

   /**
   * Get examGrade
   * @return examGrade
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXAM_GRADE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExamGrade() {
    return examGrade;
  }


  @JsonProperty(JSON_PROPERTY_EXAM_GRADE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExamGrade(String examGrade) {
    this.examGrade = examGrade;
  }


  public BonusExampleDTO bonusGrade(Double bonusGrade) {
    this.bonusGrade = bonusGrade;
    return this;
  }

   /**
   * Get bonusGrade
   * @return bonusGrade
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BONUS_GRADE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getBonusGrade() {
    return bonusGrade;
  }


  @JsonProperty(JSON_PROPERTY_BONUS_GRADE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBonusGrade(Double bonusGrade) {
    this.bonusGrade = bonusGrade;
  }


  public BonusExampleDTO finalPoints(Double finalPoints) {
    this.finalPoints = finalPoints;
    return this;
  }

   /**
   * Get finalPoints
   * @return finalPoints
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FINAL_POINTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getFinalPoints() {
    return finalPoints;
  }


  @JsonProperty(JSON_PROPERTY_FINAL_POINTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFinalPoints(Double finalPoints) {
    this.finalPoints = finalPoints;
  }


  public BonusExampleDTO finalGrade(String finalGrade) {
    this.finalGrade = finalGrade;
    return this;
  }

   /**
   * Get finalGrade
   * @return finalGrade
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FINAL_GRADE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFinalGrade() {
    return finalGrade;
  }


  @JsonProperty(JSON_PROPERTY_FINAL_GRADE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFinalGrade(String finalGrade) {
    this.finalGrade = finalGrade;
  }


  public BonusExampleDTO exceedsMax(Boolean exceedsMax) {
    this.exceedsMax = exceedsMax;
    return this;
  }

   /**
   * Get exceedsMax
   * @return exceedsMax
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXCEEDS_MAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getExceedsMax() {
    return exceedsMax;
  }


  @JsonProperty(JSON_PROPERTY_EXCEEDS_MAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExceedsMax(Boolean exceedsMax) {
    this.exceedsMax = exceedsMax;
  }


  /**
   * Return true if this BonusExampleDTO object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BonusExampleDTO bonusExampleDTO = (BonusExampleDTO) o;
    return Objects.equals(this.studentPointsOfBonusTo, bonusExampleDTO.studentPointsOfBonusTo) &&
        Objects.equals(this.studentPointsOfBonusSource, bonusExampleDTO.studentPointsOfBonusSource) &&
        Objects.equals(this.examGrade, bonusExampleDTO.examGrade) &&
        Objects.equals(this.bonusGrade, bonusExampleDTO.bonusGrade) &&
        Objects.equals(this.finalPoints, bonusExampleDTO.finalPoints) &&
        Objects.equals(this.finalGrade, bonusExampleDTO.finalGrade) &&
        Objects.equals(this.exceedsMax, bonusExampleDTO.exceedsMax);
  }

  @Override
  public int hashCode() {
    return Objects.hash(studentPointsOfBonusTo, studentPointsOfBonusSource, examGrade, bonusGrade, finalPoints, finalGrade, exceedsMax);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BonusExampleDTO {\n");
    sb.append("    studentPointsOfBonusTo: ").append(toIndentedString(studentPointsOfBonusTo)).append("\n");
    sb.append("    studentPointsOfBonusSource: ").append(toIndentedString(studentPointsOfBonusSource)).append("\n");
    sb.append("    examGrade: ").append(toIndentedString(examGrade)).append("\n");
    sb.append("    bonusGrade: ").append(toIndentedString(bonusGrade)).append("\n");
    sb.append("    finalPoints: ").append(toIndentedString(finalPoints)).append("\n");
    sb.append("    finalGrade: ").append(toIndentedString(finalGrade)).append("\n");
    sb.append("    exceedsMax: ").append(toIndentedString(exceedsMax)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

