/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tum.cit.ase.artemis.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import de.tum.cit.ase.artemis.sdk.model.IPAddress;
import de.tum.cit.ase.artemis.sdk.model.StudentExam;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import de.tum.cit.ase.artemis.sdk.JSON;


/**
 * ExamSession
 */
@JsonPropertyOrder({
  ExamSession.JSON_PROPERTY_ID,
  ExamSession.JSON_PROPERTY_CREATED_DATE,
  ExamSession.JSON_PROPERTY_STUDENT_EXAM,
  ExamSession.JSON_PROPERTY_SESSION_TOKEN,
  ExamSession.JSON_PROPERTY_USER_AGENT,
  ExamSession.JSON_PROPERTY_BROWSER_FINGERPRINT_HASH,
  ExamSession.JSON_PROPERTY_INSTANCE_ID,
  ExamSession.JSON_PROPERTY_IP_ADDRESS,
  ExamSession.JSON_PROPERTY_IP_ADDRESS_FROM_IP_ADDRESS,
  ExamSession.JSON_PROPERTY_INITIAL_SESSION
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-04-06T13:57:19.283407Z[Etc/UTC]")
public class ExamSession {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_CREATED_DATE = "createdDate";
  private OffsetDateTime createdDate;

  public static final String JSON_PROPERTY_STUDENT_EXAM = "studentExam";
  private StudentExam studentExam;

  public static final String JSON_PROPERTY_SESSION_TOKEN = "sessionToken";
  private String sessionToken;

  public static final String JSON_PROPERTY_USER_AGENT = "userAgent";
  private String userAgent;

  public static final String JSON_PROPERTY_BROWSER_FINGERPRINT_HASH = "browserFingerprintHash";
  private String browserFingerprintHash;

  public static final String JSON_PROPERTY_INSTANCE_ID = "instanceId";
  private String instanceId;

  public static final String JSON_PROPERTY_IP_ADDRESS = "ipAddress";
  private String ipAddress;

  public static final String JSON_PROPERTY_IP_ADDRESS_FROM_IP_ADDRESS = "ipAddressFromIpAddress";
  private IPAddress ipAddressFromIpAddress;

  public static final String JSON_PROPERTY_INITIAL_SESSION = "initialSession";
  private Boolean initialSession;

  public ExamSession() { 
  }

  public ExamSession id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Long id) {
    this.id = id;
  }


  public ExamSession createdDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
    return this;
  }

   /**
   * Get createdDate
   * @return createdDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }


  public ExamSession studentExam(StudentExam studentExam) {
    this.studentExam = studentExam;
    return this;
  }

   /**
   * Get studentExam
   * @return studentExam
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STUDENT_EXAM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StudentExam getStudentExam() {
    return studentExam;
  }


  @JsonProperty(JSON_PROPERTY_STUDENT_EXAM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStudentExam(StudentExam studentExam) {
    this.studentExam = studentExam;
  }


  public ExamSession sessionToken(String sessionToken) {
    this.sessionToken = sessionToken;
    return this;
  }

   /**
   * Get sessionToken
   * @return sessionToken
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SESSION_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSessionToken() {
    return sessionToken;
  }


  @JsonProperty(JSON_PROPERTY_SESSION_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSessionToken(String sessionToken) {
    this.sessionToken = sessionToken;
  }


  public ExamSession userAgent(String userAgent) {
    this.userAgent = userAgent;
    return this;
  }

   /**
   * Get userAgent
   * @return userAgent
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER_AGENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUserAgent() {
    return userAgent;
  }


  @JsonProperty(JSON_PROPERTY_USER_AGENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserAgent(String userAgent) {
    this.userAgent = userAgent;
  }


  public ExamSession browserFingerprintHash(String browserFingerprintHash) {
    this.browserFingerprintHash = browserFingerprintHash;
    return this;
  }

   /**
   * Get browserFingerprintHash
   * @return browserFingerprintHash
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BROWSER_FINGERPRINT_HASH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBrowserFingerprintHash() {
    return browserFingerprintHash;
  }


  @JsonProperty(JSON_PROPERTY_BROWSER_FINGERPRINT_HASH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBrowserFingerprintHash(String browserFingerprintHash) {
    this.browserFingerprintHash = browserFingerprintHash;
  }


  public ExamSession instanceId(String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

   /**
   * Get instanceId
   * @return instanceId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INSTANCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInstanceId() {
    return instanceId;
  }


  @JsonProperty(JSON_PROPERTY_INSTANCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }


  public ExamSession ipAddress(String ipAddress) {
    this.ipAddress = ipAddress;
    return this;
  }

   /**
   * Get ipAddress
   * @return ipAddress
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IP_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIpAddress() {
    return ipAddress;
  }


  @JsonProperty(JSON_PROPERTY_IP_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIpAddress(String ipAddress) {
    this.ipAddress = ipAddress;
  }


  public ExamSession ipAddressFromIpAddress(IPAddress ipAddressFromIpAddress) {
    this.ipAddressFromIpAddress = ipAddressFromIpAddress;
    return this;
  }

   /**
   * Get ipAddressFromIpAddress
   * @return ipAddressFromIpAddress
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IP_ADDRESS_FROM_IP_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public IPAddress getIpAddressFromIpAddress() {
    return ipAddressFromIpAddress;
  }


  @JsonProperty(JSON_PROPERTY_IP_ADDRESS_FROM_IP_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIpAddressFromIpAddress(IPAddress ipAddressFromIpAddress) {
    this.ipAddressFromIpAddress = ipAddressFromIpAddress;
  }


  public ExamSession initialSession(Boolean initialSession) {
    this.initialSession = initialSession;
    return this;
  }

   /**
   * Get initialSession
   * @return initialSession
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INITIAL_SESSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getInitialSession() {
    return initialSession;
  }


  @JsonProperty(JSON_PROPERTY_INITIAL_SESSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInitialSession(Boolean initialSession) {
    this.initialSession = initialSession;
  }


  /**
   * Return true if this ExamSession object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExamSession examSession = (ExamSession) o;
    return Objects.equals(this.id, examSession.id) &&
        Objects.equals(this.createdDate, examSession.createdDate) &&
        Objects.equals(this.studentExam, examSession.studentExam) &&
        Objects.equals(this.sessionToken, examSession.sessionToken) &&
        Objects.equals(this.userAgent, examSession.userAgent) &&
        Objects.equals(this.browserFingerprintHash, examSession.browserFingerprintHash) &&
        Objects.equals(this.instanceId, examSession.instanceId) &&
        Objects.equals(this.ipAddress, examSession.ipAddress) &&
        Objects.equals(this.ipAddressFromIpAddress, examSession.ipAddressFromIpAddress) &&
        Objects.equals(this.initialSession, examSession.initialSession);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, createdDate, studentExam, sessionToken, userAgent, browserFingerprintHash, instanceId, ipAddress, ipAddressFromIpAddress, initialSession);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExamSession {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    studentExam: ").append(toIndentedString(studentExam)).append("\n");
    sb.append("    sessionToken: ").append(toIndentedString(sessionToken)).append("\n");
    sb.append("    userAgent: ").append(toIndentedString(userAgent)).append("\n");
    sb.append("    browserFingerprintHash: ").append(toIndentedString(browserFingerprintHash)).append("\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    ipAddress: ").append(toIndentedString(ipAddress)).append("\n");
    sb.append("    ipAddressFromIpAddress: ").append(toIndentedString(ipAddressFromIpAddress)).append("\n");
    sb.append("    initialSession: ").append(toIndentedString(initialSession)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

