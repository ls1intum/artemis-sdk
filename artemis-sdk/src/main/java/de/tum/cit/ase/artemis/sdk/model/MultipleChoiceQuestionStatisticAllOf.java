/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tum.cit.ase.artemis.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import de.tum.cit.ase.artemis.sdk.model.AnswerCounter;
import java.util.LinkedHashSet;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import de.tum.cit.ase.artemis.sdk.JSON;


/**
 * MultipleChoiceQuestionStatisticAllOf
 */
@JsonPropertyOrder({
  MultipleChoiceQuestionStatisticAllOf.JSON_PROPERTY_ANSWER_COUNTERS
})
@JsonTypeName("MultipleChoiceQuestionStatistic_allOf")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-03-31T15:20:01.980101Z[Etc/UTC]")
public class MultipleChoiceQuestionStatisticAllOf {
  public static final String JSON_PROPERTY_ANSWER_COUNTERS = "answerCounters";
  private Set<AnswerCounter> answerCounters;

  public MultipleChoiceQuestionStatisticAllOf() { 
  }

  public MultipleChoiceQuestionStatisticAllOf answerCounters(Set<AnswerCounter> answerCounters) {
    this.answerCounters = answerCounters;
    return this;
  }

  public MultipleChoiceQuestionStatisticAllOf addAnswerCountersItem(AnswerCounter answerCountersItem) {
    if (this.answerCounters == null) {
      this.answerCounters = new LinkedHashSet<>();
    }
    this.answerCounters.add(answerCountersItem);
    return this;
  }

   /**
   * Get answerCounters
   * @return answerCounters
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ANSWER_COUNTERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<AnswerCounter> getAnswerCounters() {
    return answerCounters;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_ANSWER_COUNTERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAnswerCounters(Set<AnswerCounter> answerCounters) {
    this.answerCounters = answerCounters;
  }


  /**
   * Return true if this MultipleChoiceQuestionStatistic_allOf object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MultipleChoiceQuestionStatisticAllOf multipleChoiceQuestionStatisticAllOf = (MultipleChoiceQuestionStatisticAllOf) o;
    return Objects.equals(this.answerCounters, multipleChoiceQuestionStatisticAllOf.answerCounters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(answerCounters);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MultipleChoiceQuestionStatisticAllOf {\n");
    sb.append("    answerCounters: ").append(toIndentedString(answerCounters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

