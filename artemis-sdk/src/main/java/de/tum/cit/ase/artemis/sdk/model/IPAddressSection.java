/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tum.cit.ase.artemis.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import de.tum.cit.ase.artemis.sdk.model.IPAddressNetworkObjectObjectObjectObjectObject;
import de.tum.cit.ase.artemis.sdk.model.IPAddressSectionInetAddress;
import de.tum.cit.ase.artemis.sdk.model.IPAddressSegment;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import de.tum.cit.ase.artemis.sdk.JSON;


/**
 * IPAddressSection
 */
@JsonPropertyOrder({
  IPAddressSection.JSON_PROPERTY_NETWORK,
  IPAddressSection.JSON_PROPERTY_LOWER,
  IPAddressSection.JSON_PROPERTY_UPPER,
  IPAddressSection.JSON_PROPERTY_COUNT_IMPL,
  IPAddressSection.JSON_PROPERTY_HOST_MASK_PREFIX,
  IPAddressSection.JSON_PROPERTY_NETWORK_MASK_PREFIX,
  IPAddressSection.JSON_PROPERTY_ENTIRE_ADDRESS,
  IPAddressSection.JSON_PROPERTY_IPV4,
  IPAddressSection.JSON_PROPERTY_SEGMENT_COUNT,
  IPAddressSection.JSON_PROPERTY_MAX_SEGMENT_VALUE,
  IPAddressSection.JSON_PROPERTY_NON_ZERO_HOST_COUNT,
  IPAddressSection.JSON_PROPERTY_BYTE_COUNT,
  IPAddressSection.JSON_PROPERTY_BIT_COUNT,
  IPAddressSection.JSON_PROPERTY_LOWER_NON_ZERO_HOST,
  IPAddressSection.JSON_PROPERTY_SEQUENTIAL_BLOCK_COUNT,
  IPAddressSection.JSON_PROPERTY_ITERABLE,
  IPAddressSection.JSON_PROPERTY_ZERO_HOST,
  IPAddressSection.JSON_PROPERTY_HOST_MASK,
  IPAddressSection.JSON_PROPERTY_NETWORK_MASK,
  IPAddressSection.JSON_PROPERTY_SINGLE_NETWORK,
  IPAddressSection.JSON_PROPERTY_PREFIX_LENGTH,
  IPAddressSection.JSON_PROPERTY_SINGLE_PREFIX_BLOCK,
  IPAddressSection.JSON_PROPERTY_PREFIX_LENGTH_FOR_SINGLE_BLOCK,
  IPAddressSection.JSON_PROPERTY_MIN_PREFIX_LENGTH_FOR_BLOCK,
  IPAddressSection.JSON_PROPERTY_SEGMENT_STRINGS,
  IPAddressSection.JSON_PROPERTY_FULL_RANGE,
  IPAddressSection.JSON_PROPERTY_IPV6,
  IPAddressSection.JSON_PROPERTY_HOST_SECTION,
  IPAddressSection.JSON_PROPERTY_SECTION,
  IPAddressSection.JSON_PROPERTY_IPVERSION,
  IPAddressSection.JSON_PROPERTY_NETWORK_SECTION,
  IPAddressSection.JSON_PROPERTY_SEGMENTS,
  IPAddressSection.JSON_PROPERTY_NETWORK_PREFIX_LENGTH,
  IPAddressSection.JSON_PROPERTY_COUNT,
  IPAddressSection.JSON_PROPERTY_PREFIXED,
  IPAddressSection.JSON_PROPERTY_PREFIX_BLOCK,
  IPAddressSection.JSON_PROPERTY_SEQUENTIAL_BLOCK_INDEX,
  IPAddressSection.JSON_PROPERTY_SEQUENTIAL,
  IPAddressSection.JSON_PROPERTY_DIVISION_STRINGS,
  IPAddressSection.JSON_PROPERTY_PREFIX_COUNT,
  IPAddressSection.JSON_PROPERTY_BYTES,
  IPAddressSection.JSON_PROPERTY_VALUE,
  IPAddressSection.JSON_PROPERTY_ZERO,
  IPAddressSection.JSON_PROPERTY_UPPER_BYTES,
  IPAddressSection.JSON_PROPERTY_UPPER_VALUE,
  IPAddressSection.JSON_PROPERTY_MAX,
  IPAddressSection.JSON_PROPERTY_MULTIPLE,
  IPAddressSection.JSON_PROPERTY_DIVISION_COUNT,
  IPAddressSection.JSON_PROPERTY_BYTES_PER_SEGMENT,
  IPAddressSection.JSON_PROPERTY_BITS_PER_SEGMENT,
  IPAddressSection.JSON_PROPERTY_ZERO_SEGMENTS,
  IPAddressSection.JSON_PROPERTY_ZERO_RANGE_SEGMENTS,
  IPAddressSection.JSON_PROPERTY_INET_ADDRESS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-04-06T13:57:19.283407Z[Etc/UTC]")
public class IPAddressSection {
  public static final String JSON_PROPERTY_NETWORK = "network";
  private IPAddressNetworkObjectObjectObjectObjectObject network;

  public static final String JSON_PROPERTY_LOWER = "lower";
  private IPAddressSection lower;

  public static final String JSON_PROPERTY_UPPER = "upper";
  private IPAddressSection upper;

  public static final String JSON_PROPERTY_COUNT_IMPL = "countImpl";
  private Integer countImpl;

  public static final String JSON_PROPERTY_HOST_MASK_PREFIX = "hostMaskPrefix";
  private Integer hostMaskPrefix;

  public static final String JSON_PROPERTY_NETWORK_MASK_PREFIX = "networkMaskPrefix";
  private Integer networkMaskPrefix;

  public static final String JSON_PROPERTY_ENTIRE_ADDRESS = "entireAddress";
  private Boolean entireAddress;

  public static final String JSON_PROPERTY_IPV4 = "ipv4";
  private Boolean ipv4;

  public static final String JSON_PROPERTY_SEGMENT_COUNT = "segmentCount";
  private Integer segmentCount;

  public static final String JSON_PROPERTY_MAX_SEGMENT_VALUE = "maxSegmentValue";
  private Integer maxSegmentValue;

  public static final String JSON_PROPERTY_NON_ZERO_HOST_COUNT = "nonZeroHostCount";
  private Integer nonZeroHostCount;

  public static final String JSON_PROPERTY_BYTE_COUNT = "byteCount";
  private Integer byteCount;

  public static final String JSON_PROPERTY_BIT_COUNT = "bitCount";
  private Integer bitCount;

  public static final String JSON_PROPERTY_LOWER_NON_ZERO_HOST = "lowerNonZeroHost";
  private IPAddressSection lowerNonZeroHost;

  public static final String JSON_PROPERTY_SEQUENTIAL_BLOCK_COUNT = "sequentialBlockCount";
  private Integer sequentialBlockCount;

  public static final String JSON_PROPERTY_ITERABLE = "iterable";
  private Object iterable;

  public static final String JSON_PROPERTY_ZERO_HOST = "zeroHost";
  private Boolean zeroHost;

  public static final String JSON_PROPERTY_HOST_MASK = "hostMask";
  private IPAddressSection hostMask;

  public static final String JSON_PROPERTY_NETWORK_MASK = "networkMask";
  private IPAddressSection networkMask;

  public static final String JSON_PROPERTY_SINGLE_NETWORK = "singleNetwork";
  private Boolean singleNetwork;

  public static final String JSON_PROPERTY_PREFIX_LENGTH = "prefixLength";
  private Integer prefixLength;

  public static final String JSON_PROPERTY_SINGLE_PREFIX_BLOCK = "singlePrefixBlock";
  private Boolean singlePrefixBlock;

  public static final String JSON_PROPERTY_PREFIX_LENGTH_FOR_SINGLE_BLOCK = "prefixLengthForSingleBlock";
  private Integer prefixLengthForSingleBlock;

  public static final String JSON_PROPERTY_MIN_PREFIX_LENGTH_FOR_BLOCK = "minPrefixLengthForBlock";
  private Integer minPrefixLengthForBlock;

  public static final String JSON_PROPERTY_SEGMENT_STRINGS = "segmentStrings";
  private List<String> segmentStrings;

  public static final String JSON_PROPERTY_FULL_RANGE = "fullRange";
  private Boolean fullRange;

  public static final String JSON_PROPERTY_IPV6 = "ipv6";
  private Boolean ipv6;

  public static final String JSON_PROPERTY_HOST_SECTION = "hostSection";
  private IPAddressSection hostSection;

  public static final String JSON_PROPERTY_SECTION = "section";
  private IPAddressSection section;

  /**
   * Gets or Sets ipversion
   */
  public enum IpversionEnum {
    IPV4("IPv4"),
    
    IPV6("IPv6");

    private String value;

    IpversionEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static IpversionEnum fromValue(String value) {
      for (IpversionEnum b : IpversionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_IPVERSION = "ipversion";
  private IpversionEnum ipversion;

  public static final String JSON_PROPERTY_NETWORK_SECTION = "networkSection";
  private IPAddressSection networkSection;

  public static final String JSON_PROPERTY_SEGMENTS = "segments";
  private List<IPAddressSegment> segments;

  public static final String JSON_PROPERTY_NETWORK_PREFIX_LENGTH = "networkPrefixLength";
  private Integer networkPrefixLength;

  public static final String JSON_PROPERTY_COUNT = "count";
  private Integer count;

  public static final String JSON_PROPERTY_PREFIXED = "prefixed";
  private Boolean prefixed;

  public static final String JSON_PROPERTY_PREFIX_BLOCK = "prefixBlock";
  private Boolean prefixBlock;

  public static final String JSON_PROPERTY_SEQUENTIAL_BLOCK_INDEX = "sequentialBlockIndex";
  private Integer sequentialBlockIndex;

  public static final String JSON_PROPERTY_SEQUENTIAL = "sequential";
  private Boolean sequential;

  public static final String JSON_PROPERTY_DIVISION_STRINGS = "divisionStrings";
  private List<String> divisionStrings;

  public static final String JSON_PROPERTY_PREFIX_COUNT = "prefixCount";
  private Integer prefixCount;

  public static final String JSON_PROPERTY_BYTES = "bytes";
  private List<byte[]> bytes;

  public static final String JSON_PROPERTY_VALUE = "value";
  private Integer value;

  public static final String JSON_PROPERTY_ZERO = "zero";
  private Boolean zero;

  public static final String JSON_PROPERTY_UPPER_BYTES = "upperBytes";
  private List<byte[]> upperBytes;

  public static final String JSON_PROPERTY_UPPER_VALUE = "upperValue";
  private Integer upperValue;

  public static final String JSON_PROPERTY_MAX = "max";
  private Boolean max;

  public static final String JSON_PROPERTY_MULTIPLE = "multiple";
  private Boolean multiple;

  public static final String JSON_PROPERTY_DIVISION_COUNT = "divisionCount";
  private Integer divisionCount;

  public static final String JSON_PROPERTY_BYTES_PER_SEGMENT = "bytesPerSegment";
  private Integer bytesPerSegment;

  public static final String JSON_PROPERTY_BITS_PER_SEGMENT = "bitsPerSegment";
  private Integer bitsPerSegment;

  public static final String JSON_PROPERTY_ZERO_SEGMENTS = "zeroSegments";
  private Object zeroSegments;

  public static final String JSON_PROPERTY_ZERO_RANGE_SEGMENTS = "zeroRangeSegments";
  private Object zeroRangeSegments;

  public static final String JSON_PROPERTY_INET_ADDRESS = "inetAddress";
  private IPAddressSectionInetAddress inetAddress;

  public IPAddressSection() { 
  }

  public IPAddressSection network(IPAddressNetworkObjectObjectObjectObjectObject network) {
    this.network = network;
    return this;
  }

   /**
   * Get network
   * @return network
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NETWORK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public IPAddressNetworkObjectObjectObjectObjectObject getNetwork() {
    return network;
  }


  @JsonProperty(JSON_PROPERTY_NETWORK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNetwork(IPAddressNetworkObjectObjectObjectObjectObject network) {
    this.network = network;
  }


  public IPAddressSection lower(IPAddressSection lower) {
    this.lower = lower;
    return this;
  }

   /**
   * Get lower
   * @return lower
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOWER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public IPAddressSection getLower() {
    return lower;
  }


  @JsonProperty(JSON_PROPERTY_LOWER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLower(IPAddressSection lower) {
    this.lower = lower;
  }


  public IPAddressSection upper(IPAddressSection upper) {
    this.upper = upper;
    return this;
  }

   /**
   * Get upper
   * @return upper
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPPER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public IPAddressSection getUpper() {
    return upper;
  }


  @JsonProperty(JSON_PROPERTY_UPPER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpper(IPAddressSection upper) {
    this.upper = upper;
  }


  public IPAddressSection countImpl(Integer countImpl) {
    this.countImpl = countImpl;
    return this;
  }

   /**
   * Get countImpl
   * @return countImpl
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COUNT_IMPL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCountImpl() {
    return countImpl;
  }


  @JsonProperty(JSON_PROPERTY_COUNT_IMPL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCountImpl(Integer countImpl) {
    this.countImpl = countImpl;
  }


  public IPAddressSection hostMaskPrefix(Integer hostMaskPrefix) {
    this.hostMaskPrefix = hostMaskPrefix;
    return this;
  }

   /**
   * Get hostMaskPrefix
   * @return hostMaskPrefix
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HOST_MASK_PREFIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getHostMaskPrefix() {
    return hostMaskPrefix;
  }


  @JsonProperty(JSON_PROPERTY_HOST_MASK_PREFIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHostMaskPrefix(Integer hostMaskPrefix) {
    this.hostMaskPrefix = hostMaskPrefix;
  }


  public IPAddressSection networkMaskPrefix(Integer networkMaskPrefix) {
    this.networkMaskPrefix = networkMaskPrefix;
    return this;
  }

   /**
   * Get networkMaskPrefix
   * @return networkMaskPrefix
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NETWORK_MASK_PREFIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getNetworkMaskPrefix() {
    return networkMaskPrefix;
  }


  @JsonProperty(JSON_PROPERTY_NETWORK_MASK_PREFIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNetworkMaskPrefix(Integer networkMaskPrefix) {
    this.networkMaskPrefix = networkMaskPrefix;
  }


  public IPAddressSection entireAddress(Boolean entireAddress) {
    this.entireAddress = entireAddress;
    return this;
  }

   /**
   * Get entireAddress
   * @return entireAddress
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENTIRE_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEntireAddress() {
    return entireAddress;
  }


  @JsonProperty(JSON_PROPERTY_ENTIRE_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEntireAddress(Boolean entireAddress) {
    this.entireAddress = entireAddress;
  }


  public IPAddressSection ipv4(Boolean ipv4) {
    this.ipv4 = ipv4;
    return this;
  }

   /**
   * Get ipv4
   * @return ipv4
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IPV4)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIpv4() {
    return ipv4;
  }


  @JsonProperty(JSON_PROPERTY_IPV4)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIpv4(Boolean ipv4) {
    this.ipv4 = ipv4;
  }


  public IPAddressSection segmentCount(Integer segmentCount) {
    this.segmentCount = segmentCount;
    return this;
  }

   /**
   * Get segmentCount
   * @return segmentCount
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SEGMENT_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSegmentCount() {
    return segmentCount;
  }


  @JsonProperty(JSON_PROPERTY_SEGMENT_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSegmentCount(Integer segmentCount) {
    this.segmentCount = segmentCount;
  }


  public IPAddressSection maxSegmentValue(Integer maxSegmentValue) {
    this.maxSegmentValue = maxSegmentValue;
    return this;
  }

   /**
   * Get maxSegmentValue
   * @return maxSegmentValue
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAX_SEGMENT_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMaxSegmentValue() {
    return maxSegmentValue;
  }


  @JsonProperty(JSON_PROPERTY_MAX_SEGMENT_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxSegmentValue(Integer maxSegmentValue) {
    this.maxSegmentValue = maxSegmentValue;
  }


  public IPAddressSection nonZeroHostCount(Integer nonZeroHostCount) {
    this.nonZeroHostCount = nonZeroHostCount;
    return this;
  }

   /**
   * Get nonZeroHostCount
   * @return nonZeroHostCount
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NON_ZERO_HOST_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getNonZeroHostCount() {
    return nonZeroHostCount;
  }


  @JsonProperty(JSON_PROPERTY_NON_ZERO_HOST_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNonZeroHostCount(Integer nonZeroHostCount) {
    this.nonZeroHostCount = nonZeroHostCount;
  }


  public IPAddressSection byteCount(Integer byteCount) {
    this.byteCount = byteCount;
    return this;
  }

   /**
   * Get byteCount
   * @return byteCount
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BYTE_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getByteCount() {
    return byteCount;
  }


  @JsonProperty(JSON_PROPERTY_BYTE_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setByteCount(Integer byteCount) {
    this.byteCount = byteCount;
  }


  public IPAddressSection bitCount(Integer bitCount) {
    this.bitCount = bitCount;
    return this;
  }

   /**
   * Get bitCount
   * @return bitCount
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BIT_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getBitCount() {
    return bitCount;
  }


  @JsonProperty(JSON_PROPERTY_BIT_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBitCount(Integer bitCount) {
    this.bitCount = bitCount;
  }


  public IPAddressSection lowerNonZeroHost(IPAddressSection lowerNonZeroHost) {
    this.lowerNonZeroHost = lowerNonZeroHost;
    return this;
  }

   /**
   * Get lowerNonZeroHost
   * @return lowerNonZeroHost
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOWER_NON_ZERO_HOST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public IPAddressSection getLowerNonZeroHost() {
    return lowerNonZeroHost;
  }


  @JsonProperty(JSON_PROPERTY_LOWER_NON_ZERO_HOST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLowerNonZeroHost(IPAddressSection lowerNonZeroHost) {
    this.lowerNonZeroHost = lowerNonZeroHost;
  }


  public IPAddressSection sequentialBlockCount(Integer sequentialBlockCount) {
    this.sequentialBlockCount = sequentialBlockCount;
    return this;
  }

   /**
   * Get sequentialBlockCount
   * @return sequentialBlockCount
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SEQUENTIAL_BLOCK_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSequentialBlockCount() {
    return sequentialBlockCount;
  }


  @JsonProperty(JSON_PROPERTY_SEQUENTIAL_BLOCK_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSequentialBlockCount(Integer sequentialBlockCount) {
    this.sequentialBlockCount = sequentialBlockCount;
  }


  public IPAddressSection iterable(Object iterable) {
    this.iterable = iterable;
    return this;
  }

   /**
   * Get iterable
   * @return iterable
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ITERABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getIterable() {
    return iterable;
  }


  @JsonProperty(JSON_PROPERTY_ITERABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIterable(Object iterable) {
    this.iterable = iterable;
  }


  public IPAddressSection zeroHost(Boolean zeroHost) {
    this.zeroHost = zeroHost;
    return this;
  }

   /**
   * Get zeroHost
   * @return zeroHost
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ZERO_HOST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getZeroHost() {
    return zeroHost;
  }


  @JsonProperty(JSON_PROPERTY_ZERO_HOST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setZeroHost(Boolean zeroHost) {
    this.zeroHost = zeroHost;
  }


  public IPAddressSection hostMask(IPAddressSection hostMask) {
    this.hostMask = hostMask;
    return this;
  }

   /**
   * Get hostMask
   * @return hostMask
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HOST_MASK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public IPAddressSection getHostMask() {
    return hostMask;
  }


  @JsonProperty(JSON_PROPERTY_HOST_MASK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHostMask(IPAddressSection hostMask) {
    this.hostMask = hostMask;
  }


  public IPAddressSection networkMask(IPAddressSection networkMask) {
    this.networkMask = networkMask;
    return this;
  }

   /**
   * Get networkMask
   * @return networkMask
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NETWORK_MASK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public IPAddressSection getNetworkMask() {
    return networkMask;
  }


  @JsonProperty(JSON_PROPERTY_NETWORK_MASK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNetworkMask(IPAddressSection networkMask) {
    this.networkMask = networkMask;
  }


  public IPAddressSection singleNetwork(Boolean singleNetwork) {
    this.singleNetwork = singleNetwork;
    return this;
  }

   /**
   * Get singleNetwork
   * @return singleNetwork
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SINGLE_NETWORK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSingleNetwork() {
    return singleNetwork;
  }


  @JsonProperty(JSON_PROPERTY_SINGLE_NETWORK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSingleNetwork(Boolean singleNetwork) {
    this.singleNetwork = singleNetwork;
  }


  public IPAddressSection prefixLength(Integer prefixLength) {
    this.prefixLength = prefixLength;
    return this;
  }

   /**
   * Get prefixLength
   * @return prefixLength
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PREFIX_LENGTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPrefixLength() {
    return prefixLength;
  }


  @JsonProperty(JSON_PROPERTY_PREFIX_LENGTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrefixLength(Integer prefixLength) {
    this.prefixLength = prefixLength;
  }


  public IPAddressSection singlePrefixBlock(Boolean singlePrefixBlock) {
    this.singlePrefixBlock = singlePrefixBlock;
    return this;
  }

   /**
   * Get singlePrefixBlock
   * @return singlePrefixBlock
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SINGLE_PREFIX_BLOCK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSinglePrefixBlock() {
    return singlePrefixBlock;
  }


  @JsonProperty(JSON_PROPERTY_SINGLE_PREFIX_BLOCK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSinglePrefixBlock(Boolean singlePrefixBlock) {
    this.singlePrefixBlock = singlePrefixBlock;
  }


  public IPAddressSection prefixLengthForSingleBlock(Integer prefixLengthForSingleBlock) {
    this.prefixLengthForSingleBlock = prefixLengthForSingleBlock;
    return this;
  }

   /**
   * Get prefixLengthForSingleBlock
   * @return prefixLengthForSingleBlock
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PREFIX_LENGTH_FOR_SINGLE_BLOCK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPrefixLengthForSingleBlock() {
    return prefixLengthForSingleBlock;
  }


  @JsonProperty(JSON_PROPERTY_PREFIX_LENGTH_FOR_SINGLE_BLOCK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrefixLengthForSingleBlock(Integer prefixLengthForSingleBlock) {
    this.prefixLengthForSingleBlock = prefixLengthForSingleBlock;
  }


  public IPAddressSection minPrefixLengthForBlock(Integer minPrefixLengthForBlock) {
    this.minPrefixLengthForBlock = minPrefixLengthForBlock;
    return this;
  }

   /**
   * Get minPrefixLengthForBlock
   * @return minPrefixLengthForBlock
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MIN_PREFIX_LENGTH_FOR_BLOCK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMinPrefixLengthForBlock() {
    return minPrefixLengthForBlock;
  }


  @JsonProperty(JSON_PROPERTY_MIN_PREFIX_LENGTH_FOR_BLOCK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMinPrefixLengthForBlock(Integer minPrefixLengthForBlock) {
    this.minPrefixLengthForBlock = minPrefixLengthForBlock;
  }


  public IPAddressSection segmentStrings(List<String> segmentStrings) {
    this.segmentStrings = segmentStrings;
    return this;
  }

  public IPAddressSection addSegmentStringsItem(String segmentStringsItem) {
    if (this.segmentStrings == null) {
      this.segmentStrings = new ArrayList<>();
    }
    this.segmentStrings.add(segmentStringsItem);
    return this;
  }

   /**
   * Get segmentStrings
   * @return segmentStrings
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SEGMENT_STRINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getSegmentStrings() {
    return segmentStrings;
  }


  @JsonProperty(JSON_PROPERTY_SEGMENT_STRINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSegmentStrings(List<String> segmentStrings) {
    this.segmentStrings = segmentStrings;
  }


  public IPAddressSection fullRange(Boolean fullRange) {
    this.fullRange = fullRange;
    return this;
  }

   /**
   * Get fullRange
   * @return fullRange
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FULL_RANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getFullRange() {
    return fullRange;
  }


  @JsonProperty(JSON_PROPERTY_FULL_RANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFullRange(Boolean fullRange) {
    this.fullRange = fullRange;
  }


  public IPAddressSection ipv6(Boolean ipv6) {
    this.ipv6 = ipv6;
    return this;
  }

   /**
   * Get ipv6
   * @return ipv6
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IPV6)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIpv6() {
    return ipv6;
  }


  @JsonProperty(JSON_PROPERTY_IPV6)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIpv6(Boolean ipv6) {
    this.ipv6 = ipv6;
  }


  public IPAddressSection hostSection(IPAddressSection hostSection) {
    this.hostSection = hostSection;
    return this;
  }

   /**
   * Get hostSection
   * @return hostSection
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HOST_SECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public IPAddressSection getHostSection() {
    return hostSection;
  }


  @JsonProperty(JSON_PROPERTY_HOST_SECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHostSection(IPAddressSection hostSection) {
    this.hostSection = hostSection;
  }


  public IPAddressSection section(IPAddressSection section) {
    this.section = section;
    return this;
  }

   /**
   * Get section
   * @return section
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public IPAddressSection getSection() {
    return section;
  }


  @JsonProperty(JSON_PROPERTY_SECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSection(IPAddressSection section) {
    this.section = section;
  }


  public IPAddressSection ipversion(IpversionEnum ipversion) {
    this.ipversion = ipversion;
    return this;
  }

   /**
   * Get ipversion
   * @return ipversion
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IPVERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public IpversionEnum getIpversion() {
    return ipversion;
  }


  @JsonProperty(JSON_PROPERTY_IPVERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIpversion(IpversionEnum ipversion) {
    this.ipversion = ipversion;
  }


  public IPAddressSection networkSection(IPAddressSection networkSection) {
    this.networkSection = networkSection;
    return this;
  }

   /**
   * Get networkSection
   * @return networkSection
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NETWORK_SECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public IPAddressSection getNetworkSection() {
    return networkSection;
  }


  @JsonProperty(JSON_PROPERTY_NETWORK_SECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNetworkSection(IPAddressSection networkSection) {
    this.networkSection = networkSection;
  }


  public IPAddressSection segments(List<IPAddressSegment> segments) {
    this.segments = segments;
    return this;
  }

  public IPAddressSection addSegmentsItem(IPAddressSegment segmentsItem) {
    if (this.segments == null) {
      this.segments = new ArrayList<>();
    }
    this.segments.add(segmentsItem);
    return this;
  }

   /**
   * Get segments
   * @return segments
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SEGMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<IPAddressSegment> getSegments() {
    return segments;
  }


  @JsonProperty(JSON_PROPERTY_SEGMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSegments(List<IPAddressSegment> segments) {
    this.segments = segments;
  }


  public IPAddressSection networkPrefixLength(Integer networkPrefixLength) {
    this.networkPrefixLength = networkPrefixLength;
    return this;
  }

   /**
   * Get networkPrefixLength
   * @return networkPrefixLength
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NETWORK_PREFIX_LENGTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getNetworkPrefixLength() {
    return networkPrefixLength;
  }


  @JsonProperty(JSON_PROPERTY_NETWORK_PREFIX_LENGTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNetworkPrefixLength(Integer networkPrefixLength) {
    this.networkPrefixLength = networkPrefixLength;
  }


  public IPAddressSection count(Integer count) {
    this.count = count;
    return this;
  }

   /**
   * Get count
   * @return count
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCount() {
    return count;
  }


  @JsonProperty(JSON_PROPERTY_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCount(Integer count) {
    this.count = count;
  }


  public IPAddressSection prefixed(Boolean prefixed) {
    this.prefixed = prefixed;
    return this;
  }

   /**
   * Get prefixed
   * @return prefixed
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PREFIXED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getPrefixed() {
    return prefixed;
  }


  @JsonProperty(JSON_PROPERTY_PREFIXED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrefixed(Boolean prefixed) {
    this.prefixed = prefixed;
  }


  public IPAddressSection prefixBlock(Boolean prefixBlock) {
    this.prefixBlock = prefixBlock;
    return this;
  }

   /**
   * Get prefixBlock
   * @return prefixBlock
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PREFIX_BLOCK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getPrefixBlock() {
    return prefixBlock;
  }


  @JsonProperty(JSON_PROPERTY_PREFIX_BLOCK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrefixBlock(Boolean prefixBlock) {
    this.prefixBlock = prefixBlock;
  }


  public IPAddressSection sequentialBlockIndex(Integer sequentialBlockIndex) {
    this.sequentialBlockIndex = sequentialBlockIndex;
    return this;
  }

   /**
   * Get sequentialBlockIndex
   * @return sequentialBlockIndex
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SEQUENTIAL_BLOCK_INDEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSequentialBlockIndex() {
    return sequentialBlockIndex;
  }


  @JsonProperty(JSON_PROPERTY_SEQUENTIAL_BLOCK_INDEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSequentialBlockIndex(Integer sequentialBlockIndex) {
    this.sequentialBlockIndex = sequentialBlockIndex;
  }


  public IPAddressSection sequential(Boolean sequential) {
    this.sequential = sequential;
    return this;
  }

   /**
   * Get sequential
   * @return sequential
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SEQUENTIAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSequential() {
    return sequential;
  }


  @JsonProperty(JSON_PROPERTY_SEQUENTIAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSequential(Boolean sequential) {
    this.sequential = sequential;
  }


  public IPAddressSection divisionStrings(List<String> divisionStrings) {
    this.divisionStrings = divisionStrings;
    return this;
  }

  public IPAddressSection addDivisionStringsItem(String divisionStringsItem) {
    if (this.divisionStrings == null) {
      this.divisionStrings = new ArrayList<>();
    }
    this.divisionStrings.add(divisionStringsItem);
    return this;
  }

   /**
   * Get divisionStrings
   * @return divisionStrings
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIVISION_STRINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getDivisionStrings() {
    return divisionStrings;
  }


  @JsonProperty(JSON_PROPERTY_DIVISION_STRINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDivisionStrings(List<String> divisionStrings) {
    this.divisionStrings = divisionStrings;
  }


  public IPAddressSection prefixCount(Integer prefixCount) {
    this.prefixCount = prefixCount;
    return this;
  }

   /**
   * Get prefixCount
   * @return prefixCount
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PREFIX_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPrefixCount() {
    return prefixCount;
  }


  @JsonProperty(JSON_PROPERTY_PREFIX_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrefixCount(Integer prefixCount) {
    this.prefixCount = prefixCount;
  }


  public IPAddressSection bytes(List<byte[]> bytes) {
    this.bytes = bytes;
    return this;
  }

  public IPAddressSection addBytesItem(byte[] bytesItem) {
    if (this.bytes == null) {
      this.bytes = new ArrayList<>();
    }
    this.bytes.add(bytesItem);
    return this;
  }

   /**
   * Get bytes
   * @return bytes
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BYTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<byte[]> getBytes() {
    return bytes;
  }


  @JsonProperty(JSON_PROPERTY_BYTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBytes(List<byte[]> bytes) {
    this.bytes = bytes;
  }


  public IPAddressSection value(Integer value) {
    this.value = value;
    return this;
  }

   /**
   * Get value
   * @return value
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getValue() {
    return value;
  }


  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValue(Integer value) {
    this.value = value;
  }


  public IPAddressSection zero(Boolean zero) {
    this.zero = zero;
    return this;
  }

   /**
   * Get zero
   * @return zero
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ZERO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getZero() {
    return zero;
  }


  @JsonProperty(JSON_PROPERTY_ZERO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setZero(Boolean zero) {
    this.zero = zero;
  }


  public IPAddressSection upperBytes(List<byte[]> upperBytes) {
    this.upperBytes = upperBytes;
    return this;
  }

  public IPAddressSection addUpperBytesItem(byte[] upperBytesItem) {
    if (this.upperBytes == null) {
      this.upperBytes = new ArrayList<>();
    }
    this.upperBytes.add(upperBytesItem);
    return this;
  }

   /**
   * Get upperBytes
   * @return upperBytes
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPPER_BYTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<byte[]> getUpperBytes() {
    return upperBytes;
  }


  @JsonProperty(JSON_PROPERTY_UPPER_BYTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpperBytes(List<byte[]> upperBytes) {
    this.upperBytes = upperBytes;
  }


  public IPAddressSection upperValue(Integer upperValue) {
    this.upperValue = upperValue;
    return this;
  }

   /**
   * Get upperValue
   * @return upperValue
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPPER_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getUpperValue() {
    return upperValue;
  }


  @JsonProperty(JSON_PROPERTY_UPPER_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpperValue(Integer upperValue) {
    this.upperValue = upperValue;
  }


  public IPAddressSection max(Boolean max) {
    this.max = max;
    return this;
  }

   /**
   * Get max
   * @return max
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getMax() {
    return max;
  }


  @JsonProperty(JSON_PROPERTY_MAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMax(Boolean max) {
    this.max = max;
  }


  public IPAddressSection multiple(Boolean multiple) {
    this.multiple = multiple;
    return this;
  }

   /**
   * Get multiple
   * @return multiple
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MULTIPLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getMultiple() {
    return multiple;
  }


  @JsonProperty(JSON_PROPERTY_MULTIPLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMultiple(Boolean multiple) {
    this.multiple = multiple;
  }


  public IPAddressSection divisionCount(Integer divisionCount) {
    this.divisionCount = divisionCount;
    return this;
  }

   /**
   * Get divisionCount
   * @return divisionCount
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIVISION_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDivisionCount() {
    return divisionCount;
  }


  @JsonProperty(JSON_PROPERTY_DIVISION_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDivisionCount(Integer divisionCount) {
    this.divisionCount = divisionCount;
  }


  public IPAddressSection bytesPerSegment(Integer bytesPerSegment) {
    this.bytesPerSegment = bytesPerSegment;
    return this;
  }

   /**
   * Get bytesPerSegment
   * @return bytesPerSegment
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BYTES_PER_SEGMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getBytesPerSegment() {
    return bytesPerSegment;
  }


  @JsonProperty(JSON_PROPERTY_BYTES_PER_SEGMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBytesPerSegment(Integer bytesPerSegment) {
    this.bytesPerSegment = bytesPerSegment;
  }


  public IPAddressSection bitsPerSegment(Integer bitsPerSegment) {
    this.bitsPerSegment = bitsPerSegment;
    return this;
  }

   /**
   * Get bitsPerSegment
   * @return bitsPerSegment
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BITS_PER_SEGMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getBitsPerSegment() {
    return bitsPerSegment;
  }


  @JsonProperty(JSON_PROPERTY_BITS_PER_SEGMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBitsPerSegment(Integer bitsPerSegment) {
    this.bitsPerSegment = bitsPerSegment;
  }


  public IPAddressSection zeroSegments(Object zeroSegments) {
    this.zeroSegments = zeroSegments;
    return this;
  }

   /**
   * Get zeroSegments
   * @return zeroSegments
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ZERO_SEGMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getZeroSegments() {
    return zeroSegments;
  }


  @JsonProperty(JSON_PROPERTY_ZERO_SEGMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setZeroSegments(Object zeroSegments) {
    this.zeroSegments = zeroSegments;
  }


  public IPAddressSection zeroRangeSegments(Object zeroRangeSegments) {
    this.zeroRangeSegments = zeroRangeSegments;
    return this;
  }

   /**
   * Get zeroRangeSegments
   * @return zeroRangeSegments
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ZERO_RANGE_SEGMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getZeroRangeSegments() {
    return zeroRangeSegments;
  }


  @JsonProperty(JSON_PROPERTY_ZERO_RANGE_SEGMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setZeroRangeSegments(Object zeroRangeSegments) {
    this.zeroRangeSegments = zeroRangeSegments;
  }


  public IPAddressSection inetAddress(IPAddressSectionInetAddress inetAddress) {
    this.inetAddress = inetAddress;
    return this;
  }

   /**
   * Get inetAddress
   * @return inetAddress
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INET_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public IPAddressSectionInetAddress getInetAddress() {
    return inetAddress;
  }


  @JsonProperty(JSON_PROPERTY_INET_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInetAddress(IPAddressSectionInetAddress inetAddress) {
    this.inetAddress = inetAddress;
  }


  /**
   * Return true if this IPAddressSection object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IPAddressSection ipAddressSection = (IPAddressSection) o;
    return Objects.equals(this.network, ipAddressSection.network) &&
        Objects.equals(this.lower, ipAddressSection.lower) &&
        Objects.equals(this.upper, ipAddressSection.upper) &&
        Objects.equals(this.countImpl, ipAddressSection.countImpl) &&
        Objects.equals(this.hostMaskPrefix, ipAddressSection.hostMaskPrefix) &&
        Objects.equals(this.networkMaskPrefix, ipAddressSection.networkMaskPrefix) &&
        Objects.equals(this.entireAddress, ipAddressSection.entireAddress) &&
        Objects.equals(this.ipv4, ipAddressSection.ipv4) &&
        Objects.equals(this.segmentCount, ipAddressSection.segmentCount) &&
        Objects.equals(this.maxSegmentValue, ipAddressSection.maxSegmentValue) &&
        Objects.equals(this.nonZeroHostCount, ipAddressSection.nonZeroHostCount) &&
        Objects.equals(this.byteCount, ipAddressSection.byteCount) &&
        Objects.equals(this.bitCount, ipAddressSection.bitCount) &&
        Objects.equals(this.lowerNonZeroHost, ipAddressSection.lowerNonZeroHost) &&
        Objects.equals(this.sequentialBlockCount, ipAddressSection.sequentialBlockCount) &&
        Objects.equals(this.iterable, ipAddressSection.iterable) &&
        Objects.equals(this.zeroHost, ipAddressSection.zeroHost) &&
        Objects.equals(this.hostMask, ipAddressSection.hostMask) &&
        Objects.equals(this.networkMask, ipAddressSection.networkMask) &&
        Objects.equals(this.singleNetwork, ipAddressSection.singleNetwork) &&
        Objects.equals(this.prefixLength, ipAddressSection.prefixLength) &&
        Objects.equals(this.singlePrefixBlock, ipAddressSection.singlePrefixBlock) &&
        Objects.equals(this.prefixLengthForSingleBlock, ipAddressSection.prefixLengthForSingleBlock) &&
        Objects.equals(this.minPrefixLengthForBlock, ipAddressSection.minPrefixLengthForBlock) &&
        Objects.equals(this.segmentStrings, ipAddressSection.segmentStrings) &&
        Objects.equals(this.fullRange, ipAddressSection.fullRange) &&
        Objects.equals(this.ipv6, ipAddressSection.ipv6) &&
        Objects.equals(this.hostSection, ipAddressSection.hostSection) &&
        Objects.equals(this.section, ipAddressSection.section) &&
        Objects.equals(this.ipversion, ipAddressSection.ipversion) &&
        Objects.equals(this.networkSection, ipAddressSection.networkSection) &&
        Objects.equals(this.segments, ipAddressSection.segments) &&
        Objects.equals(this.networkPrefixLength, ipAddressSection.networkPrefixLength) &&
        Objects.equals(this.count, ipAddressSection.count) &&
        Objects.equals(this.prefixed, ipAddressSection.prefixed) &&
        Objects.equals(this.prefixBlock, ipAddressSection.prefixBlock) &&
        Objects.equals(this.sequentialBlockIndex, ipAddressSection.sequentialBlockIndex) &&
        Objects.equals(this.sequential, ipAddressSection.sequential) &&
        Objects.equals(this.divisionStrings, ipAddressSection.divisionStrings) &&
        Objects.equals(this.prefixCount, ipAddressSection.prefixCount) &&
        Objects.equals(this.bytes, ipAddressSection.bytes) &&
        Objects.equals(this.value, ipAddressSection.value) &&
        Objects.equals(this.zero, ipAddressSection.zero) &&
        Objects.equals(this.upperBytes, ipAddressSection.upperBytes) &&
        Objects.equals(this.upperValue, ipAddressSection.upperValue) &&
        Objects.equals(this.max, ipAddressSection.max) &&
        Objects.equals(this.multiple, ipAddressSection.multiple) &&
        Objects.equals(this.divisionCount, ipAddressSection.divisionCount) &&
        Objects.equals(this.bytesPerSegment, ipAddressSection.bytesPerSegment) &&
        Objects.equals(this.bitsPerSegment, ipAddressSection.bitsPerSegment) &&
        Objects.equals(this.zeroSegments, ipAddressSection.zeroSegments) &&
        Objects.equals(this.zeroRangeSegments, ipAddressSection.zeroRangeSegments) &&
        Objects.equals(this.inetAddress, ipAddressSection.inetAddress);
  }

  @Override
  public int hashCode() {
    return Objects.hash(network, lower, upper, countImpl, hostMaskPrefix, networkMaskPrefix, entireAddress, ipv4, segmentCount, maxSegmentValue, nonZeroHostCount, byteCount, bitCount, lowerNonZeroHost, sequentialBlockCount, iterable, zeroHost, hostMask, networkMask, singleNetwork, prefixLength, singlePrefixBlock, prefixLengthForSingleBlock, minPrefixLengthForBlock, segmentStrings, fullRange, ipv6, hostSection, section, ipversion, networkSection, segments, networkPrefixLength, count, prefixed, prefixBlock, sequentialBlockIndex, sequential, divisionStrings, prefixCount, bytes, value, zero, upperBytes, upperValue, max, multiple, divisionCount, bytesPerSegment, bitsPerSegment, zeroSegments, zeroRangeSegments, inetAddress);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IPAddressSection {\n");
    sb.append("    network: ").append(toIndentedString(network)).append("\n");
    sb.append("    lower: ").append(toIndentedString(lower)).append("\n");
    sb.append("    upper: ").append(toIndentedString(upper)).append("\n");
    sb.append("    countImpl: ").append(toIndentedString(countImpl)).append("\n");
    sb.append("    hostMaskPrefix: ").append(toIndentedString(hostMaskPrefix)).append("\n");
    sb.append("    networkMaskPrefix: ").append(toIndentedString(networkMaskPrefix)).append("\n");
    sb.append("    entireAddress: ").append(toIndentedString(entireAddress)).append("\n");
    sb.append("    ipv4: ").append(toIndentedString(ipv4)).append("\n");
    sb.append("    segmentCount: ").append(toIndentedString(segmentCount)).append("\n");
    sb.append("    maxSegmentValue: ").append(toIndentedString(maxSegmentValue)).append("\n");
    sb.append("    nonZeroHostCount: ").append(toIndentedString(nonZeroHostCount)).append("\n");
    sb.append("    byteCount: ").append(toIndentedString(byteCount)).append("\n");
    sb.append("    bitCount: ").append(toIndentedString(bitCount)).append("\n");
    sb.append("    lowerNonZeroHost: ").append(toIndentedString(lowerNonZeroHost)).append("\n");
    sb.append("    sequentialBlockCount: ").append(toIndentedString(sequentialBlockCount)).append("\n");
    sb.append("    iterable: ").append(toIndentedString(iterable)).append("\n");
    sb.append("    zeroHost: ").append(toIndentedString(zeroHost)).append("\n");
    sb.append("    hostMask: ").append(toIndentedString(hostMask)).append("\n");
    sb.append("    networkMask: ").append(toIndentedString(networkMask)).append("\n");
    sb.append("    singleNetwork: ").append(toIndentedString(singleNetwork)).append("\n");
    sb.append("    prefixLength: ").append(toIndentedString(prefixLength)).append("\n");
    sb.append("    singlePrefixBlock: ").append(toIndentedString(singlePrefixBlock)).append("\n");
    sb.append("    prefixLengthForSingleBlock: ").append(toIndentedString(prefixLengthForSingleBlock)).append("\n");
    sb.append("    minPrefixLengthForBlock: ").append(toIndentedString(minPrefixLengthForBlock)).append("\n");
    sb.append("    segmentStrings: ").append(toIndentedString(segmentStrings)).append("\n");
    sb.append("    fullRange: ").append(toIndentedString(fullRange)).append("\n");
    sb.append("    ipv6: ").append(toIndentedString(ipv6)).append("\n");
    sb.append("    hostSection: ").append(toIndentedString(hostSection)).append("\n");
    sb.append("    section: ").append(toIndentedString(section)).append("\n");
    sb.append("    ipversion: ").append(toIndentedString(ipversion)).append("\n");
    sb.append("    networkSection: ").append(toIndentedString(networkSection)).append("\n");
    sb.append("    segments: ").append(toIndentedString(segments)).append("\n");
    sb.append("    networkPrefixLength: ").append(toIndentedString(networkPrefixLength)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    prefixed: ").append(toIndentedString(prefixed)).append("\n");
    sb.append("    prefixBlock: ").append(toIndentedString(prefixBlock)).append("\n");
    sb.append("    sequentialBlockIndex: ").append(toIndentedString(sequentialBlockIndex)).append("\n");
    sb.append("    sequential: ").append(toIndentedString(sequential)).append("\n");
    sb.append("    divisionStrings: ").append(toIndentedString(divisionStrings)).append("\n");
    sb.append("    prefixCount: ").append(toIndentedString(prefixCount)).append("\n");
    sb.append("    bytes: ").append(toIndentedString(bytes)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    zero: ").append(toIndentedString(zero)).append("\n");
    sb.append("    upperBytes: ").append(toIndentedString(upperBytes)).append("\n");
    sb.append("    upperValue: ").append(toIndentedString(upperValue)).append("\n");
    sb.append("    max: ").append(toIndentedString(max)).append("\n");
    sb.append("    multiple: ").append(toIndentedString(multiple)).append("\n");
    sb.append("    divisionCount: ").append(toIndentedString(divisionCount)).append("\n");
    sb.append("    bytesPerSegment: ").append(toIndentedString(bytesPerSegment)).append("\n");
    sb.append("    bitsPerSegment: ").append(toIndentedString(bitsPerSegment)).append("\n");
    sb.append("    zeroSegments: ").append(toIndentedString(zeroSegments)).append("\n");
    sb.append("    zeroRangeSegments: ").append(toIndentedString(zeroRangeSegments)).append("\n");
    sb.append("    inetAddress: ").append(toIndentedString(inetAddress)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

