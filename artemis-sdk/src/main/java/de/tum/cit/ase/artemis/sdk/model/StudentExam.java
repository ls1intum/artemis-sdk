/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tum.cit.ase.artemis.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import de.tum.cit.ase.artemis.sdk.model.Exam;
import de.tum.cit.ase.artemis.sdk.model.ExamSession;
import de.tum.cit.ase.artemis.sdk.model.Exercise;
import de.tum.cit.ase.artemis.sdk.model.User;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import de.tum.cit.ase.artemis.sdk.JSON;


/**
 * StudentExam
 */
@JsonPropertyOrder({
  StudentExam.JSON_PROPERTY_ID,
  StudentExam.JSON_PROPERTY_CREATED_DATE,
  StudentExam.JSON_PROPERTY_SUBMITTED,
  StudentExam.JSON_PROPERTY_WORKING_TIME,
  StudentExam.JSON_PROPERTY_STARTED,
  StudentExam.JSON_PROPERTY_STARTED_DATE,
  StudentExam.JSON_PROPERTY_SUBMISSION_DATE,
  StudentExam.JSON_PROPERTY_TEST_RUN,
  StudentExam.JSON_PROPERTY_EXAM,
  StudentExam.JSON_PROPERTY_USER,
  StudentExam.JSON_PROPERTY_EXERCISES,
  StudentExam.JSON_PROPERTY_EXAM_SESSIONS,
  StudentExam.JSON_PROPERTY_ENDED
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-06-10T14:33:20.156837Z[Etc/UTC]")
public class StudentExam {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_CREATED_DATE = "createdDate";
  private OffsetDateTime createdDate;

  public static final String JSON_PROPERTY_SUBMITTED = "submitted";
  private Boolean submitted;

  public static final String JSON_PROPERTY_WORKING_TIME = "workingTime";
  private Integer workingTime;

  public static final String JSON_PROPERTY_STARTED = "started";
  private Boolean started;

  public static final String JSON_PROPERTY_STARTED_DATE = "startedDate";
  private OffsetDateTime startedDate;

  public static final String JSON_PROPERTY_SUBMISSION_DATE = "submissionDate";
  private OffsetDateTime submissionDate;

  public static final String JSON_PROPERTY_TEST_RUN = "testRun";
  private Boolean testRun;

  public static final String JSON_PROPERTY_EXAM = "exam";
  private Exam exam;

  public static final String JSON_PROPERTY_USER = "user";
  private User user;

  public static final String JSON_PROPERTY_EXERCISES = "exercises";
  private List<Exercise> exercises;

  public static final String JSON_PROPERTY_EXAM_SESSIONS = "examSessions";
  private Set<ExamSession> examSessions;

  public static final String JSON_PROPERTY_ENDED = "ended";
  private Boolean ended;

  public StudentExam() { 
  }

  public StudentExam id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Long id) {
    this.id = id;
  }


  public StudentExam createdDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
    return this;
  }

   /**
   * Get createdDate
   * @return createdDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }


  public StudentExam submitted(Boolean submitted) {
    this.submitted = submitted;
    return this;
  }

   /**
   * Get submitted
   * @return submitted
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBMITTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSubmitted() {
    return submitted;
  }


  @JsonProperty(JSON_PROPERTY_SUBMITTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubmitted(Boolean submitted) {
    this.submitted = submitted;
  }


  public StudentExam workingTime(Integer workingTime) {
    this.workingTime = workingTime;
    return this;
  }

   /**
   * Get workingTime
   * @return workingTime
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WORKING_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getWorkingTime() {
    return workingTime;
  }


  @JsonProperty(JSON_PROPERTY_WORKING_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWorkingTime(Integer workingTime) {
    this.workingTime = workingTime;
  }


  public StudentExam started(Boolean started) {
    this.started = started;
    return this;
  }

   /**
   * Get started
   * @return started
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STARTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getStarted() {
    return started;
  }


  @JsonProperty(JSON_PROPERTY_STARTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStarted(Boolean started) {
    this.started = started;
  }


  public StudentExam startedDate(OffsetDateTime startedDate) {
    this.startedDate = startedDate;
    return this;
  }

   /**
   * Get startedDate
   * @return startedDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STARTED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getStartedDate() {
    return startedDate;
  }


  @JsonProperty(JSON_PROPERTY_STARTED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartedDate(OffsetDateTime startedDate) {
    this.startedDate = startedDate;
  }


  public StudentExam submissionDate(OffsetDateTime submissionDate) {
    this.submissionDate = submissionDate;
    return this;
  }

   /**
   * Get submissionDate
   * @return submissionDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBMISSION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getSubmissionDate() {
    return submissionDate;
  }


  @JsonProperty(JSON_PROPERTY_SUBMISSION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubmissionDate(OffsetDateTime submissionDate) {
    this.submissionDate = submissionDate;
  }


  public StudentExam testRun(Boolean testRun) {
    this.testRun = testRun;
    return this;
  }

   /**
   * Get testRun
   * @return testRun
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TEST_RUN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getTestRun() {
    return testRun;
  }


  @JsonProperty(JSON_PROPERTY_TEST_RUN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTestRun(Boolean testRun) {
    this.testRun = testRun;
  }


  public StudentExam exam(Exam exam) {
    this.exam = exam;
    return this;
  }

   /**
   * Get exam
   * @return exam
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXAM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Exam getExam() {
    return exam;
  }


  @JsonProperty(JSON_PROPERTY_EXAM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExam(Exam exam) {
    this.exam = exam;
  }


  public StudentExam user(User user) {
    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public User getUser() {
    return user;
  }


  @JsonProperty(JSON_PROPERTY_USER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUser(User user) {
    this.user = user;
  }


  public StudentExam exercises(List<Exercise> exercises) {
    this.exercises = exercises;
    return this;
  }

  public StudentExam addExercisesItem(Exercise exercisesItem) {
    if (this.exercises == null) {
      this.exercises = new ArrayList<>();
    }
    this.exercises.add(exercisesItem);
    return this;
  }

   /**
   * Get exercises
   * @return exercises
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXERCISES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Exercise> getExercises() {
    return exercises;
  }


  @JsonProperty(JSON_PROPERTY_EXERCISES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExercises(List<Exercise> exercises) {
    this.exercises = exercises;
  }


  public StudentExam examSessions(Set<ExamSession> examSessions) {
    this.examSessions = examSessions;
    return this;
  }

  public StudentExam addExamSessionsItem(ExamSession examSessionsItem) {
    if (this.examSessions == null) {
      this.examSessions = new LinkedHashSet<>();
    }
    this.examSessions.add(examSessionsItem);
    return this;
  }

   /**
   * Get examSessions
   * @return examSessions
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXAM_SESSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<ExamSession> getExamSessions() {
    return examSessions;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_EXAM_SESSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExamSessions(Set<ExamSession> examSessions) {
    this.examSessions = examSessions;
  }


  public StudentExam ended(Boolean ended) {
    this.ended = ended;
    return this;
  }

   /**
   * Get ended
   * @return ended
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENDED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnded() {
    return ended;
  }


  @JsonProperty(JSON_PROPERTY_ENDED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnded(Boolean ended) {
    this.ended = ended;
  }


  /**
   * Return true if this StudentExam object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StudentExam studentExam = (StudentExam) o;
    return Objects.equals(this.id, studentExam.id) &&
        Objects.equals(this.createdDate, studentExam.createdDate) &&
        Objects.equals(this.submitted, studentExam.submitted) &&
        Objects.equals(this.workingTime, studentExam.workingTime) &&
        Objects.equals(this.started, studentExam.started) &&
        Objects.equals(this.startedDate, studentExam.startedDate) &&
        Objects.equals(this.submissionDate, studentExam.submissionDate) &&
        Objects.equals(this.testRun, studentExam.testRun) &&
        Objects.equals(this.exam, studentExam.exam) &&
        Objects.equals(this.user, studentExam.user) &&
        Objects.equals(this.exercises, studentExam.exercises) &&
        Objects.equals(this.examSessions, studentExam.examSessions) &&
        Objects.equals(this.ended, studentExam.ended);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, createdDate, submitted, workingTime, started, startedDate, submissionDate, testRun, exam, user, exercises, examSessions, ended);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StudentExam {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    submitted: ").append(toIndentedString(submitted)).append("\n");
    sb.append("    workingTime: ").append(toIndentedString(workingTime)).append("\n");
    sb.append("    started: ").append(toIndentedString(started)).append("\n");
    sb.append("    startedDate: ").append(toIndentedString(startedDate)).append("\n");
    sb.append("    submissionDate: ").append(toIndentedString(submissionDate)).append("\n");
    sb.append("    testRun: ").append(toIndentedString(testRun)).append("\n");
    sb.append("    exam: ").append(toIndentedString(exam)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    exercises: ").append(toIndentedString(exercises)).append("\n");
    sb.append("    examSessions: ").append(toIndentedString(examSessions)).append("\n");
    sb.append("    ended: ").append(toIndentedString(ended)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

