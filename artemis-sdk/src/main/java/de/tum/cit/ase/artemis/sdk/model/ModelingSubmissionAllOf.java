/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tum.cit.ase.artemis.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import de.tum.cit.ase.artemis.sdk.model.Participation;
import de.tum.cit.ase.artemis.sdk.model.Result;
import de.tum.cit.ase.artemis.sdk.model.SimilarElementCount;
import java.util.ArrayList;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import de.tum.cit.ase.artemis.sdk.JSON;


/**
 * ModelingSubmissionAllOf
 */
@JsonPropertyOrder({
  ModelingSubmissionAllOf.JSON_PROPERTY_PARTICIPATION,
  ModelingSubmissionAllOf.JSON_PROPERTY_MODEL,
  ModelingSubmissionAllOf.JSON_PROPERTY_EXPLANATION_TEXT,
  ModelingSubmissionAllOf.JSON_PROPERTY_SIMILAR_ELEMENT_COUNTS,
  ModelingSubmissionAllOf.JSON_PROPERTY_SIMILAR_ELEMENTS,
  ModelingSubmissionAllOf.JSON_PROPERTY_RESULTS
})
@JsonTypeName("ModelingSubmission_allOf")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-03-27T15:31:11.360443Z[Etc/UTC]")
public class ModelingSubmissionAllOf {
  public static final String JSON_PROPERTY_PARTICIPATION = "participation";
  private Participation participation;

  public static final String JSON_PROPERTY_MODEL = "model";
  private String model;

  public static final String JSON_PROPERTY_EXPLANATION_TEXT = "explanationText";
  private String explanationText;

  public static final String JSON_PROPERTY_SIMILAR_ELEMENT_COUNTS = "similarElementCounts";
  private Set<SimilarElementCount> similarElementCounts = new LinkedHashSet<>();

  public static final String JSON_PROPERTY_SIMILAR_ELEMENTS = "similarElements";
  private Set<SimilarElementCount> similarElements = new LinkedHashSet<>();

  public static final String JSON_PROPERTY_RESULTS = "results";
  private List<Result> results = new ArrayList<>();

  public ModelingSubmissionAllOf() { 
  }

  @JsonCreator
  public ModelingSubmissionAllOf(
    @JsonProperty(JSON_PROPERTY_RESULTS) List<Result> results
  ) {
    this();
    this.results = results;
  }

  public ModelingSubmissionAllOf participation(Participation participation) {
    this.participation = participation;
    return this;
  }

   /**
   * Get participation
   * @return participation
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PARTICIPATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Participation getParticipation() {
    return participation;
  }


  @JsonProperty(JSON_PROPERTY_PARTICIPATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setParticipation(Participation participation) {
    this.participation = participation;
  }


  public ModelingSubmissionAllOf model(String model) {
    this.model = model;
    return this;
  }

   /**
   * Get model
   * @return model
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MODEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getModel() {
    return model;
  }


  @JsonProperty(JSON_PROPERTY_MODEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setModel(String model) {
    this.model = model;
  }


  public ModelingSubmissionAllOf explanationText(String explanationText) {
    this.explanationText = explanationText;
    return this;
  }

   /**
   * Get explanationText
   * @return explanationText
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPLANATION_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExplanationText() {
    return explanationText;
  }


  @JsonProperty(JSON_PROPERTY_EXPLANATION_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExplanationText(String explanationText) {
    this.explanationText = explanationText;
  }


  public ModelingSubmissionAllOf similarElementCounts(Set<SimilarElementCount> similarElementCounts) {
    this.similarElementCounts = similarElementCounts;
    return this;
  }

  public ModelingSubmissionAllOf addSimilarElementCountsItem(SimilarElementCount similarElementCountsItem) {
    if (this.similarElementCounts == null) {
      this.similarElementCounts = new LinkedHashSet<>();
    }
    this.similarElementCounts.add(similarElementCountsItem);
    return this;
  }

   /**
   * Get similarElementCounts
   * @return similarElementCounts
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SIMILAR_ELEMENT_COUNTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<SimilarElementCount> getSimilarElementCounts() {
    return similarElementCounts;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_SIMILAR_ELEMENT_COUNTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSimilarElementCounts(Set<SimilarElementCount> similarElementCounts) {
    this.similarElementCounts = similarElementCounts;
  }


  public ModelingSubmissionAllOf similarElements(Set<SimilarElementCount> similarElements) {
    this.similarElements = similarElements;
    return this;
  }

  public ModelingSubmissionAllOf addSimilarElementsItem(SimilarElementCount similarElementsItem) {
    if (this.similarElements == null) {
      this.similarElements = new LinkedHashSet<>();
    }
    this.similarElements.add(similarElementsItem);
    return this;
  }

   /**
   * Get similarElements
   * @return similarElements
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SIMILAR_ELEMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<SimilarElementCount> getSimilarElements() {
    return similarElements;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_SIMILAR_ELEMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSimilarElements(Set<SimilarElementCount> similarElements) {
    this.similarElements = similarElements;
  }


   /**
   * Get results
   * @return results
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RESULTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Result> getResults() {
    return results;
  }




  /**
   * Return true if this ModelingSubmission_allOf object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelingSubmissionAllOf modelingSubmissionAllOf = (ModelingSubmissionAllOf) o;
    return Objects.equals(this.participation, modelingSubmissionAllOf.participation) &&
        Objects.equals(this.model, modelingSubmissionAllOf.model) &&
        Objects.equals(this.explanationText, modelingSubmissionAllOf.explanationText) &&
        Objects.equals(this.similarElementCounts, modelingSubmissionAllOf.similarElementCounts) &&
        Objects.equals(this.similarElements, modelingSubmissionAllOf.similarElements) &&
        Objects.equals(this.results, modelingSubmissionAllOf.results);
  }

  @Override
  public int hashCode() {
    return Objects.hash(participation, model, explanationText, similarElementCounts, similarElements, results);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelingSubmissionAllOf {\n");
    sb.append("    participation: ").append(toIndentedString(participation)).append("\n");
    sb.append("    model: ").append(toIndentedString(model)).append("\n");
    sb.append("    explanationText: ").append(toIndentedString(explanationText)).append("\n");
    sb.append("    similarElementCounts: ").append(toIndentedString(similarElementCounts)).append("\n");
    sb.append("    similarElements: ").append(toIndentedString(similarElements)).append("\n");
    sb.append("    results: ").append(toIndentedString(results)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

