/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tum.cit.ase.artemis.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import de.tum.cit.ase.artemis.sdk.model.ConversationUserDTO;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import de.tum.cit.ase.artemis.sdk.JSON;


/**
 * ConversationDTO
 */
@JsonPropertyOrder({
  ConversationDTO.JSON_PROPERTY_TYPE,
  ConversationDTO.JSON_PROPERTY_ID,
  ConversationDTO.JSON_PROPERTY_CREATION_DATE,
  ConversationDTO.JSON_PROPERTY_LAST_MESSAGE_DATE,
  ConversationDTO.JSON_PROPERTY_CREATOR,
  ConversationDTO.JSON_PROPERTY_LAST_READ_DATE,
  ConversationDTO.JSON_PROPERTY_UNREAD_MESSAGES_COUNT,
  ConversationDTO.JSON_PROPERTY_IS_FAVORITE,
  ConversationDTO.JSON_PROPERTY_IS_HIDDEN,
  ConversationDTO.JSON_PROPERTY_IS_CREATOR,
  ConversationDTO.JSON_PROPERTY_IS_MEMBER,
  ConversationDTO.JSON_PROPERTY_NUMBER_OF_MEMBERS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-04-06T13:57:19.283407Z[Etc/UTC]")
@JsonIgnoreProperties(
  value = "type", // ignore manually set type, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the type to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type", visible = true)
@JsonSubTypes({
  @JsonSubTypes.Type(value = ChannelDTO.class, name = "ChannelDTO"),
  @JsonSubTypes.Type(value = GroupChatDTO.class, name = "GroupChatDTO"),
  @JsonSubTypes.Type(value = OneToOneChatDTO.class, name = "OneToOneChatDTO"),
})

public class ConversationDTO {
  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_CREATION_DATE = "creationDate";
  private OffsetDateTime creationDate;

  public static final String JSON_PROPERTY_LAST_MESSAGE_DATE = "lastMessageDate";
  private OffsetDateTime lastMessageDate;

  public static final String JSON_PROPERTY_CREATOR = "creator";
  private ConversationUserDTO creator;

  public static final String JSON_PROPERTY_LAST_READ_DATE = "lastReadDate";
  private OffsetDateTime lastReadDate;

  public static final String JSON_PROPERTY_UNREAD_MESSAGES_COUNT = "unreadMessagesCount";
  private Long unreadMessagesCount;

  public static final String JSON_PROPERTY_IS_FAVORITE = "isFavorite";
  private Boolean isFavorite;

  public static final String JSON_PROPERTY_IS_HIDDEN = "isHidden";
  private Boolean isHidden;

  public static final String JSON_PROPERTY_IS_CREATOR = "isCreator";
  private Boolean isCreator;

  public static final String JSON_PROPERTY_IS_MEMBER = "isMember";
  private Boolean isMember;

  public static final String JSON_PROPERTY_NUMBER_OF_MEMBERS = "numberOfMembers";
  private Integer numberOfMembers;

  public ConversationDTO() { 
  }

  public ConversationDTO type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }


  public ConversationDTO id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Long id) {
    this.id = id;
  }


  public ConversationDTO creationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Get creationDate
   * @return creationDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getCreationDate() {
    return creationDate;
  }


  @JsonProperty(JSON_PROPERTY_CREATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }


  public ConversationDTO lastMessageDate(OffsetDateTime lastMessageDate) {
    this.lastMessageDate = lastMessageDate;
    return this;
  }

   /**
   * Get lastMessageDate
   * @return lastMessageDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_MESSAGE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getLastMessageDate() {
    return lastMessageDate;
  }


  @JsonProperty(JSON_PROPERTY_LAST_MESSAGE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastMessageDate(OffsetDateTime lastMessageDate) {
    this.lastMessageDate = lastMessageDate;
  }


  public ConversationDTO creator(ConversationUserDTO creator) {
    this.creator = creator;
    return this;
  }

   /**
   * Get creator
   * @return creator
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ConversationUserDTO getCreator() {
    return creator;
  }


  @JsonProperty(JSON_PROPERTY_CREATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreator(ConversationUserDTO creator) {
    this.creator = creator;
  }


  public ConversationDTO lastReadDate(OffsetDateTime lastReadDate) {
    this.lastReadDate = lastReadDate;
    return this;
  }

   /**
   * Get lastReadDate
   * @return lastReadDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_READ_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getLastReadDate() {
    return lastReadDate;
  }


  @JsonProperty(JSON_PROPERTY_LAST_READ_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastReadDate(OffsetDateTime lastReadDate) {
    this.lastReadDate = lastReadDate;
  }


  public ConversationDTO unreadMessagesCount(Long unreadMessagesCount) {
    this.unreadMessagesCount = unreadMessagesCount;
    return this;
  }

   /**
   * Get unreadMessagesCount
   * @return unreadMessagesCount
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UNREAD_MESSAGES_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getUnreadMessagesCount() {
    return unreadMessagesCount;
  }


  @JsonProperty(JSON_PROPERTY_UNREAD_MESSAGES_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUnreadMessagesCount(Long unreadMessagesCount) {
    this.unreadMessagesCount = unreadMessagesCount;
  }


  public ConversationDTO isFavorite(Boolean isFavorite) {
    this.isFavorite = isFavorite;
    return this;
  }

   /**
   * Get isFavorite
   * @return isFavorite
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_FAVORITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsFavorite() {
    return isFavorite;
  }


  @JsonProperty(JSON_PROPERTY_IS_FAVORITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsFavorite(Boolean isFavorite) {
    this.isFavorite = isFavorite;
  }


  public ConversationDTO isHidden(Boolean isHidden) {
    this.isHidden = isHidden;
    return this;
  }

   /**
   * Get isHidden
   * @return isHidden
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_HIDDEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsHidden() {
    return isHidden;
  }


  @JsonProperty(JSON_PROPERTY_IS_HIDDEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsHidden(Boolean isHidden) {
    this.isHidden = isHidden;
  }


  public ConversationDTO isCreator(Boolean isCreator) {
    this.isCreator = isCreator;
    return this;
  }

   /**
   * Get isCreator
   * @return isCreator
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_CREATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsCreator() {
    return isCreator;
  }


  @JsonProperty(JSON_PROPERTY_IS_CREATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsCreator(Boolean isCreator) {
    this.isCreator = isCreator;
  }


  public ConversationDTO isMember(Boolean isMember) {
    this.isMember = isMember;
    return this;
  }

   /**
   * Get isMember
   * @return isMember
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_MEMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsMember() {
    return isMember;
  }


  @JsonProperty(JSON_PROPERTY_IS_MEMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsMember(Boolean isMember) {
    this.isMember = isMember;
  }


  public ConversationDTO numberOfMembers(Integer numberOfMembers) {
    this.numberOfMembers = numberOfMembers;
    return this;
  }

   /**
   * Get numberOfMembers
   * @return numberOfMembers
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NUMBER_OF_MEMBERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getNumberOfMembers() {
    return numberOfMembers;
  }


  @JsonProperty(JSON_PROPERTY_NUMBER_OF_MEMBERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNumberOfMembers(Integer numberOfMembers) {
    this.numberOfMembers = numberOfMembers;
  }


  /**
   * Return true if this ConversationDTO object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConversationDTO conversationDTO = (ConversationDTO) o;
    return Objects.equals(this.type, conversationDTO.type) &&
        Objects.equals(this.id, conversationDTO.id) &&
        Objects.equals(this.creationDate, conversationDTO.creationDate) &&
        Objects.equals(this.lastMessageDate, conversationDTO.lastMessageDate) &&
        Objects.equals(this.creator, conversationDTO.creator) &&
        Objects.equals(this.lastReadDate, conversationDTO.lastReadDate) &&
        Objects.equals(this.unreadMessagesCount, conversationDTO.unreadMessagesCount) &&
        Objects.equals(this.isFavorite, conversationDTO.isFavorite) &&
        Objects.equals(this.isHidden, conversationDTO.isHidden) &&
        Objects.equals(this.isCreator, conversationDTO.isCreator) &&
        Objects.equals(this.isMember, conversationDTO.isMember) &&
        Objects.equals(this.numberOfMembers, conversationDTO.numberOfMembers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, id, creationDate, lastMessageDate, creator, lastReadDate, unreadMessagesCount, isFavorite, isHidden, isCreator, isMember, numberOfMembers);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConversationDTO {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    lastMessageDate: ").append(toIndentedString(lastMessageDate)).append("\n");
    sb.append("    creator: ").append(toIndentedString(creator)).append("\n");
    sb.append("    lastReadDate: ").append(toIndentedString(lastReadDate)).append("\n");
    sb.append("    unreadMessagesCount: ").append(toIndentedString(unreadMessagesCount)).append("\n");
    sb.append("    isFavorite: ").append(toIndentedString(isFavorite)).append("\n");
    sb.append("    isHidden: ").append(toIndentedString(isHidden)).append("\n");
    sb.append("    isCreator: ").append(toIndentedString(isCreator)).append("\n");
    sb.append("    isMember: ").append(toIndentedString(isMember)).append("\n");
    sb.append("    numberOfMembers: ").append(toIndentedString(numberOfMembers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  static {
    // Initialize and register the discriminator mappings.
    Map<String, Class<?>> mappings = new HashMap<>();
    mappings.put("ChannelDTO", ChannelDTO.class);
    mappings.put("GroupChatDTO", GroupChatDTO.class);
    mappings.put("OneToOneChatDTO", OneToOneChatDTO.class);
    mappings.put("ConversationDTO", ConversationDTO.class);
    JSON.registerDiscriminator(ConversationDTO.class, "type", mappings);
  }
}

