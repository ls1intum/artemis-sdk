/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tum.cit.ase.artemis.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import de.tum.cit.ase.artemis.sdk.model.PlagiarismMatch;
import de.tum.cit.ase.artemis.sdk.model.PlagiarismResultTextSubmissionElement;
import de.tum.cit.ase.artemis.sdk.model.PlagiarismSubmissionTextSubmissionElement;
import java.util.LinkedHashSet;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import de.tum.cit.ase.artemis.sdk.JSON;


/**
 * PlagiarismComparisonTextSubmissionElement
 */
@JsonPropertyOrder({
  PlagiarismComparisonTextSubmissionElement.JSON_PROPERTY_ID,
  PlagiarismComparisonTextSubmissionElement.JSON_PROPERTY_PLAGIARISM_RESULT,
  PlagiarismComparisonTextSubmissionElement.JSON_PROPERTY_SUBMISSION_A,
  PlagiarismComparisonTextSubmissionElement.JSON_PROPERTY_SUBMISSION_B,
  PlagiarismComparisonTextSubmissionElement.JSON_PROPERTY_MATCHES,
  PlagiarismComparisonTextSubmissionElement.JSON_PROPERTY_SIMILARITY,
  PlagiarismComparisonTextSubmissionElement.JSON_PROPERTY_STATUS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-03-27T15:31:11.360443Z[Etc/UTC]")
public class PlagiarismComparisonTextSubmissionElement {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_PLAGIARISM_RESULT = "plagiarismResult";
  private PlagiarismResultTextSubmissionElement plagiarismResult;

  public static final String JSON_PROPERTY_SUBMISSION_A = "submissionA";
  private PlagiarismSubmissionTextSubmissionElement submissionA;

  public static final String JSON_PROPERTY_SUBMISSION_B = "submissionB";
  private PlagiarismSubmissionTextSubmissionElement submissionB;

  public static final String JSON_PROPERTY_MATCHES = "matches";
  private Set<PlagiarismMatch> matches = new LinkedHashSet<>();

  public static final String JSON_PROPERTY_SIMILARITY = "similarity";
  private Double similarity;

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    CONFIRMED("CONFIRMED"),
    
    DENIED("DENIED"),
    
    NONE("NONE");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  public PlagiarismComparisonTextSubmissionElement() { 
  }

  public PlagiarismComparisonTextSubmissionElement id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Long id) {
    this.id = id;
  }


  public PlagiarismComparisonTextSubmissionElement plagiarismResult(PlagiarismResultTextSubmissionElement plagiarismResult) {
    this.plagiarismResult = plagiarismResult;
    return this;
  }

   /**
   * Get plagiarismResult
   * @return plagiarismResult
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PLAGIARISM_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PlagiarismResultTextSubmissionElement getPlagiarismResult() {
    return plagiarismResult;
  }


  @JsonProperty(JSON_PROPERTY_PLAGIARISM_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPlagiarismResult(PlagiarismResultTextSubmissionElement plagiarismResult) {
    this.plagiarismResult = plagiarismResult;
  }


  public PlagiarismComparisonTextSubmissionElement submissionA(PlagiarismSubmissionTextSubmissionElement submissionA) {
    this.submissionA = submissionA;
    return this;
  }

   /**
   * Get submissionA
   * @return submissionA
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBMISSION_A)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PlagiarismSubmissionTextSubmissionElement getSubmissionA() {
    return submissionA;
  }


  @JsonProperty(JSON_PROPERTY_SUBMISSION_A)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubmissionA(PlagiarismSubmissionTextSubmissionElement submissionA) {
    this.submissionA = submissionA;
  }


  public PlagiarismComparisonTextSubmissionElement submissionB(PlagiarismSubmissionTextSubmissionElement submissionB) {
    this.submissionB = submissionB;
    return this;
  }

   /**
   * Get submissionB
   * @return submissionB
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBMISSION_B)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PlagiarismSubmissionTextSubmissionElement getSubmissionB() {
    return submissionB;
  }


  @JsonProperty(JSON_PROPERTY_SUBMISSION_B)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubmissionB(PlagiarismSubmissionTextSubmissionElement submissionB) {
    this.submissionB = submissionB;
  }


  public PlagiarismComparisonTextSubmissionElement matches(Set<PlagiarismMatch> matches) {
    this.matches = matches;
    return this;
  }

  public PlagiarismComparisonTextSubmissionElement addMatchesItem(PlagiarismMatch matchesItem) {
    if (this.matches == null) {
      this.matches = new LinkedHashSet<>();
    }
    this.matches.add(matchesItem);
    return this;
  }

   /**
   * Get matches
   * @return matches
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MATCHES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<PlagiarismMatch> getMatches() {
    return matches;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_MATCHES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMatches(Set<PlagiarismMatch> matches) {
    this.matches = matches;
  }


  public PlagiarismComparisonTextSubmissionElement similarity(Double similarity) {
    this.similarity = similarity;
    return this;
  }

   /**
   * Get similarity
   * @return similarity
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SIMILARITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getSimilarity() {
    return similarity;
  }


  @JsonProperty(JSON_PROPERTY_SIMILARITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSimilarity(Double similarity) {
    this.similarity = similarity;
  }


  public PlagiarismComparisonTextSubmissionElement status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  /**
   * Return true if this PlagiarismComparisonTextSubmissionElement object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PlagiarismComparisonTextSubmissionElement plagiarismComparisonTextSubmissionElement = (PlagiarismComparisonTextSubmissionElement) o;
    return Objects.equals(this.id, plagiarismComparisonTextSubmissionElement.id) &&
        Objects.equals(this.plagiarismResult, plagiarismComparisonTextSubmissionElement.plagiarismResult) &&
        Objects.equals(this.submissionA, plagiarismComparisonTextSubmissionElement.submissionA) &&
        Objects.equals(this.submissionB, plagiarismComparisonTextSubmissionElement.submissionB) &&
        Objects.equals(this.matches, plagiarismComparisonTextSubmissionElement.matches) &&
        Objects.equals(this.similarity, plagiarismComparisonTextSubmissionElement.similarity) &&
        Objects.equals(this.status, plagiarismComparisonTextSubmissionElement.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, plagiarismResult, submissionA, submissionB, matches, similarity, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PlagiarismComparisonTextSubmissionElement {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    plagiarismResult: ").append(toIndentedString(plagiarismResult)).append("\n");
    sb.append("    submissionA: ").append(toIndentedString(submissionA)).append("\n");
    sb.append("    submissionB: ").append(toIndentedString(submissionB)).append("\n");
    sb.append("    matches: ").append(toIndentedString(matches)).append("\n");
    sb.append("    similarity: ").append(toIndentedString(similarity)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

