/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tum.cit.ase.artemis.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import de.tum.cit.ase.artemis.sdk.model.Attachment;
import de.tum.cit.ase.artemis.sdk.model.Course;
import de.tum.cit.ase.artemis.sdk.model.LectureUnit;
import de.tum.cit.ase.artemis.sdk.model.Post;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import de.tum.cit.ase.artemis.sdk.JSON;


/**
 * Lecture
 */
@JsonPropertyOrder({
  Lecture.JSON_PROPERTY_ID,
  Lecture.JSON_PROPERTY_TITLE,
  Lecture.JSON_PROPERTY_DESCRIPTION,
  Lecture.JSON_PROPERTY_START_DATE,
  Lecture.JSON_PROPERTY_END_DATE,
  Lecture.JSON_PROPERTY_ATTACHMENTS,
  Lecture.JSON_PROPERTY_LECTURE_UNITS,
  Lecture.JSON_PROPERTY_POSTS,
  Lecture.JSON_PROPERTY_COURSE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-03-31T15:20:01.980101Z[Etc/UTC]")
public class Lecture {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_TITLE = "title";
  private String title;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_START_DATE = "startDate";
  private OffsetDateTime startDate;

  public static final String JSON_PROPERTY_END_DATE = "endDate";
  private OffsetDateTime endDate;

  public static final String JSON_PROPERTY_ATTACHMENTS = "attachments";
  private Set<Attachment> attachments;

  public static final String JSON_PROPERTY_LECTURE_UNITS = "lectureUnits";
  private List<LectureUnit> lectureUnits;

  public static final String JSON_PROPERTY_POSTS = "posts";
  private Set<Post> posts;

  public static final String JSON_PROPERTY_COURSE = "course";
  private Course course;

  public Lecture() { 
  }

  public Lecture id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Long id) {
    this.id = id;
  }


  public Lecture title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTitle() {
    return title;
  }


  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTitle(String title) {
    this.title = title;
  }


  public Lecture description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public Lecture startDate(OffsetDateTime startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getStartDate() {
    return startDate;
  }


  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = startDate;
  }


  public Lecture endDate(OffsetDateTime endDate) {
    this.endDate = endDate;
    return this;
  }

   /**
   * Get endDate
   * @return endDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getEndDate() {
    return endDate;
  }


  @JsonProperty(JSON_PROPERTY_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndDate(OffsetDateTime endDate) {
    this.endDate = endDate;
  }


  public Lecture attachments(Set<Attachment> attachments) {
    this.attachments = attachments;
    return this;
  }

  public Lecture addAttachmentsItem(Attachment attachmentsItem) {
    if (this.attachments == null) {
      this.attachments = new LinkedHashSet<>();
    }
    this.attachments.add(attachmentsItem);
    return this;
  }

   /**
   * Get attachments
   * @return attachments
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ATTACHMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<Attachment> getAttachments() {
    return attachments;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_ATTACHMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAttachments(Set<Attachment> attachments) {
    this.attachments = attachments;
  }


  public Lecture lectureUnits(List<LectureUnit> lectureUnits) {
    this.lectureUnits = lectureUnits;
    return this;
  }

  public Lecture addLectureUnitsItem(LectureUnit lectureUnitsItem) {
    if (this.lectureUnits == null) {
      this.lectureUnits = new ArrayList<>();
    }
    this.lectureUnits.add(lectureUnitsItem);
    return this;
  }

   /**
   * Get lectureUnits
   * @return lectureUnits
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LECTURE_UNITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<LectureUnit> getLectureUnits() {
    return lectureUnits;
  }


  @JsonProperty(JSON_PROPERTY_LECTURE_UNITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLectureUnits(List<LectureUnit> lectureUnits) {
    this.lectureUnits = lectureUnits;
  }


  public Lecture posts(Set<Post> posts) {
    this.posts = posts;
    return this;
  }

  public Lecture addPostsItem(Post postsItem) {
    if (this.posts == null) {
      this.posts = new LinkedHashSet<>();
    }
    this.posts.add(postsItem);
    return this;
  }

   /**
   * Get posts
   * @return posts
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POSTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<Post> getPosts() {
    return posts;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_POSTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPosts(Set<Post> posts) {
    this.posts = posts;
  }


  public Lecture course(Course course) {
    this.course = course;
    return this;
  }

   /**
   * Get course
   * @return course
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COURSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Course getCourse() {
    return course;
  }


  @JsonProperty(JSON_PROPERTY_COURSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCourse(Course course) {
    this.course = course;
  }


  /**
   * Return true if this Lecture object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Lecture lecture = (Lecture) o;
    return Objects.equals(this.id, lecture.id) &&
        Objects.equals(this.title, lecture.title) &&
        Objects.equals(this.description, lecture.description) &&
        Objects.equals(this.startDate, lecture.startDate) &&
        Objects.equals(this.endDate, lecture.endDate) &&
        Objects.equals(this.attachments, lecture.attachments) &&
        Objects.equals(this.lectureUnits, lecture.lectureUnits) &&
        Objects.equals(this.posts, lecture.posts) &&
        Objects.equals(this.course, lecture.course);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, title, description, startDate, endDate, attachments, lectureUnits, posts, course);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Lecture {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("    lectureUnits: ").append(toIndentedString(lectureUnits)).append("\n");
    sb.append("    posts: ").append(toIndentedString(posts)).append("\n");
    sb.append("    course: ").append(toIndentedString(course)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

