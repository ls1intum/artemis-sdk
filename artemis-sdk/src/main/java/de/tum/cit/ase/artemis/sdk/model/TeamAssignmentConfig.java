/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tum.cit.ase.artemis.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import de.tum.cit.ase.artemis.sdk.JSON;


/**
 * TeamAssignmentConfig
 */
@JsonPropertyOrder({
  TeamAssignmentConfig.JSON_PROPERTY_ID,
  TeamAssignmentConfig.JSON_PROPERTY_MIN_TEAM_SIZE,
  TeamAssignmentConfig.JSON_PROPERTY_MAX_TEAM_SIZE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-03-30T13:56:33.435320Z[Etc/UTC]")
public class TeamAssignmentConfig {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_MIN_TEAM_SIZE = "minTeamSize";
  private Integer minTeamSize;

  public static final String JSON_PROPERTY_MAX_TEAM_SIZE = "maxTeamSize";
  private Integer maxTeamSize;

  public TeamAssignmentConfig() { 
  }

  public TeamAssignmentConfig id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Long id) {
    this.id = id;
  }


  public TeamAssignmentConfig minTeamSize(Integer minTeamSize) {
    this.minTeamSize = minTeamSize;
    return this;
  }

   /**
   * Get minTeamSize
   * minimum: 1
   * @return minTeamSize
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MIN_TEAM_SIZE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getMinTeamSize() {
    return minTeamSize;
  }


  @JsonProperty(JSON_PROPERTY_MIN_TEAM_SIZE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMinTeamSize(Integer minTeamSize) {
    this.minTeamSize = minTeamSize;
  }


  public TeamAssignmentConfig maxTeamSize(Integer maxTeamSize) {
    this.maxTeamSize = maxTeamSize;
    return this;
  }

   /**
   * Get maxTeamSize
   * minimum: 1
   * @return maxTeamSize
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAX_TEAM_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMaxTeamSize() {
    return maxTeamSize;
  }


  @JsonProperty(JSON_PROPERTY_MAX_TEAM_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxTeamSize(Integer maxTeamSize) {
    this.maxTeamSize = maxTeamSize;
  }


  /**
   * Return true if this TeamAssignmentConfig object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TeamAssignmentConfig teamAssignmentConfig = (TeamAssignmentConfig) o;
    return Objects.equals(this.id, teamAssignmentConfig.id) &&
        Objects.equals(this.minTeamSize, teamAssignmentConfig.minTeamSize) &&
        Objects.equals(this.maxTeamSize, teamAssignmentConfig.maxTeamSize);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, minTeamSize, maxTeamSize);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TeamAssignmentConfig {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    minTeamSize: ").append(toIndentedString(minTeamSize)).append("\n");
    sb.append("    maxTeamSize: ").append(toIndentedString(maxTeamSize)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

