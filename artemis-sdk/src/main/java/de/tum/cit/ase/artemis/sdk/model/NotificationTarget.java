/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tum.cit.ase.artemis.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import de.tum.cit.ase.artemis.sdk.JSON;


/**
 * NotificationTarget
 */
@JsonPropertyOrder({
  NotificationTarget.JSON_PROPERTY_MESSAGE,
  NotificationTarget.JSON_PROPERTY_ENTITY,
  NotificationTarget.JSON_PROPERTY_MAIN_PAGE,
  NotificationTarget.JSON_PROPERTY_PROBLEM_STATEMENT,
  NotificationTarget.JSON_PROPERTY_ID,
  NotificationTarget.JSON_PROPERTY_COURSE,
  NotificationTarget.JSON_PROPERTY_EXERCISE,
  NotificationTarget.JSON_PROPERTY_EXAM,
  NotificationTarget.JSON_PROPERTY_LECTURE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-03-02T15:54:21.223567Z[Etc/UTC]")
public class NotificationTarget {
  public static final String JSON_PROPERTY_MESSAGE = "message";
  private String message;

  public static final String JSON_PROPERTY_ENTITY = "entity";
  private String entity;

  public static final String JSON_PROPERTY_MAIN_PAGE = "mainPage";
  private String mainPage;

  public static final String JSON_PROPERTY_PROBLEM_STATEMENT = "problemStatement";
  private String problemStatement;

  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_COURSE = "course";
  private Long course;

  public static final String JSON_PROPERTY_EXERCISE = "exercise";
  private Long exercise;

  public static final String JSON_PROPERTY_EXAM = "exam";
  private Long exam;

  public static final String JSON_PROPERTY_LECTURE = "lecture";
  private Long lecture;

  public NotificationTarget() { 
  }

  public NotificationTarget message(String message) {
    this.message = message;
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMessage() {
    return message;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMessage(String message) {
    this.message = message;
  }


  public NotificationTarget entity(String entity) {
    this.entity = entity;
    return this;
  }

   /**
   * Get entity
   * @return entity
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEntity() {
    return entity;
  }


  @JsonProperty(JSON_PROPERTY_ENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEntity(String entity) {
    this.entity = entity;
  }


  public NotificationTarget mainPage(String mainPage) {
    this.mainPage = mainPage;
    return this;
  }

   /**
   * Get mainPage
   * @return mainPage
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAIN_PAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMainPage() {
    return mainPage;
  }


  @JsonProperty(JSON_PROPERTY_MAIN_PAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMainPage(String mainPage) {
    this.mainPage = mainPage;
  }


  public NotificationTarget problemStatement(String problemStatement) {
    this.problemStatement = problemStatement;
    return this;
  }

   /**
   * Get problemStatement
   * @return problemStatement
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROBLEM_STATEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProblemStatement() {
    return problemStatement;
  }


  @JsonProperty(JSON_PROPERTY_PROBLEM_STATEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProblemStatement(String problemStatement) {
    this.problemStatement = problemStatement;
  }


  public NotificationTarget id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Long id) {
    this.id = id;
  }


  public NotificationTarget course(Long course) {
    this.course = course;
    return this;
  }

   /**
   * Get course
   * @return course
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COURSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getCourse() {
    return course;
  }


  @JsonProperty(JSON_PROPERTY_COURSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCourse(Long course) {
    this.course = course;
  }


  public NotificationTarget exercise(Long exercise) {
    this.exercise = exercise;
    return this;
  }

   /**
   * Get exercise
   * @return exercise
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXERCISE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getExercise() {
    return exercise;
  }


  @JsonProperty(JSON_PROPERTY_EXERCISE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExercise(Long exercise) {
    this.exercise = exercise;
  }


  public NotificationTarget exam(Long exam) {
    this.exam = exam;
    return this;
  }

   /**
   * Get exam
   * @return exam
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXAM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getExam() {
    return exam;
  }


  @JsonProperty(JSON_PROPERTY_EXAM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExam(Long exam) {
    this.exam = exam;
  }


  public NotificationTarget lecture(Long lecture) {
    this.lecture = lecture;
    return this;
  }

   /**
   * Get lecture
   * @return lecture
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LECTURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getLecture() {
    return lecture;
  }


  @JsonProperty(JSON_PROPERTY_LECTURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLecture(Long lecture) {
    this.lecture = lecture;
  }


  /**
   * Return true if this NotificationTarget object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NotificationTarget notificationTarget = (NotificationTarget) o;
    return Objects.equals(this.message, notificationTarget.message) &&
        Objects.equals(this.entity, notificationTarget.entity) &&
        Objects.equals(this.mainPage, notificationTarget.mainPage) &&
        Objects.equals(this.problemStatement, notificationTarget.problemStatement) &&
        Objects.equals(this.id, notificationTarget.id) &&
        Objects.equals(this.course, notificationTarget.course) &&
        Objects.equals(this.exercise, notificationTarget.exercise) &&
        Objects.equals(this.exam, notificationTarget.exam) &&
        Objects.equals(this.lecture, notificationTarget.lecture);
  }

  @Override
  public int hashCode() {
    return Objects.hash(message, entity, mainPage, problemStatement, id, course, exercise, exam, lecture);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NotificationTarget {\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    entity: ").append(toIndentedString(entity)).append("\n");
    sb.append("    mainPage: ").append(toIndentedString(mainPage)).append("\n");
    sb.append("    problemStatement: ").append(toIndentedString(problemStatement)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    course: ").append(toIndentedString(course)).append("\n");
    sb.append("    exercise: ").append(toIndentedString(exercise)).append("\n");
    sb.append("    exam: ").append(toIndentedString(exam)).append("\n");
    sb.append("    lecture: ").append(toIndentedString(lecture)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

