/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tum.cit.ase.artemis.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import de.tum.cit.ase.artemis.sdk.model.IPAddressNetworkObjectObjectObjectObjectObject;
import de.tum.cit.ase.artemis.sdk.model.IPAddressSection;
import de.tum.cit.ase.artemis.sdk.model.IPAddressSegment;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import de.tum.cit.ase.artemis.sdk.JSON;


/**
 * IPAddress
 */
@JsonPropertyOrder({
  IPAddress.JSON_PROPERTY_LOOPBACK,
  IPAddress.JSON_PROPERTY_NETWORK_PREFIX_LENGTH,
  IPAddress.JSON_PROPERTY_LOWER,
  IPAddress.JSON_PROPERTY_UPPER,
  IPAddress.JSON_PROPERTY_LOCAL,
  IPAddress.JSON_PROPERTY_IPV4,
  IPAddress.JSON_PROPERTY_NETWORK,
  IPAddress.JSON_PROPERTY_SECTION,
  IPAddress.JSON_PROPERTY_MAX_SEGMENT_VALUE,
  IPAddress.JSON_PROPERTY_NON_ZERO_HOST_COUNT,
  IPAddress.JSON_PROPERTY_BYTES_PER_SEGMENT,
  IPAddress.JSON_PROPERTY_BITS_PER_SEGMENT,
  IPAddress.JSON_PROPERTY_BYTE_COUNT,
  IPAddress.JSON_PROPERTY_LOWER_NON_ZERO_HOST,
  IPAddress.JSON_PROPERTY_SEQUENTIAL_BLOCK_COUNT,
  IPAddress.JSON_PROPERTY_ITERABLE,
  IPAddress.JSON_PROPERTY_IPADDRESS,
  IPAddress.JSON_PROPERTY_IPVERSION,
  IPAddress.JSON_PROPERTY_IPV4_CONVERTIBLE,
  IPAddress.JSON_PROPERTY_IPV6_CONVERTIBLE,
  IPAddress.JSON_PROPERTY_LINK_LOCAL,
  IPAddress.JSON_PROPERTY_UNSPECIFIED,
  IPAddress.JSON_PROPERTY_ANY_LOCAL,
  IPAddress.JSON_PROPERTY_ZERO_HOST,
  IPAddress.JSON_PROPERTY_HOST_MASK,
  IPAddress.JSON_PROPERTY_NETWORK_MASK,
  IPAddress.JSON_PROPERTY_SINGLE_NETWORK,
  IPAddress.JSON_PROPERTY_PREFIX_LENGTH,
  IPAddress.JSON_PROPERTY_IPV6,
  IPAddress.JSON_PROPERTY_HOST_SECTION,
  IPAddress.JSON_PROPERTY_NETWORK_SECTION,
  IPAddress.JSON_PROPERTY_SEGMENTS,
  IPAddress.JSON_PROPERTY_COUNT,
  IPAddress.JSON_PROPERTY_BIT_COUNT,
  IPAddress.JSON_PROPERTY_PREFIXED,
  IPAddress.JSON_PROPERTY_PREFIX_BLOCK,
  IPAddress.JSON_PROPERTY_SEQUENTIAL_BLOCK_INDEX,
  IPAddress.JSON_PROPERTY_SEQUENTIAL,
  IPAddress.JSON_PROPERTY_SINGLE_PREFIX_BLOCK,
  IPAddress.JSON_PROPERTY_DIVISION_STRINGS,
  IPAddress.JSON_PROPERTY_PREFIX_COUNT,
  IPAddress.JSON_PROPERTY_BYTES,
  IPAddress.JSON_PROPERTY_VALUE,
  IPAddress.JSON_PROPERTY_ZERO,
  IPAddress.JSON_PROPERTY_PREFIX_LENGTH_FOR_SINGLE_BLOCK,
  IPAddress.JSON_PROPERTY_MIN_PREFIX_LENGTH_FOR_BLOCK,
  IPAddress.JSON_PROPERTY_FULL_RANGE,
  IPAddress.JSON_PROPERTY_UPPER_BYTES,
  IPAddress.JSON_PROPERTY_UPPER_VALUE,
  IPAddress.JSON_PROPERTY_MAX,
  IPAddress.JSON_PROPERTY_MULTIPLE,
  IPAddress.JSON_PROPERTY_DIVISION_COUNT,
  IPAddress.JSON_PROPERTY_SEGMENT_COUNT,
  IPAddress.JSON_PROPERTY_SEGMENT_STRINGS,
  IPAddress.JSON_PROPERTY_MACADDRESS,
  IPAddress.JSON_PROPERTY_MULTICAST
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-03-31T15:20:01.980101Z[Etc/UTC]")
public class IPAddress {
  public static final String JSON_PROPERTY_LOOPBACK = "loopback";
  private Boolean loopback;

  public static final String JSON_PROPERTY_NETWORK_PREFIX_LENGTH = "networkPrefixLength";
  private Integer networkPrefixLength;

  public static final String JSON_PROPERTY_LOWER = "lower";
  private IPAddress lower;

  public static final String JSON_PROPERTY_UPPER = "upper";
  private IPAddress upper;

  public static final String JSON_PROPERTY_LOCAL = "local";
  private Boolean local;

  public static final String JSON_PROPERTY_IPV4 = "ipv4";
  private Boolean ipv4;

  public static final String JSON_PROPERTY_NETWORK = "network";
  private IPAddressNetworkObjectObjectObjectObjectObject network;

  public static final String JSON_PROPERTY_SECTION = "section";
  private IPAddressSection section;

  public static final String JSON_PROPERTY_MAX_SEGMENT_VALUE = "maxSegmentValue";
  private Integer maxSegmentValue;

  public static final String JSON_PROPERTY_NON_ZERO_HOST_COUNT = "nonZeroHostCount";
  private Integer nonZeroHostCount;

  public static final String JSON_PROPERTY_BYTES_PER_SEGMENT = "bytesPerSegment";
  private Integer bytesPerSegment;

  public static final String JSON_PROPERTY_BITS_PER_SEGMENT = "bitsPerSegment";
  private Integer bitsPerSegment;

  public static final String JSON_PROPERTY_BYTE_COUNT = "byteCount";
  private Integer byteCount;

  public static final String JSON_PROPERTY_LOWER_NON_ZERO_HOST = "lowerNonZeroHost";
  private IPAddress lowerNonZeroHost;

  public static final String JSON_PROPERTY_SEQUENTIAL_BLOCK_COUNT = "sequentialBlockCount";
  private Integer sequentialBlockCount;

  public static final String JSON_PROPERTY_ITERABLE = "iterable";
  private Object iterable;

  public static final String JSON_PROPERTY_IPADDRESS = "ipaddress";
  private Boolean ipaddress;

  /**
   * Gets or Sets ipversion
   */
  public enum IpversionEnum {
    IPV4("IPv4"),
    
    IPV6("IPv6");

    private String value;

    IpversionEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static IpversionEnum fromValue(String value) {
      for (IpversionEnum b : IpversionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_IPVERSION = "ipversion";
  private IpversionEnum ipversion;

  public static final String JSON_PROPERTY_IPV4_CONVERTIBLE = "ipv4Convertible";
  private Boolean ipv4Convertible;

  public static final String JSON_PROPERTY_IPV6_CONVERTIBLE = "ipv6Convertible";
  private Boolean ipv6Convertible;

  public static final String JSON_PROPERTY_LINK_LOCAL = "linkLocal";
  private Boolean linkLocal;

  public static final String JSON_PROPERTY_UNSPECIFIED = "unspecified";
  private Boolean unspecified;

  public static final String JSON_PROPERTY_ANY_LOCAL = "anyLocal";
  private Boolean anyLocal;

  public static final String JSON_PROPERTY_ZERO_HOST = "zeroHost";
  private Boolean zeroHost;

  public static final String JSON_PROPERTY_HOST_MASK = "hostMask";
  private IPAddress hostMask;

  public static final String JSON_PROPERTY_NETWORK_MASK = "networkMask";
  private IPAddress networkMask;

  public static final String JSON_PROPERTY_SINGLE_NETWORK = "singleNetwork";
  private Boolean singleNetwork;

  public static final String JSON_PROPERTY_PREFIX_LENGTH = "prefixLength";
  private Integer prefixLength;

  public static final String JSON_PROPERTY_IPV6 = "ipv6";
  private Boolean ipv6;

  public static final String JSON_PROPERTY_HOST_SECTION = "hostSection";
  private IPAddressSection hostSection;

  public static final String JSON_PROPERTY_NETWORK_SECTION = "networkSection";
  private IPAddressSection networkSection;

  public static final String JSON_PROPERTY_SEGMENTS = "segments";
  private List<IPAddressSegment> segments;

  public static final String JSON_PROPERTY_COUNT = "count";
  private Integer count;

  public static final String JSON_PROPERTY_BIT_COUNT = "bitCount";
  private Integer bitCount;

  public static final String JSON_PROPERTY_PREFIXED = "prefixed";
  private Boolean prefixed;

  public static final String JSON_PROPERTY_PREFIX_BLOCK = "prefixBlock";
  private Boolean prefixBlock;

  public static final String JSON_PROPERTY_SEQUENTIAL_BLOCK_INDEX = "sequentialBlockIndex";
  private Integer sequentialBlockIndex;

  public static final String JSON_PROPERTY_SEQUENTIAL = "sequential";
  private Boolean sequential;

  public static final String JSON_PROPERTY_SINGLE_PREFIX_BLOCK = "singlePrefixBlock";
  private Boolean singlePrefixBlock;

  public static final String JSON_PROPERTY_DIVISION_STRINGS = "divisionStrings";
  private List<String> divisionStrings;

  public static final String JSON_PROPERTY_PREFIX_COUNT = "prefixCount";
  private Integer prefixCount;

  public static final String JSON_PROPERTY_BYTES = "bytes";
  private List<byte[]> bytes;

  public static final String JSON_PROPERTY_VALUE = "value";
  private Integer value;

  public static final String JSON_PROPERTY_ZERO = "zero";
  private Boolean zero;

  public static final String JSON_PROPERTY_PREFIX_LENGTH_FOR_SINGLE_BLOCK = "prefixLengthForSingleBlock";
  private Integer prefixLengthForSingleBlock;

  public static final String JSON_PROPERTY_MIN_PREFIX_LENGTH_FOR_BLOCK = "minPrefixLengthForBlock";
  private Integer minPrefixLengthForBlock;

  public static final String JSON_PROPERTY_FULL_RANGE = "fullRange";
  private Boolean fullRange;

  public static final String JSON_PROPERTY_UPPER_BYTES = "upperBytes";
  private List<byte[]> upperBytes;

  public static final String JSON_PROPERTY_UPPER_VALUE = "upperValue";
  private Integer upperValue;

  public static final String JSON_PROPERTY_MAX = "max";
  private Boolean max;

  public static final String JSON_PROPERTY_MULTIPLE = "multiple";
  private Boolean multiple;

  public static final String JSON_PROPERTY_DIVISION_COUNT = "divisionCount";
  private Integer divisionCount;

  public static final String JSON_PROPERTY_SEGMENT_COUNT = "segmentCount";
  private Integer segmentCount;

  public static final String JSON_PROPERTY_SEGMENT_STRINGS = "segmentStrings";
  private List<String> segmentStrings;

  public static final String JSON_PROPERTY_MACADDRESS = "macaddress";
  private Boolean macaddress;

  public static final String JSON_PROPERTY_MULTICAST = "multicast";
  private Boolean multicast;

  public IPAddress() { 
  }

  public IPAddress loopback(Boolean loopback) {
    this.loopback = loopback;
    return this;
  }

   /**
   * Get loopback
   * @return loopback
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOOPBACK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getLoopback() {
    return loopback;
  }


  @JsonProperty(JSON_PROPERTY_LOOPBACK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoopback(Boolean loopback) {
    this.loopback = loopback;
  }


  public IPAddress networkPrefixLength(Integer networkPrefixLength) {
    this.networkPrefixLength = networkPrefixLength;
    return this;
  }

   /**
   * Get networkPrefixLength
   * @return networkPrefixLength
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NETWORK_PREFIX_LENGTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getNetworkPrefixLength() {
    return networkPrefixLength;
  }


  @JsonProperty(JSON_PROPERTY_NETWORK_PREFIX_LENGTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNetworkPrefixLength(Integer networkPrefixLength) {
    this.networkPrefixLength = networkPrefixLength;
  }


  public IPAddress lower(IPAddress lower) {
    this.lower = lower;
    return this;
  }

   /**
   * Get lower
   * @return lower
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOWER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public IPAddress getLower() {
    return lower;
  }


  @JsonProperty(JSON_PROPERTY_LOWER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLower(IPAddress lower) {
    this.lower = lower;
  }


  public IPAddress upper(IPAddress upper) {
    this.upper = upper;
    return this;
  }

   /**
   * Get upper
   * @return upper
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPPER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public IPAddress getUpper() {
    return upper;
  }


  @JsonProperty(JSON_PROPERTY_UPPER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpper(IPAddress upper) {
    this.upper = upper;
  }


  public IPAddress local(Boolean local) {
    this.local = local;
    return this;
  }

   /**
   * Get local
   * @return local
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOCAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getLocal() {
    return local;
  }


  @JsonProperty(JSON_PROPERTY_LOCAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocal(Boolean local) {
    this.local = local;
  }


  public IPAddress ipv4(Boolean ipv4) {
    this.ipv4 = ipv4;
    return this;
  }

   /**
   * Get ipv4
   * @return ipv4
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IPV4)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIpv4() {
    return ipv4;
  }


  @JsonProperty(JSON_PROPERTY_IPV4)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIpv4(Boolean ipv4) {
    this.ipv4 = ipv4;
  }


  public IPAddress network(IPAddressNetworkObjectObjectObjectObjectObject network) {
    this.network = network;
    return this;
  }

   /**
   * Get network
   * @return network
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NETWORK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public IPAddressNetworkObjectObjectObjectObjectObject getNetwork() {
    return network;
  }


  @JsonProperty(JSON_PROPERTY_NETWORK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNetwork(IPAddressNetworkObjectObjectObjectObjectObject network) {
    this.network = network;
  }


  public IPAddress section(IPAddressSection section) {
    this.section = section;
    return this;
  }

   /**
   * Get section
   * @return section
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public IPAddressSection getSection() {
    return section;
  }


  @JsonProperty(JSON_PROPERTY_SECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSection(IPAddressSection section) {
    this.section = section;
  }


  public IPAddress maxSegmentValue(Integer maxSegmentValue) {
    this.maxSegmentValue = maxSegmentValue;
    return this;
  }

   /**
   * Get maxSegmentValue
   * @return maxSegmentValue
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAX_SEGMENT_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMaxSegmentValue() {
    return maxSegmentValue;
  }


  @JsonProperty(JSON_PROPERTY_MAX_SEGMENT_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxSegmentValue(Integer maxSegmentValue) {
    this.maxSegmentValue = maxSegmentValue;
  }


  public IPAddress nonZeroHostCount(Integer nonZeroHostCount) {
    this.nonZeroHostCount = nonZeroHostCount;
    return this;
  }

   /**
   * Get nonZeroHostCount
   * @return nonZeroHostCount
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NON_ZERO_HOST_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getNonZeroHostCount() {
    return nonZeroHostCount;
  }


  @JsonProperty(JSON_PROPERTY_NON_ZERO_HOST_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNonZeroHostCount(Integer nonZeroHostCount) {
    this.nonZeroHostCount = nonZeroHostCount;
  }


  public IPAddress bytesPerSegment(Integer bytesPerSegment) {
    this.bytesPerSegment = bytesPerSegment;
    return this;
  }

   /**
   * Get bytesPerSegment
   * @return bytesPerSegment
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BYTES_PER_SEGMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getBytesPerSegment() {
    return bytesPerSegment;
  }


  @JsonProperty(JSON_PROPERTY_BYTES_PER_SEGMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBytesPerSegment(Integer bytesPerSegment) {
    this.bytesPerSegment = bytesPerSegment;
  }


  public IPAddress bitsPerSegment(Integer bitsPerSegment) {
    this.bitsPerSegment = bitsPerSegment;
    return this;
  }

   /**
   * Get bitsPerSegment
   * @return bitsPerSegment
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BITS_PER_SEGMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getBitsPerSegment() {
    return bitsPerSegment;
  }


  @JsonProperty(JSON_PROPERTY_BITS_PER_SEGMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBitsPerSegment(Integer bitsPerSegment) {
    this.bitsPerSegment = bitsPerSegment;
  }


  public IPAddress byteCount(Integer byteCount) {
    this.byteCount = byteCount;
    return this;
  }

   /**
   * Get byteCount
   * @return byteCount
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BYTE_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getByteCount() {
    return byteCount;
  }


  @JsonProperty(JSON_PROPERTY_BYTE_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setByteCount(Integer byteCount) {
    this.byteCount = byteCount;
  }


  public IPAddress lowerNonZeroHost(IPAddress lowerNonZeroHost) {
    this.lowerNonZeroHost = lowerNonZeroHost;
    return this;
  }

   /**
   * Get lowerNonZeroHost
   * @return lowerNonZeroHost
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOWER_NON_ZERO_HOST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public IPAddress getLowerNonZeroHost() {
    return lowerNonZeroHost;
  }


  @JsonProperty(JSON_PROPERTY_LOWER_NON_ZERO_HOST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLowerNonZeroHost(IPAddress lowerNonZeroHost) {
    this.lowerNonZeroHost = lowerNonZeroHost;
  }


  public IPAddress sequentialBlockCount(Integer sequentialBlockCount) {
    this.sequentialBlockCount = sequentialBlockCount;
    return this;
  }

   /**
   * Get sequentialBlockCount
   * @return sequentialBlockCount
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SEQUENTIAL_BLOCK_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSequentialBlockCount() {
    return sequentialBlockCount;
  }


  @JsonProperty(JSON_PROPERTY_SEQUENTIAL_BLOCK_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSequentialBlockCount(Integer sequentialBlockCount) {
    this.sequentialBlockCount = sequentialBlockCount;
  }


  public IPAddress iterable(Object iterable) {
    this.iterable = iterable;
    return this;
  }

   /**
   * Get iterable
   * @return iterable
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ITERABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getIterable() {
    return iterable;
  }


  @JsonProperty(JSON_PROPERTY_ITERABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIterable(Object iterable) {
    this.iterable = iterable;
  }


  public IPAddress ipaddress(Boolean ipaddress) {
    this.ipaddress = ipaddress;
    return this;
  }

   /**
   * Get ipaddress
   * @return ipaddress
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IPADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIpaddress() {
    return ipaddress;
  }


  @JsonProperty(JSON_PROPERTY_IPADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIpaddress(Boolean ipaddress) {
    this.ipaddress = ipaddress;
  }


  public IPAddress ipversion(IpversionEnum ipversion) {
    this.ipversion = ipversion;
    return this;
  }

   /**
   * Get ipversion
   * @return ipversion
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IPVERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public IpversionEnum getIpversion() {
    return ipversion;
  }


  @JsonProperty(JSON_PROPERTY_IPVERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIpversion(IpversionEnum ipversion) {
    this.ipversion = ipversion;
  }


  public IPAddress ipv4Convertible(Boolean ipv4Convertible) {
    this.ipv4Convertible = ipv4Convertible;
    return this;
  }

   /**
   * Get ipv4Convertible
   * @return ipv4Convertible
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IPV4_CONVERTIBLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIpv4Convertible() {
    return ipv4Convertible;
  }


  @JsonProperty(JSON_PROPERTY_IPV4_CONVERTIBLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIpv4Convertible(Boolean ipv4Convertible) {
    this.ipv4Convertible = ipv4Convertible;
  }


  public IPAddress ipv6Convertible(Boolean ipv6Convertible) {
    this.ipv6Convertible = ipv6Convertible;
    return this;
  }

   /**
   * Get ipv6Convertible
   * @return ipv6Convertible
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IPV6_CONVERTIBLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIpv6Convertible() {
    return ipv6Convertible;
  }


  @JsonProperty(JSON_PROPERTY_IPV6_CONVERTIBLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIpv6Convertible(Boolean ipv6Convertible) {
    this.ipv6Convertible = ipv6Convertible;
  }


  public IPAddress linkLocal(Boolean linkLocal) {
    this.linkLocal = linkLocal;
    return this;
  }

   /**
   * Get linkLocal
   * @return linkLocal
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LINK_LOCAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getLinkLocal() {
    return linkLocal;
  }


  @JsonProperty(JSON_PROPERTY_LINK_LOCAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLinkLocal(Boolean linkLocal) {
    this.linkLocal = linkLocal;
  }


  public IPAddress unspecified(Boolean unspecified) {
    this.unspecified = unspecified;
    return this;
  }

   /**
   * Get unspecified
   * @return unspecified
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UNSPECIFIED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getUnspecified() {
    return unspecified;
  }


  @JsonProperty(JSON_PROPERTY_UNSPECIFIED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUnspecified(Boolean unspecified) {
    this.unspecified = unspecified;
  }


  public IPAddress anyLocal(Boolean anyLocal) {
    this.anyLocal = anyLocal;
    return this;
  }

   /**
   * Get anyLocal
   * @return anyLocal
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ANY_LOCAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAnyLocal() {
    return anyLocal;
  }


  @JsonProperty(JSON_PROPERTY_ANY_LOCAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAnyLocal(Boolean anyLocal) {
    this.anyLocal = anyLocal;
  }


  public IPAddress zeroHost(Boolean zeroHost) {
    this.zeroHost = zeroHost;
    return this;
  }

   /**
   * Get zeroHost
   * @return zeroHost
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ZERO_HOST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getZeroHost() {
    return zeroHost;
  }


  @JsonProperty(JSON_PROPERTY_ZERO_HOST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setZeroHost(Boolean zeroHost) {
    this.zeroHost = zeroHost;
  }


  public IPAddress hostMask(IPAddress hostMask) {
    this.hostMask = hostMask;
    return this;
  }

   /**
   * Get hostMask
   * @return hostMask
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HOST_MASK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public IPAddress getHostMask() {
    return hostMask;
  }


  @JsonProperty(JSON_PROPERTY_HOST_MASK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHostMask(IPAddress hostMask) {
    this.hostMask = hostMask;
  }


  public IPAddress networkMask(IPAddress networkMask) {
    this.networkMask = networkMask;
    return this;
  }

   /**
   * Get networkMask
   * @return networkMask
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NETWORK_MASK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public IPAddress getNetworkMask() {
    return networkMask;
  }


  @JsonProperty(JSON_PROPERTY_NETWORK_MASK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNetworkMask(IPAddress networkMask) {
    this.networkMask = networkMask;
  }


  public IPAddress singleNetwork(Boolean singleNetwork) {
    this.singleNetwork = singleNetwork;
    return this;
  }

   /**
   * Get singleNetwork
   * @return singleNetwork
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SINGLE_NETWORK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSingleNetwork() {
    return singleNetwork;
  }


  @JsonProperty(JSON_PROPERTY_SINGLE_NETWORK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSingleNetwork(Boolean singleNetwork) {
    this.singleNetwork = singleNetwork;
  }


  public IPAddress prefixLength(Integer prefixLength) {
    this.prefixLength = prefixLength;
    return this;
  }

   /**
   * Get prefixLength
   * @return prefixLength
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PREFIX_LENGTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPrefixLength() {
    return prefixLength;
  }


  @JsonProperty(JSON_PROPERTY_PREFIX_LENGTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrefixLength(Integer prefixLength) {
    this.prefixLength = prefixLength;
  }


  public IPAddress ipv6(Boolean ipv6) {
    this.ipv6 = ipv6;
    return this;
  }

   /**
   * Get ipv6
   * @return ipv6
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IPV6)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIpv6() {
    return ipv6;
  }


  @JsonProperty(JSON_PROPERTY_IPV6)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIpv6(Boolean ipv6) {
    this.ipv6 = ipv6;
  }


  public IPAddress hostSection(IPAddressSection hostSection) {
    this.hostSection = hostSection;
    return this;
  }

   /**
   * Get hostSection
   * @return hostSection
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HOST_SECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public IPAddressSection getHostSection() {
    return hostSection;
  }


  @JsonProperty(JSON_PROPERTY_HOST_SECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHostSection(IPAddressSection hostSection) {
    this.hostSection = hostSection;
  }


  public IPAddress networkSection(IPAddressSection networkSection) {
    this.networkSection = networkSection;
    return this;
  }

   /**
   * Get networkSection
   * @return networkSection
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NETWORK_SECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public IPAddressSection getNetworkSection() {
    return networkSection;
  }


  @JsonProperty(JSON_PROPERTY_NETWORK_SECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNetworkSection(IPAddressSection networkSection) {
    this.networkSection = networkSection;
  }


  public IPAddress segments(List<IPAddressSegment> segments) {
    this.segments = segments;
    return this;
  }

  public IPAddress addSegmentsItem(IPAddressSegment segmentsItem) {
    if (this.segments == null) {
      this.segments = new ArrayList<>();
    }
    this.segments.add(segmentsItem);
    return this;
  }

   /**
   * Get segments
   * @return segments
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SEGMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<IPAddressSegment> getSegments() {
    return segments;
  }


  @JsonProperty(JSON_PROPERTY_SEGMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSegments(List<IPAddressSegment> segments) {
    this.segments = segments;
  }


  public IPAddress count(Integer count) {
    this.count = count;
    return this;
  }

   /**
   * Get count
   * @return count
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCount() {
    return count;
  }


  @JsonProperty(JSON_PROPERTY_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCount(Integer count) {
    this.count = count;
  }


  public IPAddress bitCount(Integer bitCount) {
    this.bitCount = bitCount;
    return this;
  }

   /**
   * Get bitCount
   * @return bitCount
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BIT_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getBitCount() {
    return bitCount;
  }


  @JsonProperty(JSON_PROPERTY_BIT_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBitCount(Integer bitCount) {
    this.bitCount = bitCount;
  }


  public IPAddress prefixed(Boolean prefixed) {
    this.prefixed = prefixed;
    return this;
  }

   /**
   * Get prefixed
   * @return prefixed
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PREFIXED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getPrefixed() {
    return prefixed;
  }


  @JsonProperty(JSON_PROPERTY_PREFIXED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrefixed(Boolean prefixed) {
    this.prefixed = prefixed;
  }


  public IPAddress prefixBlock(Boolean prefixBlock) {
    this.prefixBlock = prefixBlock;
    return this;
  }

   /**
   * Get prefixBlock
   * @return prefixBlock
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PREFIX_BLOCK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getPrefixBlock() {
    return prefixBlock;
  }


  @JsonProperty(JSON_PROPERTY_PREFIX_BLOCK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrefixBlock(Boolean prefixBlock) {
    this.prefixBlock = prefixBlock;
  }


  public IPAddress sequentialBlockIndex(Integer sequentialBlockIndex) {
    this.sequentialBlockIndex = sequentialBlockIndex;
    return this;
  }

   /**
   * Get sequentialBlockIndex
   * @return sequentialBlockIndex
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SEQUENTIAL_BLOCK_INDEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSequentialBlockIndex() {
    return sequentialBlockIndex;
  }


  @JsonProperty(JSON_PROPERTY_SEQUENTIAL_BLOCK_INDEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSequentialBlockIndex(Integer sequentialBlockIndex) {
    this.sequentialBlockIndex = sequentialBlockIndex;
  }


  public IPAddress sequential(Boolean sequential) {
    this.sequential = sequential;
    return this;
  }

   /**
   * Get sequential
   * @return sequential
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SEQUENTIAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSequential() {
    return sequential;
  }


  @JsonProperty(JSON_PROPERTY_SEQUENTIAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSequential(Boolean sequential) {
    this.sequential = sequential;
  }


  public IPAddress singlePrefixBlock(Boolean singlePrefixBlock) {
    this.singlePrefixBlock = singlePrefixBlock;
    return this;
  }

   /**
   * Get singlePrefixBlock
   * @return singlePrefixBlock
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SINGLE_PREFIX_BLOCK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSinglePrefixBlock() {
    return singlePrefixBlock;
  }


  @JsonProperty(JSON_PROPERTY_SINGLE_PREFIX_BLOCK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSinglePrefixBlock(Boolean singlePrefixBlock) {
    this.singlePrefixBlock = singlePrefixBlock;
  }


  public IPAddress divisionStrings(List<String> divisionStrings) {
    this.divisionStrings = divisionStrings;
    return this;
  }

  public IPAddress addDivisionStringsItem(String divisionStringsItem) {
    if (this.divisionStrings == null) {
      this.divisionStrings = new ArrayList<>();
    }
    this.divisionStrings.add(divisionStringsItem);
    return this;
  }

   /**
   * Get divisionStrings
   * @return divisionStrings
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIVISION_STRINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getDivisionStrings() {
    return divisionStrings;
  }


  @JsonProperty(JSON_PROPERTY_DIVISION_STRINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDivisionStrings(List<String> divisionStrings) {
    this.divisionStrings = divisionStrings;
  }


  public IPAddress prefixCount(Integer prefixCount) {
    this.prefixCount = prefixCount;
    return this;
  }

   /**
   * Get prefixCount
   * @return prefixCount
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PREFIX_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPrefixCount() {
    return prefixCount;
  }


  @JsonProperty(JSON_PROPERTY_PREFIX_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrefixCount(Integer prefixCount) {
    this.prefixCount = prefixCount;
  }


  public IPAddress bytes(List<byte[]> bytes) {
    this.bytes = bytes;
    return this;
  }

  public IPAddress addBytesItem(byte[] bytesItem) {
    if (this.bytes == null) {
      this.bytes = new ArrayList<>();
    }
    this.bytes.add(bytesItem);
    return this;
  }

   /**
   * Get bytes
   * @return bytes
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BYTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<byte[]> getBytes() {
    return bytes;
  }


  @JsonProperty(JSON_PROPERTY_BYTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBytes(List<byte[]> bytes) {
    this.bytes = bytes;
  }


  public IPAddress value(Integer value) {
    this.value = value;
    return this;
  }

   /**
   * Get value
   * @return value
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getValue() {
    return value;
  }


  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValue(Integer value) {
    this.value = value;
  }


  public IPAddress zero(Boolean zero) {
    this.zero = zero;
    return this;
  }

   /**
   * Get zero
   * @return zero
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ZERO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getZero() {
    return zero;
  }


  @JsonProperty(JSON_PROPERTY_ZERO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setZero(Boolean zero) {
    this.zero = zero;
  }


  public IPAddress prefixLengthForSingleBlock(Integer prefixLengthForSingleBlock) {
    this.prefixLengthForSingleBlock = prefixLengthForSingleBlock;
    return this;
  }

   /**
   * Get prefixLengthForSingleBlock
   * @return prefixLengthForSingleBlock
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PREFIX_LENGTH_FOR_SINGLE_BLOCK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPrefixLengthForSingleBlock() {
    return prefixLengthForSingleBlock;
  }


  @JsonProperty(JSON_PROPERTY_PREFIX_LENGTH_FOR_SINGLE_BLOCK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrefixLengthForSingleBlock(Integer prefixLengthForSingleBlock) {
    this.prefixLengthForSingleBlock = prefixLengthForSingleBlock;
  }


  public IPAddress minPrefixLengthForBlock(Integer minPrefixLengthForBlock) {
    this.minPrefixLengthForBlock = minPrefixLengthForBlock;
    return this;
  }

   /**
   * Get minPrefixLengthForBlock
   * @return minPrefixLengthForBlock
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MIN_PREFIX_LENGTH_FOR_BLOCK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMinPrefixLengthForBlock() {
    return minPrefixLengthForBlock;
  }


  @JsonProperty(JSON_PROPERTY_MIN_PREFIX_LENGTH_FOR_BLOCK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMinPrefixLengthForBlock(Integer minPrefixLengthForBlock) {
    this.minPrefixLengthForBlock = minPrefixLengthForBlock;
  }


  public IPAddress fullRange(Boolean fullRange) {
    this.fullRange = fullRange;
    return this;
  }

   /**
   * Get fullRange
   * @return fullRange
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FULL_RANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getFullRange() {
    return fullRange;
  }


  @JsonProperty(JSON_PROPERTY_FULL_RANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFullRange(Boolean fullRange) {
    this.fullRange = fullRange;
  }


  public IPAddress upperBytes(List<byte[]> upperBytes) {
    this.upperBytes = upperBytes;
    return this;
  }

  public IPAddress addUpperBytesItem(byte[] upperBytesItem) {
    if (this.upperBytes == null) {
      this.upperBytes = new ArrayList<>();
    }
    this.upperBytes.add(upperBytesItem);
    return this;
  }

   /**
   * Get upperBytes
   * @return upperBytes
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPPER_BYTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<byte[]> getUpperBytes() {
    return upperBytes;
  }


  @JsonProperty(JSON_PROPERTY_UPPER_BYTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpperBytes(List<byte[]> upperBytes) {
    this.upperBytes = upperBytes;
  }


  public IPAddress upperValue(Integer upperValue) {
    this.upperValue = upperValue;
    return this;
  }

   /**
   * Get upperValue
   * @return upperValue
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPPER_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getUpperValue() {
    return upperValue;
  }


  @JsonProperty(JSON_PROPERTY_UPPER_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpperValue(Integer upperValue) {
    this.upperValue = upperValue;
  }


  public IPAddress max(Boolean max) {
    this.max = max;
    return this;
  }

   /**
   * Get max
   * @return max
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getMax() {
    return max;
  }


  @JsonProperty(JSON_PROPERTY_MAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMax(Boolean max) {
    this.max = max;
  }


  public IPAddress multiple(Boolean multiple) {
    this.multiple = multiple;
    return this;
  }

   /**
   * Get multiple
   * @return multiple
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MULTIPLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getMultiple() {
    return multiple;
  }


  @JsonProperty(JSON_PROPERTY_MULTIPLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMultiple(Boolean multiple) {
    this.multiple = multiple;
  }


  public IPAddress divisionCount(Integer divisionCount) {
    this.divisionCount = divisionCount;
    return this;
  }

   /**
   * Get divisionCount
   * @return divisionCount
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIVISION_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDivisionCount() {
    return divisionCount;
  }


  @JsonProperty(JSON_PROPERTY_DIVISION_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDivisionCount(Integer divisionCount) {
    this.divisionCount = divisionCount;
  }


  public IPAddress segmentCount(Integer segmentCount) {
    this.segmentCount = segmentCount;
    return this;
  }

   /**
   * Get segmentCount
   * @return segmentCount
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SEGMENT_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSegmentCount() {
    return segmentCount;
  }


  @JsonProperty(JSON_PROPERTY_SEGMENT_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSegmentCount(Integer segmentCount) {
    this.segmentCount = segmentCount;
  }


  public IPAddress segmentStrings(List<String> segmentStrings) {
    this.segmentStrings = segmentStrings;
    return this;
  }

  public IPAddress addSegmentStringsItem(String segmentStringsItem) {
    if (this.segmentStrings == null) {
      this.segmentStrings = new ArrayList<>();
    }
    this.segmentStrings.add(segmentStringsItem);
    return this;
  }

   /**
   * Get segmentStrings
   * @return segmentStrings
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SEGMENT_STRINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getSegmentStrings() {
    return segmentStrings;
  }


  @JsonProperty(JSON_PROPERTY_SEGMENT_STRINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSegmentStrings(List<String> segmentStrings) {
    this.segmentStrings = segmentStrings;
  }


  public IPAddress macaddress(Boolean macaddress) {
    this.macaddress = macaddress;
    return this;
  }

   /**
   * Get macaddress
   * @return macaddress
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MACADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getMacaddress() {
    return macaddress;
  }


  @JsonProperty(JSON_PROPERTY_MACADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMacaddress(Boolean macaddress) {
    this.macaddress = macaddress;
  }


  public IPAddress multicast(Boolean multicast) {
    this.multicast = multicast;
    return this;
  }

   /**
   * Get multicast
   * @return multicast
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MULTICAST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getMulticast() {
    return multicast;
  }


  @JsonProperty(JSON_PROPERTY_MULTICAST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMulticast(Boolean multicast) {
    this.multicast = multicast;
  }


  /**
   * Return true if this IPAddress object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IPAddress ipAddress = (IPAddress) o;
    return Objects.equals(this.loopback, ipAddress.loopback) &&
        Objects.equals(this.networkPrefixLength, ipAddress.networkPrefixLength) &&
        Objects.equals(this.lower, ipAddress.lower) &&
        Objects.equals(this.upper, ipAddress.upper) &&
        Objects.equals(this.local, ipAddress.local) &&
        Objects.equals(this.ipv4, ipAddress.ipv4) &&
        Objects.equals(this.network, ipAddress.network) &&
        Objects.equals(this.section, ipAddress.section) &&
        Objects.equals(this.maxSegmentValue, ipAddress.maxSegmentValue) &&
        Objects.equals(this.nonZeroHostCount, ipAddress.nonZeroHostCount) &&
        Objects.equals(this.bytesPerSegment, ipAddress.bytesPerSegment) &&
        Objects.equals(this.bitsPerSegment, ipAddress.bitsPerSegment) &&
        Objects.equals(this.byteCount, ipAddress.byteCount) &&
        Objects.equals(this.lowerNonZeroHost, ipAddress.lowerNonZeroHost) &&
        Objects.equals(this.sequentialBlockCount, ipAddress.sequentialBlockCount) &&
        Objects.equals(this.iterable, ipAddress.iterable) &&
        Objects.equals(this.ipaddress, ipAddress.ipaddress) &&
        Objects.equals(this.ipversion, ipAddress.ipversion) &&
        Objects.equals(this.ipv4Convertible, ipAddress.ipv4Convertible) &&
        Objects.equals(this.ipv6Convertible, ipAddress.ipv6Convertible) &&
        Objects.equals(this.linkLocal, ipAddress.linkLocal) &&
        Objects.equals(this.unspecified, ipAddress.unspecified) &&
        Objects.equals(this.anyLocal, ipAddress.anyLocal) &&
        Objects.equals(this.zeroHost, ipAddress.zeroHost) &&
        Objects.equals(this.hostMask, ipAddress.hostMask) &&
        Objects.equals(this.networkMask, ipAddress.networkMask) &&
        Objects.equals(this.singleNetwork, ipAddress.singleNetwork) &&
        Objects.equals(this.prefixLength, ipAddress.prefixLength) &&
        Objects.equals(this.ipv6, ipAddress.ipv6) &&
        Objects.equals(this.hostSection, ipAddress.hostSection) &&
        Objects.equals(this.networkSection, ipAddress.networkSection) &&
        Objects.equals(this.segments, ipAddress.segments) &&
        Objects.equals(this.count, ipAddress.count) &&
        Objects.equals(this.bitCount, ipAddress.bitCount) &&
        Objects.equals(this.prefixed, ipAddress.prefixed) &&
        Objects.equals(this.prefixBlock, ipAddress.prefixBlock) &&
        Objects.equals(this.sequentialBlockIndex, ipAddress.sequentialBlockIndex) &&
        Objects.equals(this.sequential, ipAddress.sequential) &&
        Objects.equals(this.singlePrefixBlock, ipAddress.singlePrefixBlock) &&
        Objects.equals(this.divisionStrings, ipAddress.divisionStrings) &&
        Objects.equals(this.prefixCount, ipAddress.prefixCount) &&
        Objects.equals(this.bytes, ipAddress.bytes) &&
        Objects.equals(this.value, ipAddress.value) &&
        Objects.equals(this.zero, ipAddress.zero) &&
        Objects.equals(this.prefixLengthForSingleBlock, ipAddress.prefixLengthForSingleBlock) &&
        Objects.equals(this.minPrefixLengthForBlock, ipAddress.minPrefixLengthForBlock) &&
        Objects.equals(this.fullRange, ipAddress.fullRange) &&
        Objects.equals(this.upperBytes, ipAddress.upperBytes) &&
        Objects.equals(this.upperValue, ipAddress.upperValue) &&
        Objects.equals(this.max, ipAddress.max) &&
        Objects.equals(this.multiple, ipAddress.multiple) &&
        Objects.equals(this.divisionCount, ipAddress.divisionCount) &&
        Objects.equals(this.segmentCount, ipAddress.segmentCount) &&
        Objects.equals(this.segmentStrings, ipAddress.segmentStrings) &&
        Objects.equals(this.macaddress, ipAddress.macaddress) &&
        Objects.equals(this.multicast, ipAddress.multicast);
  }

  @Override
  public int hashCode() {
    return Objects.hash(loopback, networkPrefixLength, lower, upper, local, ipv4, network, section, maxSegmentValue, nonZeroHostCount, bytesPerSegment, bitsPerSegment, byteCount, lowerNonZeroHost, sequentialBlockCount, iterable, ipaddress, ipversion, ipv4Convertible, ipv6Convertible, linkLocal, unspecified, anyLocal, zeroHost, hostMask, networkMask, singleNetwork, prefixLength, ipv6, hostSection, networkSection, segments, count, bitCount, prefixed, prefixBlock, sequentialBlockIndex, sequential, singlePrefixBlock, divisionStrings, prefixCount, bytes, value, zero, prefixLengthForSingleBlock, minPrefixLengthForBlock, fullRange, upperBytes, upperValue, max, multiple, divisionCount, segmentCount, segmentStrings, macaddress, multicast);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IPAddress {\n");
    sb.append("    loopback: ").append(toIndentedString(loopback)).append("\n");
    sb.append("    networkPrefixLength: ").append(toIndentedString(networkPrefixLength)).append("\n");
    sb.append("    lower: ").append(toIndentedString(lower)).append("\n");
    sb.append("    upper: ").append(toIndentedString(upper)).append("\n");
    sb.append("    local: ").append(toIndentedString(local)).append("\n");
    sb.append("    ipv4: ").append(toIndentedString(ipv4)).append("\n");
    sb.append("    network: ").append(toIndentedString(network)).append("\n");
    sb.append("    section: ").append(toIndentedString(section)).append("\n");
    sb.append("    maxSegmentValue: ").append(toIndentedString(maxSegmentValue)).append("\n");
    sb.append("    nonZeroHostCount: ").append(toIndentedString(nonZeroHostCount)).append("\n");
    sb.append("    bytesPerSegment: ").append(toIndentedString(bytesPerSegment)).append("\n");
    sb.append("    bitsPerSegment: ").append(toIndentedString(bitsPerSegment)).append("\n");
    sb.append("    byteCount: ").append(toIndentedString(byteCount)).append("\n");
    sb.append("    lowerNonZeroHost: ").append(toIndentedString(lowerNonZeroHost)).append("\n");
    sb.append("    sequentialBlockCount: ").append(toIndentedString(sequentialBlockCount)).append("\n");
    sb.append("    iterable: ").append(toIndentedString(iterable)).append("\n");
    sb.append("    ipaddress: ").append(toIndentedString(ipaddress)).append("\n");
    sb.append("    ipversion: ").append(toIndentedString(ipversion)).append("\n");
    sb.append("    ipv4Convertible: ").append(toIndentedString(ipv4Convertible)).append("\n");
    sb.append("    ipv6Convertible: ").append(toIndentedString(ipv6Convertible)).append("\n");
    sb.append("    linkLocal: ").append(toIndentedString(linkLocal)).append("\n");
    sb.append("    unspecified: ").append(toIndentedString(unspecified)).append("\n");
    sb.append("    anyLocal: ").append(toIndentedString(anyLocal)).append("\n");
    sb.append("    zeroHost: ").append(toIndentedString(zeroHost)).append("\n");
    sb.append("    hostMask: ").append(toIndentedString(hostMask)).append("\n");
    sb.append("    networkMask: ").append(toIndentedString(networkMask)).append("\n");
    sb.append("    singleNetwork: ").append(toIndentedString(singleNetwork)).append("\n");
    sb.append("    prefixLength: ").append(toIndentedString(prefixLength)).append("\n");
    sb.append("    ipv6: ").append(toIndentedString(ipv6)).append("\n");
    sb.append("    hostSection: ").append(toIndentedString(hostSection)).append("\n");
    sb.append("    networkSection: ").append(toIndentedString(networkSection)).append("\n");
    sb.append("    segments: ").append(toIndentedString(segments)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    bitCount: ").append(toIndentedString(bitCount)).append("\n");
    sb.append("    prefixed: ").append(toIndentedString(prefixed)).append("\n");
    sb.append("    prefixBlock: ").append(toIndentedString(prefixBlock)).append("\n");
    sb.append("    sequentialBlockIndex: ").append(toIndentedString(sequentialBlockIndex)).append("\n");
    sb.append("    sequential: ").append(toIndentedString(sequential)).append("\n");
    sb.append("    singlePrefixBlock: ").append(toIndentedString(singlePrefixBlock)).append("\n");
    sb.append("    divisionStrings: ").append(toIndentedString(divisionStrings)).append("\n");
    sb.append("    prefixCount: ").append(toIndentedString(prefixCount)).append("\n");
    sb.append("    bytes: ").append(toIndentedString(bytes)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    zero: ").append(toIndentedString(zero)).append("\n");
    sb.append("    prefixLengthForSingleBlock: ").append(toIndentedString(prefixLengthForSingleBlock)).append("\n");
    sb.append("    minPrefixLengthForBlock: ").append(toIndentedString(minPrefixLengthForBlock)).append("\n");
    sb.append("    fullRange: ").append(toIndentedString(fullRange)).append("\n");
    sb.append("    upperBytes: ").append(toIndentedString(upperBytes)).append("\n");
    sb.append("    upperValue: ").append(toIndentedString(upperValue)).append("\n");
    sb.append("    max: ").append(toIndentedString(max)).append("\n");
    sb.append("    multiple: ").append(toIndentedString(multiple)).append("\n");
    sb.append("    divisionCount: ").append(toIndentedString(divisionCount)).append("\n");
    sb.append("    segmentCount: ").append(toIndentedString(segmentCount)).append("\n");
    sb.append("    segmentStrings: ").append(toIndentedString(segmentStrings)).append("\n");
    sb.append("    macaddress: ").append(toIndentedString(macaddress)).append("\n");
    sb.append("    multicast: ").append(toIndentedString(multicast)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

