/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tum.cit.ase.artemis.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import de.tum.cit.ase.artemis.sdk.model.AttachmentUnit;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import de.tum.cit.ase.artemis.sdk.JSON;


/**
 * Slide
 */
@JsonPropertyOrder({
  Slide.JSON_PROPERTY_ID,
  Slide.JSON_PROPERTY_ATTACHMENT_UNIT,
  Slide.JSON_PROPERTY_SLIDE_IMAGE_PATH,
  Slide.JSON_PROPERTY_SLIDE_NUMBER
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-06-10T14:33:20.156837Z[Etc/UTC]")
public class Slide {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_ATTACHMENT_UNIT = "attachmentUnit";
  private AttachmentUnit attachmentUnit;

  public static final String JSON_PROPERTY_SLIDE_IMAGE_PATH = "slideImagePath";
  private String slideImagePath;

  public static final String JSON_PROPERTY_SLIDE_NUMBER = "slideNumber";
  private Integer slideNumber;

  public Slide() { 
  }

  public Slide id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Long id) {
    this.id = id;
  }


  public Slide attachmentUnit(AttachmentUnit attachmentUnit) {
    this.attachmentUnit = attachmentUnit;
    return this;
  }

   /**
   * Get attachmentUnit
   * @return attachmentUnit
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ATTACHMENT_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AttachmentUnit getAttachmentUnit() {
    return attachmentUnit;
  }


  @JsonProperty(JSON_PROPERTY_ATTACHMENT_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAttachmentUnit(AttachmentUnit attachmentUnit) {
    this.attachmentUnit = attachmentUnit;
  }


  public Slide slideImagePath(String slideImagePath) {
    this.slideImagePath = slideImagePath;
    return this;
  }

   /**
   * Get slideImagePath
   * @return slideImagePath
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SLIDE_IMAGE_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSlideImagePath() {
    return slideImagePath;
  }


  @JsonProperty(JSON_PROPERTY_SLIDE_IMAGE_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSlideImagePath(String slideImagePath) {
    this.slideImagePath = slideImagePath;
  }


  public Slide slideNumber(Integer slideNumber) {
    this.slideNumber = slideNumber;
    return this;
  }

   /**
   * Get slideNumber
   * @return slideNumber
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SLIDE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSlideNumber() {
    return slideNumber;
  }


  @JsonProperty(JSON_PROPERTY_SLIDE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSlideNumber(Integer slideNumber) {
    this.slideNumber = slideNumber;
  }


  /**
   * Return true if this Slide object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Slide slide = (Slide) o;
    return Objects.equals(this.id, slide.id) &&
        Objects.equals(this.attachmentUnit, slide.attachmentUnit) &&
        Objects.equals(this.slideImagePath, slide.slideImagePath) &&
        Objects.equals(this.slideNumber, slide.slideNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, attachmentUnit, slideImagePath, slideNumber);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Slide {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    attachmentUnit: ").append(toIndentedString(attachmentUnit)).append("\n");
    sb.append("    slideImagePath: ").append(toIndentedString(slideImagePath)).append("\n");
    sb.append("    slideNumber: ").append(toIndentedString(slideNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

