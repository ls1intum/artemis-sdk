/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tum.cit.ase.artemis.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import de.tum.cit.ase.artemis.sdk.JSON;


/**
 * FileMove
 */
@JsonPropertyOrder({
  FileMove.JSON_PROPERTY_CURRENT_FILE_PATH,
  FileMove.JSON_PROPERTY_NEW_FILENAME
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-03-27T15:31:11.360443Z[Etc/UTC]")
public class FileMove {
  public static final String JSON_PROPERTY_CURRENT_FILE_PATH = "currentFilePath";
  private String currentFilePath;

  public static final String JSON_PROPERTY_NEW_FILENAME = "newFilename";
  private String newFilename;

  public FileMove() { 
  }

  public FileMove currentFilePath(String currentFilePath) {
    this.currentFilePath = currentFilePath;
    return this;
  }

   /**
   * Get currentFilePath
   * @return currentFilePath
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CURRENT_FILE_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCurrentFilePath() {
    return currentFilePath;
  }


  @JsonProperty(JSON_PROPERTY_CURRENT_FILE_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrentFilePath(String currentFilePath) {
    this.currentFilePath = currentFilePath;
  }


  public FileMove newFilename(String newFilename) {
    this.newFilename = newFilename;
    return this;
  }

   /**
   * Get newFilename
   * @return newFilename
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NEW_FILENAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNewFilename() {
    return newFilename;
  }


  @JsonProperty(JSON_PROPERTY_NEW_FILENAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNewFilename(String newFilename) {
    this.newFilename = newFilename;
  }


  /**
   * Return true if this FileMove object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FileMove fileMove = (FileMove) o;
    return Objects.equals(this.currentFilePath, fileMove.currentFilePath) &&
        Objects.equals(this.newFilename, fileMove.newFilename);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currentFilePath, newFilename);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FileMove {\n");
    sb.append("    currentFilePath: ").append(toIndentedString(currentFilePath)).append("\n");
    sb.append("    newFilename: ").append(toIndentedString(newFilename)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

