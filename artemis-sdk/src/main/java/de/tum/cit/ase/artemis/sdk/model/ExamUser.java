/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tum.cit.ase.artemis.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import de.tum.cit.ase.artemis.sdk.model.Exam;
import de.tum.cit.ase.artemis.sdk.model.User;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import de.tum.cit.ase.artemis.sdk.JSON;


/**
 * ExamUser
 */
@JsonPropertyOrder({
  ExamUser.JSON_PROPERTY_ID,
  ExamUser.JSON_PROPERTY_ACTUAL_ROOM,
  ExamUser.JSON_PROPERTY_ACTUAL_SEAT,
  ExamUser.JSON_PROPERTY_PLANNED_ROOM,
  ExamUser.JSON_PROPERTY_PLANNED_SEAT,
  ExamUser.JSON_PROPERTY_DID_CHECK_IMAGE,
  ExamUser.JSON_PROPERTY_DID_CHECK_NAME,
  ExamUser.JSON_PROPERTY_DID_CHECK_LOGIN,
  ExamUser.JSON_PROPERTY_DID_CHECK_REGISTRATION_NUMBER,
  ExamUser.JSON_PROPERTY_SIGNING_IMAGE_PATH,
  ExamUser.JSON_PROPERTY_STUDENT_IMAGE_PATH,
  ExamUser.JSON_PROPERTY_EXAM,
  ExamUser.JSON_PROPERTY_USER
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-02-23T10:41:24.492016Z[Etc/UTC]")
public class ExamUser {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_ACTUAL_ROOM = "actualRoom";
  private String actualRoom;

  public static final String JSON_PROPERTY_ACTUAL_SEAT = "actualSeat";
  private String actualSeat;

  public static final String JSON_PROPERTY_PLANNED_ROOM = "plannedRoom";
  private String plannedRoom;

  public static final String JSON_PROPERTY_PLANNED_SEAT = "plannedSeat";
  private String plannedSeat;

  public static final String JSON_PROPERTY_DID_CHECK_IMAGE = "didCheckImage";
  private Boolean didCheckImage;

  public static final String JSON_PROPERTY_DID_CHECK_NAME = "didCheckName";
  private Boolean didCheckName;

  public static final String JSON_PROPERTY_DID_CHECK_LOGIN = "didCheckLogin";
  private Boolean didCheckLogin;

  public static final String JSON_PROPERTY_DID_CHECK_REGISTRATION_NUMBER = "didCheckRegistrationNumber";
  private Boolean didCheckRegistrationNumber;

  public static final String JSON_PROPERTY_SIGNING_IMAGE_PATH = "signingImagePath";
  private String signingImagePath;

  public static final String JSON_PROPERTY_STUDENT_IMAGE_PATH = "studentImagePath";
  private String studentImagePath;

  public static final String JSON_PROPERTY_EXAM = "exam";
  private Exam exam;

  public static final String JSON_PROPERTY_USER = "user";
  private User user;

  public ExamUser() { 
  }

  public ExamUser id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Long id) {
    this.id = id;
  }


  public ExamUser actualRoom(String actualRoom) {
    this.actualRoom = actualRoom;
    return this;
  }

   /**
   * Get actualRoom
   * @return actualRoom
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTUAL_ROOM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getActualRoom() {
    return actualRoom;
  }


  @JsonProperty(JSON_PROPERTY_ACTUAL_ROOM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActualRoom(String actualRoom) {
    this.actualRoom = actualRoom;
  }


  public ExamUser actualSeat(String actualSeat) {
    this.actualSeat = actualSeat;
    return this;
  }

   /**
   * Get actualSeat
   * @return actualSeat
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTUAL_SEAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getActualSeat() {
    return actualSeat;
  }


  @JsonProperty(JSON_PROPERTY_ACTUAL_SEAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActualSeat(String actualSeat) {
    this.actualSeat = actualSeat;
  }


  public ExamUser plannedRoom(String plannedRoom) {
    this.plannedRoom = plannedRoom;
    return this;
  }

   /**
   * Get plannedRoom
   * @return plannedRoom
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PLANNED_ROOM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPlannedRoom() {
    return plannedRoom;
  }


  @JsonProperty(JSON_PROPERTY_PLANNED_ROOM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPlannedRoom(String plannedRoom) {
    this.plannedRoom = plannedRoom;
  }


  public ExamUser plannedSeat(String plannedSeat) {
    this.plannedSeat = plannedSeat;
    return this;
  }

   /**
   * Get plannedSeat
   * @return plannedSeat
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PLANNED_SEAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPlannedSeat() {
    return plannedSeat;
  }


  @JsonProperty(JSON_PROPERTY_PLANNED_SEAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPlannedSeat(String plannedSeat) {
    this.plannedSeat = plannedSeat;
  }


  public ExamUser didCheckImage(Boolean didCheckImage) {
    this.didCheckImage = didCheckImage;
    return this;
  }

   /**
   * Get didCheckImage
   * @return didCheckImage
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DID_CHECK_IMAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDidCheckImage() {
    return didCheckImage;
  }


  @JsonProperty(JSON_PROPERTY_DID_CHECK_IMAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDidCheckImage(Boolean didCheckImage) {
    this.didCheckImage = didCheckImage;
  }


  public ExamUser didCheckName(Boolean didCheckName) {
    this.didCheckName = didCheckName;
    return this;
  }

   /**
   * Get didCheckName
   * @return didCheckName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DID_CHECK_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDidCheckName() {
    return didCheckName;
  }


  @JsonProperty(JSON_PROPERTY_DID_CHECK_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDidCheckName(Boolean didCheckName) {
    this.didCheckName = didCheckName;
  }


  public ExamUser didCheckLogin(Boolean didCheckLogin) {
    this.didCheckLogin = didCheckLogin;
    return this;
  }

   /**
   * Get didCheckLogin
   * @return didCheckLogin
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DID_CHECK_LOGIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDidCheckLogin() {
    return didCheckLogin;
  }


  @JsonProperty(JSON_PROPERTY_DID_CHECK_LOGIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDidCheckLogin(Boolean didCheckLogin) {
    this.didCheckLogin = didCheckLogin;
  }


  public ExamUser didCheckRegistrationNumber(Boolean didCheckRegistrationNumber) {
    this.didCheckRegistrationNumber = didCheckRegistrationNumber;
    return this;
  }

   /**
   * Get didCheckRegistrationNumber
   * @return didCheckRegistrationNumber
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DID_CHECK_REGISTRATION_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDidCheckRegistrationNumber() {
    return didCheckRegistrationNumber;
  }


  @JsonProperty(JSON_PROPERTY_DID_CHECK_REGISTRATION_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDidCheckRegistrationNumber(Boolean didCheckRegistrationNumber) {
    this.didCheckRegistrationNumber = didCheckRegistrationNumber;
  }


  public ExamUser signingImagePath(String signingImagePath) {
    this.signingImagePath = signingImagePath;
    return this;
  }

   /**
   * Get signingImagePath
   * @return signingImagePath
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SIGNING_IMAGE_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSigningImagePath() {
    return signingImagePath;
  }


  @JsonProperty(JSON_PROPERTY_SIGNING_IMAGE_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSigningImagePath(String signingImagePath) {
    this.signingImagePath = signingImagePath;
  }


  public ExamUser studentImagePath(String studentImagePath) {
    this.studentImagePath = studentImagePath;
    return this;
  }

   /**
   * Get studentImagePath
   * @return studentImagePath
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STUDENT_IMAGE_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStudentImagePath() {
    return studentImagePath;
  }


  @JsonProperty(JSON_PROPERTY_STUDENT_IMAGE_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStudentImagePath(String studentImagePath) {
    this.studentImagePath = studentImagePath;
  }


  public ExamUser exam(Exam exam) {
    this.exam = exam;
    return this;
  }

   /**
   * Get exam
   * @return exam
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXAM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Exam getExam() {
    return exam;
  }


  @JsonProperty(JSON_PROPERTY_EXAM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExam(Exam exam) {
    this.exam = exam;
  }


  public ExamUser user(User user) {
    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public User getUser() {
    return user;
  }


  @JsonProperty(JSON_PROPERTY_USER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUser(User user) {
    this.user = user;
  }


  /**
   * Return true if this ExamUser object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExamUser examUser = (ExamUser) o;
    return Objects.equals(this.id, examUser.id) &&
        Objects.equals(this.actualRoom, examUser.actualRoom) &&
        Objects.equals(this.actualSeat, examUser.actualSeat) &&
        Objects.equals(this.plannedRoom, examUser.plannedRoom) &&
        Objects.equals(this.plannedSeat, examUser.plannedSeat) &&
        Objects.equals(this.didCheckImage, examUser.didCheckImage) &&
        Objects.equals(this.didCheckName, examUser.didCheckName) &&
        Objects.equals(this.didCheckLogin, examUser.didCheckLogin) &&
        Objects.equals(this.didCheckRegistrationNumber, examUser.didCheckRegistrationNumber) &&
        Objects.equals(this.signingImagePath, examUser.signingImagePath) &&
        Objects.equals(this.studentImagePath, examUser.studentImagePath) &&
        Objects.equals(this.exam, examUser.exam) &&
        Objects.equals(this.user, examUser.user);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, actualRoom, actualSeat, plannedRoom, plannedSeat, didCheckImage, didCheckName, didCheckLogin, didCheckRegistrationNumber, signingImagePath, studentImagePath, exam, user);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExamUser {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    actualRoom: ").append(toIndentedString(actualRoom)).append("\n");
    sb.append("    actualSeat: ").append(toIndentedString(actualSeat)).append("\n");
    sb.append("    plannedRoom: ").append(toIndentedString(plannedRoom)).append("\n");
    sb.append("    plannedSeat: ").append(toIndentedString(plannedSeat)).append("\n");
    sb.append("    didCheckImage: ").append(toIndentedString(didCheckImage)).append("\n");
    sb.append("    didCheckName: ").append(toIndentedString(didCheckName)).append("\n");
    sb.append("    didCheckLogin: ").append(toIndentedString(didCheckLogin)).append("\n");
    sb.append("    didCheckRegistrationNumber: ").append(toIndentedString(didCheckRegistrationNumber)).append("\n");
    sb.append("    signingImagePath: ").append(toIndentedString(signingImagePath)).append("\n");
    sb.append("    studentImagePath: ").append(toIndentedString(studentImagePath)).append("\n");
    sb.append("    exam: ").append(toIndentedString(exam)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

