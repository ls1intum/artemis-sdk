/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tum.cit.ase.artemis.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import de.tum.cit.ase.artemis.sdk.model.CleanupBuildPlan200Response;
import de.tum.cit.ase.artemis.sdk.model.CoverageFileReport;
import de.tum.cit.ase.artemis.sdk.model.Feedback;
import de.tum.cit.ase.artemis.sdk.model.GetAllTextSubmissions200ResponseInner;
import de.tum.cit.ase.artemis.sdk.model.User;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import de.tum.cit.ase.artemis.sdk.JSON;


/**
 * Result
 */
@JsonPropertyOrder({
  Result.JSON_PROPERTY_ID,
  Result.JSON_PROPERTY_COMPLETION_DATE,
  Result.JSON_PROPERTY_SUCCESSFUL,
  Result.JSON_PROPERTY_SCORE,
  Result.JSON_PROPERTY_RATED,
  Result.JSON_PROPERTY_SUBMISSION,
  Result.JSON_PROPERTY_FEEDBACKS,
  Result.JSON_PROPERTY_PARTICIPATION,
  Result.JSON_PROPERTY_ASSESSOR,
  Result.JSON_PROPERTY_ASSESSMENT_TYPE,
  Result.JSON_PROPERTY_HAS_COMPLAINT,
  Result.JSON_PROPERTY_EXAMPLE_RESULT,
  Result.JSON_PROPERTY_TEST_CASE_COUNT,
  Result.JSON_PROPERTY_PASSED_TEST_CASE_COUNT,
  Result.JSON_PROPERTY_CODE_ISSUE_COUNT,
  Result.JSON_PROPERTY_COVERAGE_FILE_REPORTS_BY_TEST_CASE_NAME,
  Result.JSON_PROPERTY_FEEDBACK_TYPE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-03-31T15:20:01.980101Z[Etc/UTC]")
public class Result {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_COMPLETION_DATE = "completionDate";
  private OffsetDateTime completionDate;

  public static final String JSON_PROPERTY_SUCCESSFUL = "successful";
  private Boolean successful;

  public static final String JSON_PROPERTY_SCORE = "score";
  private Double score;

  public static final String JSON_PROPERTY_RATED = "rated";
  private Boolean rated;

  public static final String JSON_PROPERTY_SUBMISSION = "submission";
  private GetAllTextSubmissions200ResponseInner submission;

  public static final String JSON_PROPERTY_FEEDBACKS = "feedbacks";
  private List<Feedback> feedbacks;

  public static final String JSON_PROPERTY_PARTICIPATION = "participation";
  private CleanupBuildPlan200Response participation;

  public static final String JSON_PROPERTY_ASSESSOR = "assessor";
  private User assessor;

  /**
   * Gets or Sets assessmentType
   */
  public enum AssessmentTypeEnum {
    AUTOMATIC("AUTOMATIC"),
    
    SEMI_AUTOMATIC("SEMI_AUTOMATIC"),
    
    MANUAL("MANUAL");

    private String value;

    AssessmentTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AssessmentTypeEnum fromValue(String value) {
      for (AssessmentTypeEnum b : AssessmentTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ASSESSMENT_TYPE = "assessmentType";
  private AssessmentTypeEnum assessmentType;

  public static final String JSON_PROPERTY_HAS_COMPLAINT = "hasComplaint";
  private Boolean hasComplaint;

  public static final String JSON_PROPERTY_EXAMPLE_RESULT = "exampleResult";
  private Boolean exampleResult;

  public static final String JSON_PROPERTY_TEST_CASE_COUNT = "testCaseCount";
  private Integer testCaseCount;

  public static final String JSON_PROPERTY_PASSED_TEST_CASE_COUNT = "passedTestCaseCount";
  private Integer passedTestCaseCount;

  public static final String JSON_PROPERTY_CODE_ISSUE_COUNT = "codeIssueCount";
  private Integer codeIssueCount;

  public static final String JSON_PROPERTY_COVERAGE_FILE_REPORTS_BY_TEST_CASE_NAME = "coverageFileReportsByTestCaseName";
  private Map<String, Set<CoverageFileReport>> coverageFileReportsByTestCaseName = new HashMap<>();

  public static final String JSON_PROPERTY_FEEDBACK_TYPE = "feedbackType";
  private Feedback feedbackType;

  public Result() { 
  }

  public Result id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Long id) {
    this.id = id;
  }


  public Result completionDate(OffsetDateTime completionDate) {
    this.completionDate = completionDate;
    return this;
  }

   /**
   * Get completionDate
   * @return completionDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMPLETION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getCompletionDate() {
    return completionDate;
  }


  @JsonProperty(JSON_PROPERTY_COMPLETION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCompletionDate(OffsetDateTime completionDate) {
    this.completionDate = completionDate;
  }


  public Result successful(Boolean successful) {
    this.successful = successful;
    return this;
  }

   /**
   * Get successful
   * @return successful
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUCCESSFUL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSuccessful() {
    return successful;
  }


  @JsonProperty(JSON_PROPERTY_SUCCESSFUL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSuccessful(Boolean successful) {
    this.successful = successful;
  }


  public Result score(Double score) {
    this.score = score;
    return this;
  }

   /**
   * Get score
   * @return score
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SCORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getScore() {
    return score;
  }


  @JsonProperty(JSON_PROPERTY_SCORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScore(Double score) {
    this.score = score;
  }


  public Result rated(Boolean rated) {
    this.rated = rated;
    return this;
  }

   /**
   * Get rated
   * @return rated
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getRated() {
    return rated;
  }


  @JsonProperty(JSON_PROPERTY_RATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRated(Boolean rated) {
    this.rated = rated;
  }


  public Result submission(GetAllTextSubmissions200ResponseInner submission) {
    this.submission = submission;
    return this;
  }

   /**
   * Get submission
   * @return submission
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBMISSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public GetAllTextSubmissions200ResponseInner getSubmission() {
    return submission;
  }


  @JsonProperty(JSON_PROPERTY_SUBMISSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubmission(GetAllTextSubmissions200ResponseInner submission) {
    this.submission = submission;
  }


  public Result feedbacks(List<Feedback> feedbacks) {
    this.feedbacks = feedbacks;
    return this;
  }

  public Result addFeedbacksItem(Feedback feedbacksItem) {
    if (this.feedbacks == null) {
      this.feedbacks = new ArrayList<>();
    }
    this.feedbacks.add(feedbacksItem);
    return this;
  }

   /**
   * Get feedbacks
   * @return feedbacks
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FEEDBACKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Feedback> getFeedbacks() {
    return feedbacks;
  }


  @JsonProperty(JSON_PROPERTY_FEEDBACKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFeedbacks(List<Feedback> feedbacks) {
    this.feedbacks = feedbacks;
  }


  public Result participation(CleanupBuildPlan200Response participation) {
    this.participation = participation;
    return this;
  }

   /**
   * Get participation
   * @return participation
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PARTICIPATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CleanupBuildPlan200Response getParticipation() {
    return participation;
  }


  @JsonProperty(JSON_PROPERTY_PARTICIPATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setParticipation(CleanupBuildPlan200Response participation) {
    this.participation = participation;
  }


  public Result assessor(User assessor) {
    this.assessor = assessor;
    return this;
  }

   /**
   * Get assessor
   * @return assessor
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ASSESSOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public User getAssessor() {
    return assessor;
  }


  @JsonProperty(JSON_PROPERTY_ASSESSOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAssessor(User assessor) {
    this.assessor = assessor;
  }


  public Result assessmentType(AssessmentTypeEnum assessmentType) {
    this.assessmentType = assessmentType;
    return this;
  }

   /**
   * Get assessmentType
   * @return assessmentType
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ASSESSMENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AssessmentTypeEnum getAssessmentType() {
    return assessmentType;
  }


  @JsonProperty(JSON_PROPERTY_ASSESSMENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAssessmentType(AssessmentTypeEnum assessmentType) {
    this.assessmentType = assessmentType;
  }


  public Result hasComplaint(Boolean hasComplaint) {
    this.hasComplaint = hasComplaint;
    return this;
  }

   /**
   * Get hasComplaint
   * @return hasComplaint
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HAS_COMPLAINT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getHasComplaint() {
    return hasComplaint;
  }


  @JsonProperty(JSON_PROPERTY_HAS_COMPLAINT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHasComplaint(Boolean hasComplaint) {
    this.hasComplaint = hasComplaint;
  }


  public Result exampleResult(Boolean exampleResult) {
    this.exampleResult = exampleResult;
    return this;
  }

   /**
   * Get exampleResult
   * @return exampleResult
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXAMPLE_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getExampleResult() {
    return exampleResult;
  }


  @JsonProperty(JSON_PROPERTY_EXAMPLE_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExampleResult(Boolean exampleResult) {
    this.exampleResult = exampleResult;
  }


  public Result testCaseCount(Integer testCaseCount) {
    this.testCaseCount = testCaseCount;
    return this;
  }

   /**
   * Get testCaseCount
   * @return testCaseCount
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TEST_CASE_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTestCaseCount() {
    return testCaseCount;
  }


  @JsonProperty(JSON_PROPERTY_TEST_CASE_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTestCaseCount(Integer testCaseCount) {
    this.testCaseCount = testCaseCount;
  }


  public Result passedTestCaseCount(Integer passedTestCaseCount) {
    this.passedTestCaseCount = passedTestCaseCount;
    return this;
  }

   /**
   * Get passedTestCaseCount
   * @return passedTestCaseCount
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PASSED_TEST_CASE_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPassedTestCaseCount() {
    return passedTestCaseCount;
  }


  @JsonProperty(JSON_PROPERTY_PASSED_TEST_CASE_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPassedTestCaseCount(Integer passedTestCaseCount) {
    this.passedTestCaseCount = passedTestCaseCount;
  }


  public Result codeIssueCount(Integer codeIssueCount) {
    this.codeIssueCount = codeIssueCount;
    return this;
  }

   /**
   * Get codeIssueCount
   * @return codeIssueCount
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CODE_ISSUE_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCodeIssueCount() {
    return codeIssueCount;
  }


  @JsonProperty(JSON_PROPERTY_CODE_ISSUE_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCodeIssueCount(Integer codeIssueCount) {
    this.codeIssueCount = codeIssueCount;
  }


  public Result coverageFileReportsByTestCaseName(Map<String, Set<CoverageFileReport>> coverageFileReportsByTestCaseName) {
    this.coverageFileReportsByTestCaseName = coverageFileReportsByTestCaseName;
    return this;
  }

  public Result putCoverageFileReportsByTestCaseNameItem(String key, Set<CoverageFileReport> coverageFileReportsByTestCaseNameItem) {
    if (this.coverageFileReportsByTestCaseName == null) {
      this.coverageFileReportsByTestCaseName = new HashMap<>();
    }
    this.coverageFileReportsByTestCaseName.put(key, coverageFileReportsByTestCaseNameItem);
    return this;
  }

   /**
   * Get coverageFileReportsByTestCaseName
   * @return coverageFileReportsByTestCaseName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COVERAGE_FILE_REPORTS_BY_TEST_CASE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Set<CoverageFileReport>> getCoverageFileReportsByTestCaseName() {
    return coverageFileReportsByTestCaseName;
  }


  @JsonProperty(JSON_PROPERTY_COVERAGE_FILE_REPORTS_BY_TEST_CASE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCoverageFileReportsByTestCaseName(Map<String, Set<CoverageFileReport>> coverageFileReportsByTestCaseName) {
    this.coverageFileReportsByTestCaseName = coverageFileReportsByTestCaseName;
  }


  public Result feedbackType(Feedback feedbackType) {
    this.feedbackType = feedbackType;
    return this;
  }

   /**
   * Get feedbackType
   * @return feedbackType
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FEEDBACK_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Feedback getFeedbackType() {
    return feedbackType;
  }


  @JsonProperty(JSON_PROPERTY_FEEDBACK_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFeedbackType(Feedback feedbackType) {
    this.feedbackType = feedbackType;
  }


  /**
   * Return true if this Result object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Result result = (Result) o;
    return Objects.equals(this.id, result.id) &&
        Objects.equals(this.completionDate, result.completionDate) &&
        Objects.equals(this.successful, result.successful) &&
        Objects.equals(this.score, result.score) &&
        Objects.equals(this.rated, result.rated) &&
        Objects.equals(this.submission, result.submission) &&
        Objects.equals(this.feedbacks, result.feedbacks) &&
        Objects.equals(this.participation, result.participation) &&
        Objects.equals(this.assessor, result.assessor) &&
        Objects.equals(this.assessmentType, result.assessmentType) &&
        Objects.equals(this.hasComplaint, result.hasComplaint) &&
        Objects.equals(this.exampleResult, result.exampleResult) &&
        Objects.equals(this.testCaseCount, result.testCaseCount) &&
        Objects.equals(this.passedTestCaseCount, result.passedTestCaseCount) &&
        Objects.equals(this.codeIssueCount, result.codeIssueCount) &&
        Objects.equals(this.coverageFileReportsByTestCaseName, result.coverageFileReportsByTestCaseName) &&
        Objects.equals(this.feedbackType, result.feedbackType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, completionDate, successful, score, rated, submission, feedbacks, participation, assessor, assessmentType, hasComplaint, exampleResult, testCaseCount, passedTestCaseCount, codeIssueCount, coverageFileReportsByTestCaseName, feedbackType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Result {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    completionDate: ").append(toIndentedString(completionDate)).append("\n");
    sb.append("    successful: ").append(toIndentedString(successful)).append("\n");
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("    rated: ").append(toIndentedString(rated)).append("\n");
    sb.append("    submission: ").append(toIndentedString(submission)).append("\n");
    sb.append("    feedbacks: ").append(toIndentedString(feedbacks)).append("\n");
    sb.append("    participation: ").append(toIndentedString(participation)).append("\n");
    sb.append("    assessor: ").append(toIndentedString(assessor)).append("\n");
    sb.append("    assessmentType: ").append(toIndentedString(assessmentType)).append("\n");
    sb.append("    hasComplaint: ").append(toIndentedString(hasComplaint)).append("\n");
    sb.append("    exampleResult: ").append(toIndentedString(exampleResult)).append("\n");
    sb.append("    testCaseCount: ").append(toIndentedString(testCaseCount)).append("\n");
    sb.append("    passedTestCaseCount: ").append(toIndentedString(passedTestCaseCount)).append("\n");
    sb.append("    codeIssueCount: ").append(toIndentedString(codeIssueCount)).append("\n");
    sb.append("    coverageFileReportsByTestCaseName: ").append(toIndentedString(coverageFileReportsByTestCaseName)).append("\n");
    sb.append("    feedbackType: ").append(toIndentedString(feedbackType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

